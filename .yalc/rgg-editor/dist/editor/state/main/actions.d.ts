import { TreeData } from "@atlaskit/tree";
import { Addable } from "../../../scene/addables";
export declare const resetComponentProp: (componentId: string, propKey: string) => void;
export declare const setSharedComponentPropValue: (componentTypeId: string, propKey: string, propValue: any) => void;
export declare const setComponentPropValue: (componentId: string, propKey: string, propValue: any) => void;
export declare const updateSelectedComponents: (updateFn: (state: any) => any) => void;
export declare const setSelectedComponents: (selected: {
    [id: string]: true;
}, replace?: boolean) => void;
export declare const setComponentsTree: (tree: TreeData) => void;
export declare const setComponentTreeItemExpanded: (id: string, isExpanded: boolean) => void;
export declare const addUnsavedComponent: (addable: Addable, parent: string, initialProps?: any) => string;
export declare const deleteGroup: (id: string) => void;
export declare const deleteComponent: (id: string) => void;
export declare const deleteSelectedComponents: () => void;
export declare const deleteUnsavedComponent: (id: string) => void;
export declare const addDeactivatedComponent: (id: string) => void;
export declare const removeDeactivatedComponents: (ids: string[]) => void;
export declare const groupComponents: (ids: string[], groupId?: string | undefined) => void;
export declare const updateComponentLocation: (id: string, newDestination: string) => void;
export declare const setComponentName: (id: string, name: string) => void;
export declare const setGroupName: (id: string, name: string) => void;
export declare const copySelectedComponents: () => void;
export declare const cloneComponents: (components: string[]) => string[];
export declare const handlePaste: () => void;
