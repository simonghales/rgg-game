{"version":3,"file":"rgg-editor.cjs.production.min.js","sources":["../src/editor/ui/sitches.config.ts","../src/editor/componentEditor/inputs/TextInput.tsx","../src/editor/state/editor.ts","../src/utils/math.ts","../src/editor/componentEditor/inputs/NumberInput.tsx","../src/editor/componentEditor/inputs/UnknownInput.tsx","../src/editor/componentEditor/inputs/MultiNumberInput.tsx","../src/editor/state/main/store.ts","../src/utils/ids.ts","../src/editor/state/props.ts","../src/editor/state/main/getters.ts","../src/editor/state/history/store.ts","../src/editor/state/history/actions.ts","../src/editor/state/main/actions.ts","../src/editor/state/main/hooks.ts","../src/editor/state/components/store.ts","../src/editor/state/components/hooks.ts","../src/editor/hotkeys.ts","../src/scene/EditableModules.tsx","../src/custom/TransformControls.js","../src/custom/hooks.ts","../src/scene/useDraggableMesh.ts","../src/scene/InteractiveMesh.tsx","../src/scene/Editable.tsx","../src/scene/useEditableProp.ts","../src/scene/TemporaryComponents.tsx","../src/scene/EditableChildren.tsx","../src/scene/addables.ts","../src/scene/defaultComponents/EmptyObject.tsx","../src/editor/state/ui.ts","../src/editor/SceneList.tsx","../src/editor/shortcuts.ts","../src/editor/SelectedComponentListeners.tsx","../src/editor/ManagerSidebar.tsx","../src/editor/componentEditor/inputs/RigidBody3DInput.tsx","../src/editor/componentEditor/inputs/SelectInput.tsx","../src/editor/componentEditor/inputs/Options.tsx","../src/editor/componentEditor/ComponentModules.tsx","../src/editor/ui/generics.ts","../src/editor/componentEditor/config.ts","../src/editor/componentEditor/ComponentState.tsx","../src/editor/StateSidebar.tsx","../src/editor/AddingComponentMenu.tsx","../src/editor/ContextMenu.tsx","../src/editor/GlobalHotkeysListener.tsx","../src/editor/Editor.tsx","../src/scene/EditFloor.tsx","../src/scene/EditCamera.tsx","../src/editor/AddingComponentPlane.tsx","../src/scene/EditCanvas.tsx"],"sourcesContent":["import {createStyled} from \"@stitches/react\";\n\nexport const { css, styled } = createStyled({\n    tokens: {\n        colors: {\n            $darkGrey: '#0c0c0c',\n            $darkGreyLighter: '#161617',\n            $white: 'white',\n            $lightPurple: '#9494b7',\n            $faint: '#22222b',\n            $purple: '#3e3ca2',\n            $faintPurple: '#56566f',\n            $midPurple: '#636380',\n            $darkPurple: '#212052',\n            $pink: '#d72859',\n        },\n        sizes: {\n            $sidebar: '220px',\n            $sidebarPlus: '260px',\n            $headerHeight: '42px',\n        },\n        space: {\n            $0b: '2px',\n            $1: '4px',\n            $1b: '6px',\n            $2: '8px',\n            $2b: '12px',\n            $3: '16px',\n        },\n        fonts: {\n            $main: 'Roboto, sans-serif',\n        },\n        fontSizes: {\n          $1: '10px',\n          $1b: '12px',\n          $2: '14px',\n          $3: '18px',\n          $4: '22px',\n        },\n        fontWeights: {\n            $regular: '400',\n            $semi: '500',\n            $medium: '600',\n            $bold: '700',\n        },\n        radii: {\n            $1: '3px',\n            $2: '6px',\n        },\n        zIndices: {\n            $high: '9999999',\n            $max: '99999999999',\n        }\n    }\n});\n\ncss.global({\n    [`*, *:before, *:after`]: {\n        margin: 0,\n        padding: 0,\n        boxSizing: 'border-box',\n        maxWidth: '100%',\n    }\n})","import React, {useEffect, useMemo, useState} from \"react\"\nimport { styled } from \"../../ui/sitches.config\"\n\nexport interface InputProps {\n    inputId: string,\n    value: any,\n    onChange: (value: any) => void,\n}\n\nconst StyledContainer = styled('div', {})\n\nexport const StyledInput = styled('input', {\n    appearance: 'none',\n    backgroundColor: '$darkGreyLighter',\n    border: '1px solid $faintPurple',\n    color: '$lightPurple',\n    width: '100%',\n    padding: '$1b',\n    fontSize: '$1b',\n    ':focus': {\n        backgroundColor: '$darkGrey',\n        color: '$white',\n    }\n})\n\nexport const TextInput: React.FC<InputProps> = ({inputId, value, onChange: passedOnChange}) => {\n\n    const [inputValue, setInputValue] = useState(value ?? '')\n\n    useEffect(() => {\n        setInputValue(value ?? '')\n    }, [value])\n\n    const {\n        onChange,\n    } = useMemo(() => ({\n        onChange: (event: any) => {\n            const newValue = event.target.value\n            setInputValue(newValue)\n            passedOnChange(newValue)\n        },\n    }), [passedOnChange])\n\n    return (\n        <StyledContainer>\n            <StyledInput id={inputId} type=\"text\" value={inputValue} onChange={onChange}/>\n        </StyledContainer>\n    )\n}","import {proxy, ref, useProxy} from \"valtio\";\nimport {OrthographicCamera, PerspectiveCamera} from \"three\";\n\nexport enum EditorTransformMode {\n    translate = 'translate',\n    rotate = 'rotate',\n    scale = 'scale',\n}\n\nexport const editorStateProxy = proxy<{\n    editMode: boolean,\n    transformMode: EditorTransformMode,\n    groupPortalRef: any,\n    orbitRef: any,\n    selectedRef: any,\n    cameraCanvasRef: any,\n    mainCamera: null | PerspectiveCamera | OrthographicCamera,\n    transformActive: boolean,\n    addComponentKey: string,\n    movingComponents: string[],\n    addComponentPosition: {\n        x: number,\n        y: number,\n        z: number,\n    },\n}>({\n    editMode: false, // todo - set back to true\n    transformMode: EditorTransformMode.translate,\n    groupPortalRef: null,\n    orbitRef: null,\n    selectedRef: null,\n    cameraCanvasRef: null,\n    mainCamera: null,\n    transformActive: false,\n    addComponentKey: '',\n    movingComponents: [],\n    addComponentPosition: {\n        x: 0,\n        y: 0,\n        z: 0,\n    }\n})\n\nexport const useIsEditMode = () => {\n    return useProxy(editorStateProxy).editMode\n}\n\nexport const setEditMode = (editMode: boolean) => {\n    editorStateProxy.editMode = editMode\n}\n\nexport const useGroupPortalRef = () => {\n    return useProxy(editorStateProxy).groupPortalRef\n}\n\nexport const useTransformMode = () => {\n    return useProxy(editorStateProxy).transformMode\n}\n\nexport const setTransformMode = (mode: EditorTransformMode) => {\n    editorStateProxy.transformMode = mode\n}\n\nexport enum PendingPasteType {\n    COMPONENTS = 'COMPONENTS'\n}\n\nexport type PendingPaste = {\n    type: PendingPasteType,\n    data: any,\n}\n\nexport const clipboardProxy = proxy<{\n    pendingPaste: PendingPaste | null\n}>({\n    pendingPaste: null,\n})\n\nexport const addToClipboard = (pendingPaste: PendingPaste) => {\n    clipboardProxy.pendingPaste = ref(pendingPaste)\n}\n\nexport const clearClipboard = () => {\n    clipboardProxy.pendingPaste = null\n}","export const parseNumber = (v: number | string) => {\n    if (typeof v === 'number') return v\n    try {\n        const _v = evaluate(v)\n        if (!isNaN(_v)) return _v\n    } catch {}\n    return parseFloat(v)\n}\n\nconst parens = /\\(([0-9+\\-*/^ .]+)\\)/ // Regex for identifying parenthetical expressions\nconst exp = /(\\d+(?:\\.\\d+)?) ?\\^ ?(\\d+(?:\\.\\d+)?)/ // Regex for identifying exponentials (x ^ y)\nconst mul = /(\\d+(?:\\.\\d+)?) ?\\* ?(\\d+(?:\\.\\d+)?)/ // Regex for identifying multiplication (x * y)\nconst div = /(\\d+(?:\\.\\d+)?) ?\\/ ?(\\d+(?:\\.\\d+)?)/ // Regex for identifying division (x / y)\nconst add = /(\\d+(?:\\.\\d+)?) ?\\+ ?(\\d+(?:\\.\\d+)?)/ // Regex for identifying addition (x + y)\nconst sub = /(\\d+(?:\\.\\d+)?) ?- ?(\\d+(?:\\.\\d+)?)/ // Regex for identifying subtraction (x - y)\n\n/**\n * Copyright: copied from here: https://stackoverflow.com/a/63105543\n * by @aanrudolph2 https://github.com/aanrudolph2\n *\n * Evaluates a numerical expression as a string and returns a Number\n * Follows standard PEMDAS operation ordering\n * @param {String} expr Numerical expression input\n * @returns {Number} Result of expression\n */\nfunction evaluate(expr: string): number {\n    if (isNaN(Number(expr))) {\n        if (parens.test(expr)) {\n            const newExpr = expr.replace(parens, (_match, subExpr) => String(evaluate(subExpr)))\n            return evaluate(newExpr)\n        } else if (exp.test(expr)) {\n            const newExpr = expr.replace(exp, (_match, base, pow) => String(Math.pow(Number(base), Number(pow))))\n            return evaluate(newExpr)\n        } else if (mul.test(expr)) {\n            const newExpr = expr.replace(mul, (_match, a, b) => String(Number(a) * Number(b)))\n            return evaluate(newExpr)\n        } else if (div.test(expr)) {\n            const newExpr = expr.replace(div, (_match, a, b) => {\n                // b can equal either 0 or \"0\" this is on purpose\n                // eslint-disable-next-line eqeqeq\n                if (b != 0) return String(Number(a) / Number(b))\n                else throw new Error('Division by zero')\n            })\n            return evaluate(newExpr)\n        } else if (add.test(expr)) {\n            const newExpr = expr.replace(add, (_match, a: string, b: string) => String(Number(a) + Number(b)))\n            return evaluate(newExpr)\n        } else if (sub.test(expr)) {\n            const newExpr = expr.replace(sub, (_match, a, b) => String(Number(a) - Number(b)))\n            return evaluate(newExpr)\n        } else {\n            return Number(expr)\n        }\n    }\n    return Number(expr)\n}","import React, {useEffect, useMemo, useState} from \"react\"\nimport {styled} from \"../../ui/sitches.config\";\nimport {InputProps, StyledInput} from \"./TextInput\";\nimport {parseNumber} from \"../../../utils/math\";\n\nconst StyledContainer = styled('div', {})\n\nexport const NumberInput: React.FC<InputProps> = ({inputId, value, onChange: passedOnChange}) => {\n\n    const [inputValue, setInputValue] = useState(value ?? 0)\n\n    useEffect(() => {\n        setInputValue(value ?? 0)\n    }, [value])\n\n    const {\n        onChange,\n    } = useMemo(() => ({\n        onChange: (event: any) => {\n            const newValue = parseNumber(event.target.value)\n            setInputValue(newValue)\n            passedOnChange(newValue)\n        },\n    }), [passedOnChange])\n\n    return (\n        <StyledContainer>\n            <StyledInput id={inputId} type=\"number\" value={inputValue} onChange={onChange}/>\n        </StyledContainer>\n    )\n}","import React, {useState} from \"react\"\nimport {InputProps, TextInput} from \"./TextInput\";\nimport {NumberInput} from \"./NumberInput\";\n\nconst inputComponents = {\n    text: {\n        input: TextInput,\n    },\n    number: {\n        input: NumberInput,\n    }\n}\n\nconst UnknownInput: React.FC<InputProps> = (props) => {\n    const [InputComponent] = useState(() => {\n        const {value} = props\n        if (typeof value === 'number') {\n            return inputComponents.number.input\n        }\n        return inputComponents.text.input\n    })\n    return <InputComponent {...props}/>\n}\n\nexport default UnknownInput","import React from \"react\"\nimport { styled } from \"../../ui/sitches.config\";\nimport {InputProps} from \"./TextInput\";\nimport UnknownInput from \"./UnknownInput\";\n\nconst StyledContainer = styled('div', {\n    display: 'grid',\n    gridTemplateColumns: 'minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr)',\n    columnGap: '$2b',\n})\n\nconst StyledItem = styled('div', {\n    display: 'grid',\n    alignItems: 'center',\n    columnGap: '$1b',\n    gridTemplateColumns: 'auto minmax(0, 1fr)'\n})\n\nconst StyledLabel = styled('label', {\n    fontSize: '$1b',\n})\n\nexport const MultiNumberInput: React.FC<InputProps> = ({inputId, value, onChange: passedOnChange}) => {\n    return (\n        <StyledContainer>\n            {\n                Object.entries(value).map(([entryKey, entryValue], index) => {\n                    const id = index === 0 ? inputId : `${inputId}/${entryKey}`\n                    return (\n                        <StyledItem key={entryKey}>\n                            <StyledLabel htmlFor={id}>{entryKey}</StyledLabel>\n                            <UnknownInput inputId={id} value={entryValue} onChange={(newValue: any) => {\n                                passedOnChange({\n                                    ...value,\n                                    [entryKey]: newValue,\n                                })\n                            }}/>\n                        </StyledItem>\n                    )\n                })\n            }\n        </StyledContainer>\n    )\n}","import create from \"zustand\";\nimport {persist} from \"zustand/middleware\";\nimport {MainStateStore} from \"./types\";\n\nexport const initialStoreState: MainStateStore = {\n    componentNames: {},\n    components: {},\n    sharedComponents: {},\n    selectedComponents: {},\n    componentsTree: {},\n    unsavedComponents: {},\n    deactivatedComponents: {},\n    groups: {},\n    groupedComponents: {},\n}\n\nexport let revertState: MainStateStore = initialStoreState\n\nexport const useMainStateStore = create<MainStateStore>(persist(() => (initialStoreState), {\n    name: 'mainStateStore',\n    // @ts-ignore\n    onRehydrateStorage: () => {\n        return (state: MainStateStore) => {\n            revertState = state\n        }\n    },\n    version: 5,\n    blacklist: []\n}))\n\nconst {\n    setState: setMainStateStoreState,\n    getState: getMainStateStoreState,\n} = useMainStateStore\n\nexport {\n    setMainStateStoreState,\n    getMainStateStoreState,\n}","let incrementor = 0\n\nexport const generateUid = () => {\n    incrementor += 1\n    return (Date.now() + incrementor).toString()\n}\n\nexport const getCombinedId = (ids: string[]) => {\n    return ids.join('/')\n}","import create from \"zustand\";\n\n\n\nexport enum PropOrigin {\n    modified = 'modified',\n    initial = 'initial',\n    applied = 'applied',\n    default = 'default',\n}\n\nexport type Prop = {\n    hidden: boolean,\n    value: any,\n    type: PropOrigin,\n}\n\ntype PropsStore = {\n    components: {\n        [key: string]: {\n            [key: string]: Prop,\n        }\n    }\n}\n\nexport const usePropsStore = create<PropsStore>(() => ({\n    components: {},\n}))\n\nexport const setComponentProps = (id: string, updateFn: (state: any) => any) => {\n    usePropsStore.setState(state => ({\n        components: {\n            ...state.components,\n            [id]: updateFn(state.components[id] ?? {}),\n        }\n    }))\n}\n\nexport const useComponentProps = (id: string) => {\n    return usePropsStore(state => state.components[id]) ?? {}\n}","import {getMainStateStoreState} from \"./store\";\n\nexport const getSelectedComponents = () => {\n    return getMainStateStoreState().selectedComponents\n}\n\nexport const getUnsavedComponent = (id: string) => {\n    return getMainStateStoreState().unsavedComponents[id]\n}","// @ts-ignore\nimport create from \"zustand\";\nimport {persist} from \"zustand/middleware\";\nimport {HistoryStore} from \"./types\";\n\n// @ts-ignore\nexport const useHistoryStore = create<HistoryStore>(persist(() => ({\n    pastSnapshots: [],\n    futureSnapshots: [],\n}), {\n    name: 'historyStore',\n    version: 1,\n}))","import {useHistoryStore} from \"./store\";\nimport {useMainStateStore} from \"../main/store\";\n\nexport const storeSnapshot = () => {\n    useHistoryStore.setState(state => {\n        const pastSnapshots = state.pastSnapshots.concat([useMainStateStore.getState()])\n        if (pastSnapshots.length > 20) {\n            pastSnapshots.shift()\n        }\n        return {\n            pastSnapshots,\n            futureSnapshots: [],\n        }\n    })\n}\n\nexport const undoState = () => {\n    const pastSnapshots = useHistoryStore.getState().pastSnapshots\n    const newSnapshot = pastSnapshots[pastSnapshots.length - 1]\n    if (!newSnapshot) return\n    const currentSnapshot = useMainStateStore.getState()\n    useMainStateStore.setState(newSnapshot)\n    useHistoryStore.setState(state => {\n        return {\n            pastSnapshots: pastSnapshots.slice(0, pastSnapshots.length - 1),\n            futureSnapshots: state.futureSnapshots.concat([currentSnapshot])\n        }\n    })\n}\n\nexport const redoState = () => {\n    const futureSnapshots = useHistoryStore.getState().futureSnapshots\n    const newSnapshot = futureSnapshots[futureSnapshots.length - 1]\n    if (!newSnapshot) return\n    const currentSnapshot = useMainStateStore.getState()\n    useMainStateStore.setState(newSnapshot)\n    useHistoryStore.setState(state => {\n        return {\n            futureSnapshots: futureSnapshots.slice(0, futureSnapshots.length - 1),\n            pastSnapshots: state.pastSnapshots.concat([currentSnapshot])\n        }\n    })\n}","import {getMainStateStoreState, setMainStateStoreState} from \"./store\";\nimport {TreeData} from \"@atlaskit/tree\";\nimport {MainStateStore, StoredComponentState} from \"./types\";\nimport {Addable} from \"../../../scene/addables\";\nimport {generateUid, getCombinedId} from \"../../../utils/ids\";\nimport {predefinedPropKeys} from \"../../componentEditor/config\";\nimport {ROOT_ID} from \"../../SceneList\";\nimport {addToClipboard, clearClipboard, clipboardProxy, PendingPasteType} from \"../editor\";\nimport {getSelectedComponents} from \"./getters\";\nimport {storeSnapshot} from \"../history/actions\";\n\nexport const resetComponentProp = (componentId: string, propKey: string) => {\n    setMainStateStoreState(state => {\n        let component = state.components[componentId] ?? {}\n        component = {\n            ...component,\n            overriddenState: {\n                ...(component.overriddenState ?? {}),\n                [propKey]: true,\n            }\n        }\n        return {\n            components: {\n                ...state.components,\n                [componentId]: component,\n            }\n        }\n    })\n}\n\nexport const setSharedComponentPropValue = (componentTypeId: string, propKey: string, propValue: any) => {\n    setMainStateStoreState(state => {\n        let component = state.sharedComponents[componentTypeId] ?? {}\n        component = {\n            ...component,\n            appliedState: {\n                ...(component.appliedState ?? {}),\n                [propKey]: {\n                    value: propValue,\n                }\n            }\n        }\n        return {\n            sharedComponents: {\n                ...state.sharedComponents,\n                [componentTypeId]: component,\n            }\n        }\n    })\n}\n\nexport const setComponentPropValue = (componentId: string, propKey: string, propValue: any) => {\n    setMainStateStoreState(state => {\n        let component = state.components[componentId] ?? {}\n        let updatedValue = propValue\n        if (typeof propValue === 'function') {\n            const {modifiedState = {}} = component\n            const { [propKey]: originalProp = {\n                value: undefined,\n            } } = modifiedState\n            const {\n                value\n            } = originalProp\n            updatedValue = propValue(value)\n        }\n        component = {\n            ...component,\n            modifiedState: {\n                ...(component.modifiedState ?? {}),\n                [propKey]: {\n                    value: updatedValue,\n                }\n            }\n        }\n        if (component.overriddenState && component.overriddenState[propKey]) {\n            delete component.overriddenState[propKey]\n        }\n        return {\n            components: {\n                ...state.components,\n                [componentId]: component,\n            }\n        }\n    })\n}\n\nexport const updateSelectedComponents = (updateFn: (state: any) => any) => {\n    setMainStateStoreState(state => ({\n        selectedComponents: updateFn(state.selectedComponents),\n    }))\n}\n\nexport const setSelectedComponents = (selected: {\n    [id: string]: true,\n}, replace: boolean = true) => {\n    setMainStateStoreState(state => ({\n        selectedComponents: replace ? selected : {\n            ...state.selectedComponents,\n            ...selected,\n        }\n    }))\n}\n\nexport const setComponentsTree = (tree: TreeData) => {\n    const componentsTree: MainStateStore['componentsTree'] = {}\n    Object.values(tree.items).forEach(({id, children, isExpanded}) => {\n        componentsTree[id] = {\n            children: children as string[],\n            isExpanded,\n        }\n    })\n    setMainStateStoreState({\n        componentsTree,\n    })\n}\n\nexport const setComponentTreeItemExpanded = (id: string, isExpanded: boolean) => {\n    setMainStateStoreState(state => {\n        return {\n            componentsTree: {\n                ...state.componentsTree,\n                [id]: {\n                    ...(state.componentsTree[id] ?? {\n                        children: [],\n                    }),\n                    isExpanded,\n                }\n            }\n        }\n    })\n}\n\nexport const addUnsavedComponent = (addable: Addable, parent: string, initialProps?: any) => {\n    const id = generateUid()\n    setMainStateStoreState(state => {\n        return {\n            unsavedComponents: {\n                ...state.unsavedComponents,\n                [id]: {\n                    uid: id,\n                    name: addable.name,\n                    componentId: addable.id,\n                    children: [],\n                    isRoot: !parent,\n                    initialProps: {\n                        ...(addable.props ?? {}),\n                        ...(initialProps ?? {})\n                    },\n                }\n            }\n        }\n    })\n    if (parent) {\n        setComponentPropValue(parent, predefinedPropKeys.children, (state: string[]) => {\n            state = state ? state : []\n            return state.concat([id])\n        })\n    }\n    return getCombinedId([parent, id])\n}\n\nconst getGroupChildren = (groupId: string) => {\n    const state = getMainStateStoreState()\n    const groupChildren: string[] = []\n    Object.entries(state.groupedComponents).forEach(([componentId, componentIdGroup]) => {\n        if (componentIdGroup === groupId) {\n            groupChildren.push(componentId)\n        }\n    })\n    return groupChildren\n}\n\nexport const deleteGroup = (id: string) => {\n    const children = getGroupChildren(id)\n    children.forEach(childId => {\n        deleteComponent(childId)\n    })\n    setMainStateStoreState(state => {\n        const updatedGroups = {\n            ...state.groups,\n        }\n        delete updatedGroups[id]\n        return {\n            groups: updatedGroups\n        }\n    })\n}\n\nexport const deleteComponent = (id: string) => {\n    const state = getMainStateStoreState()\n    if (state.groups[id]) {\n        deleteGroup(id)\n    } else if (state.unsavedComponents[id]) {\n        deleteUnsavedComponent(id)\n    } else {\n        addDeactivatedComponent(id)\n    }\n    // todo - deselect deleted components\n}\n\n\nexport const deleteSelectedComponents = () => {\n    storeSnapshot()\n    const selectedComponents = getMainStateStoreState().selectedComponents\n    Object.keys(selectedComponents).forEach((component) => {\n        deleteComponent(component)\n    })\n}\n\nexport const deleteUnsavedComponent = (id: string) => {\n    setMainStateStoreState(state => {\n        const updated = {\n            ...state.unsavedComponents,\n        }\n        delete updated[id]\n        return {\n            unsavedComponents: updated,\n        }\n    })\n}\n\nexport const addDeactivatedComponent = (id: string) => {\n    setMainStateStoreState(state => {\n        return {\n            deactivatedComponents: {\n                ...state.deactivatedComponents,\n                [id]: true,\n            }\n        }\n    })\n}\n\nexport const removeDeactivatedComponents = (ids: string[]) => {\n    setMainStateStoreState(state => {\n        const updated = {\n            ...state.deactivatedComponents,\n        }\n        ids.forEach((id) => {\n            delete updated[id]\n        })\n        return {\n            deactivatedComponents: updated,\n        }\n    })\n}\n\nexport const groupComponents = (ids: string[], groupId?: string) => {\n    let sameParent = true\n    let currentParent = ''\n    const groupedComponents = getMainStateStoreState().groupedComponents\n    ids.forEach((id) => {\n        const parentId = groupedComponents[id]\n        if (parentId) {\n            if (currentParent && currentParent !== parentId) {\n                sameParent = false\n            } else {\n                currentParent = parentId\n            }\n        }\n    })\n    // @ts-ignore\n    setMainStateStoreState(state => {\n        const update: Partial<MainStateStore> = {\n            groupedComponents: {\n                ...(state.groupedComponents ?? {}),\n            }\n        }\n        if (!groupId) {\n            groupId = generateUid()\n            update.groups = {\n                ...(state.groups ?? {}),\n                [groupId]: {\n                    name: 'Group',\n                    isExpanded: true,\n                },\n            }\n        }\n        if (sameParent) {\n            // @ts-ignore\n            update.groupedComponents[groupId] = currentParent\n        }\n        ids.forEach(id => {\n            // @ts-ignore\n            update.groupedComponents[id] = groupId\n        })\n        return update\n    })\n}\n\nexport const updateComponentLocation = (id: string, newDestination: string) => {\n    if (newDestination === ROOT_ID) {\n        setMainStateStoreState(state => {\n            const update = {\n                ...state.groupedComponents,\n            }\n            delete update[id]\n            return {\n                groupedComponents: update\n            }\n        })\n    } else {\n        const groups = getMainStateStoreState().groups\n        if (groups[newDestination]) {\n            groupComponents([id], newDestination)\n        }\n    }\n}\n\nexport const setComponentName = (id: string, name: string) => {\n    setMainStateStoreState(state => {\n        return {\n            componentNames: {\n                ...state.componentNames,\n                [id]: {\n                    name,\n                },\n            }\n        }\n    })\n}\n\nexport const setGroupName = (id: string, name: string) => {\n    setMainStateStoreState(state => {\n        return {\n            groups: {\n                ...state.groups,\n                [id]: {\n                    ...(state.groups[id] ?? {}),\n                    name,\n                }\n            }\n        }\n    })\n}\n\nexport const copySelectedComponents = () => {\n    addToClipboard({\n        type: PendingPasteType.COMPONENTS,\n        data: getSelectedComponents(),\n    })\n}\n\nconst getComponentPropValue = (component: StoredComponentState, propKey: string) => {\n    const {modifiedState = {}} = component\n    return modifiedState[propKey]\n}\n\nconst cloneComponentWithinState = (state: MainStateStore, componentId: string, componentIdWithParentId: string, parentId?: string) => {\n    console.log('looking for', componentId)\n    const rawId = generateUid()\n    const newId = parentId ? getCombinedId([parentId, rawId]) : rawId\n    const unsavedComponent = state.unsavedComponents[componentId]\n    if (unsavedComponent) {\n        state.unsavedComponents = {\n            ...state.unsavedComponents,\n            [rawId]: {\n                ...unsavedComponent,\n                uid: rawId,\n                children: [],\n            },\n        }\n    }\n    const component = state.components[componentIdWithParentId]\n    if (component) {\n        state.components = {\n            ...state.components,\n            [newId]: component,\n        }\n        const childrenProp = getComponentPropValue(component, predefinedPropKeys.children)\n        if (childrenProp) {\n            const {value: children = []} = childrenProp as {\n                value: string[],\n            }\n            const newChildren: string[] = []\n            children.forEach(childId => {\n                newChildren.push(cloneComponentWithinState(state, childId, getCombinedId([componentId, childId]), newId))\n            })\n            state.components[newId] = {\n                ...component,\n                modifiedState: {\n                    ...(component.modifiedState ?? {}),\n                    [predefinedPropKeys.children]: {\n                        value: newChildren,\n                    }\n                }\n\n            }\n        }\n    }\n    if (state.groupedComponents[componentId]) {\n        state.groupedComponents = {\n            ...state.groupedComponents,\n            [newId]: state.groupedComponents[componentId],\n        }\n    }\n    console.log('newId', newId, rawId)\n    return rawId\n}\n\nexport const cloneComponents = (components: string[]) => {\n    const newIds: string[] = []\n    setMainStateStoreState(state => {\n        const updatedState: any = {\n            ...state,\n        }\n        components.forEach(componentId => {\n            const id = cloneComponentWithinState(updatedState, componentId, componentId)\n            newIds.push(id)\n        })\n        return updatedState\n    })\n    return newIds\n}\n\nconst handlePasteComponents = (components: string[]) => {\n    storeSnapshot()\n    const addedComponents: {\n        [key: string]: true\n    } = {}\n    const newIds = cloneComponents(components)\n    newIds.forEach(componentId => {\n        addedComponents[componentId] = true\n    })\n    setSelectedComponents(addedComponents)\n}\n\nexport const handlePaste = () => {\n    if (clipboardProxy.pendingPaste) {\n        switch (clipboardProxy.pendingPaste.type) {\n            case PendingPasteType.COMPONENTS:\n                handlePasteComponents(Object.keys(clipboardProxy.pendingPaste.data))\n                break;\n            default:\n                break;\n        }\n    }\n    clearClipboard()\n}","import {useMainStateStore} from \"./store\";\n\nexport const useSelectedComponents = () => {\n    return useMainStateStore(state => state.selectedComponents)\n}\n\nexport const useSoleSelectedComponent = () => {\n    const selectedComponents = Object.keys(useSelectedComponents())\n    return selectedComponents.length === 1 ? selectedComponents[0] : ''\n}\n\nexport const useComponentState = (id: string) => {\n    return useMainStateStore(state => state.components[id]) ?? {}\n}\n\nexport const useComponentModifiedState = (id: string) => {\n    return useMainStateStore(state => state.components[id]?.modifiedState) ?? {}\n}\n\nexport const useSharedComponent = (id: string) => {\n    return useMainStateStore(state => state.sharedComponents[id]) ?? {}\n}\n\nexport const useUnsavedComponents = () => {\n    return useMainStateStore(state => state.unsavedComponents) ?? {}\n}\n\nexport const useUnsavedComponent = (id: string) => {\n    return useMainStateStore(state => state.unsavedComponents[id])\n}\n\nexport const useIsDeactivated = (id: string) => {\n    return useMainStateStore(state => state.deactivatedComponents[id]) ?? false\n}\n\nexport const useComponentName = (id: string) => {\n    return useMainStateStore(state => state.componentNames[id]?.name) ?? ''\n}","import {AnyProps, ComponentState} from \"./types\";\nimport create from \"zustand\";\n\nexport type ComponentsStore = {\n    components: {\n        [key: string]: ComponentState,\n    },\n    deactivatedComponents: {\n        [key: string]: ComponentState,\n    },\n    componentsThatCanHaveChildren: {\n        [key: string]: boolean,\n    },\n}\n\nexport const useComponentsStore = create<ComponentsStore>(() => ({\n    components: {},\n    deactivatedComponents: {},\n    componentsThatCanHaveChildren: {},\n}))\n\nexport const setComponentInitialProps = (uid: string, initialProps: AnyProps) => {\n    // @ts-ignore\n    useComponentsStore.setState(state => {\n        if (!state.components[uid]) return {}\n        return {\n            components: {\n                ...state.components,\n                [uid]: {\n                    ...(state.components[uid] ?? {}),\n                    initialProps,\n                }\n            }\n        }\n    })\n}\n\nexport const setComponentCanHaveChildren = (id: string) => {\n    useComponentsStore.setState(state => {\n        return {\n            componentsThatCanHaveChildren: {\n                ...state.componentsThatCanHaveChildren,\n                [id]: true,\n            }\n        }\n    })\n    return () => {\n        useComponentsStore.setState(state => {\n            const updated = {\n                ...state.componentsThatCanHaveChildren,\n            }\n            delete updated[id]\n            return {\n                componentsThatCanHaveChildren: updated,\n            }\n        })\n    }\n}\n\nexport const setComponentChildren = (uid: string, children: string[]) => {\n    // @ts-ignore\n    useComponentsStore.setState(state => {\n        if (!state.components[uid]) return {}\n        return {\n            components: {\n                ...state.components,\n                [uid]: {\n                    ...(state.components[uid] ?? {}),\n                    children,\n                }\n            }\n        }\n    })\n}\n\nexport const addComponent = (uid: string,\n                             name: string,\n                             children: string[],\n                             isRoot: boolean,\n                             unsaved: boolean,\n                             initialProps: AnyProps = {},\n                             componentId: string,\n                             parentId: string,\n                             rootParentId: string,\n                             ) => {\n    useComponentsStore.setState(state => {\n        return {\n            components: {\n                ...state.components,\n                [uid]: {\n                    uid,\n                    name,\n                    children,\n                    isRoot,\n                    unsaved,\n                    initialProps,\n                    componentId,\n                    parentId,\n                    rootParentId,\n                }\n            }\n        }\n    })\n}\n\nexport const removeComponent = (uid: string) => {\n    useComponentsStore.setState(state => {\n        const components = {\n            ...state.components,\n        }\n        delete components[uid]\n        return {\n            components,\n        }\n    })\n}\n\nexport const addDeactivatedComponent = (uid: string,\n                                        name: string,\n                                        children: string[],\n                                        isRoot: boolean,\n                                        unsaved: boolean,\n                                        parentId: string,\n                                        rootParentId: string,\n) => {\n    useComponentsStore.setState(state => {\n        return {\n            deactivatedComponents: {\n                ...state.deactivatedComponents,\n                [uid]: {\n                    uid,\n                    name,\n                    children,\n                    isRoot,\n                    unsaved,\n                    parentId,\n                    rootParentId,\n                }\n            }\n        }\n    })\n}\n\nexport const removeDeactivatedComponent = (uid: string) => {\n    useComponentsStore.setState(state => {\n        const components = {\n            ...state.deactivatedComponents,\n        }\n        delete components[uid]\n        return {\n            deactivatedComponents: components,\n        }\n    })\n}","import {AnyProps, ComponentState} from \"./types\";\nimport {useComponentsStore} from \"./store\";\n\nexport const useComponent = (id: string): ComponentState | undefined => {\n    return useComponentsStore(state => state.components[id])\n}\n\nexport const useComponentInitialProps = (id: string): AnyProps => {\n    const component = useComponent(id)\n    return component?.initialProps ?? {}\n}\n\nexport const useComponentCanHaveChildren = (id: string) => {\n    return useComponentsStore(state => state.componentsThatCanHaveChildren[id]) ?? false\n}","import {useEffect} from \"react\";\nimport hotkeys from \"hotkeys-js\";\n\nexport const KEYS = {\n    Delete: 8,\n    Space: 32,\n}\n\nexport const useHotkeysListener = () => {\n    useEffect(() => {\n        hotkeys('*', () => {})\n    }, [])\n}\n\nexport const isCommandPressed = () => {\n    return (hotkeys.command || hotkeys.cmd || hotkeys.control) ?? false\n}\n\nexport const isShiftPressed = () => {\n    return hotkeys.shift ?? false\n}\n\nexport const isDeletePressed = () => {\n    return hotkeys.isPressed(KEYS.Delete)\n}\n\nexport const isSpacePressed = () => {\n    return hotkeys.isPressed(KEYS.Space)\n}","import React, {MutableRefObject, useEffect} from \"react\"\nimport {BodyStatus} from \"@dimforge/rapier3d-compat\";\nimport {useEditableProp} from \"./useEditableProp\";\nimport {modulesProp, predefinedPropKeys} from \"../editor/componentEditor/config\";\nimport {useEditableContext, useEditableId, useEditableSharedProp} from \"./Editable\";\nimport {\n    ColliderValue,\n    RigidBody3dPropValue,\n    RigidBodyColliderShape,\n    RigidBodyType\n} from \"../editor/componentEditor/inputs/RigidBody3DInput\";\nimport {Euler, Object3D, Quaternion} from \"three\";\nimport {AddBodyDef, ColliderDef } from \"rgg-engine/dist/physics/helpers/rapier3d/types\";\nimport {useBodyApi, useRapier3DBody} from \"rgg-engine\";\nimport {useIsEditMode} from \"../editor/state/editor\";\nimport {Box, Sphere } from \"@react-three/drei\";\n\ninterface Props {\n    value: RigidBody3dPropValue,\n}\n\nconst getBodyType = (bodyType?: RigidBodyType): BodyStatus => {\n    switch (bodyType) {\n        case RigidBodyType.STATIC:\n            return BodyStatus.Static;\n        case RigidBodyType.KINEMATIC:\n            return BodyStatus.Kinematic;\n        default:\n            return BodyStatus.Dynamic;\n    }\n}\n\nconst generateRigidBodyCollider = (collider: ColliderValue): ColliderDef => {\n    switch (collider.colliderType) {\n        case RigidBodyColliderShape.BALL:\n            const {radius = 1} = collider\n            return {\n                type: 'Ball',\n                args: [radius],\n            }\n        default:\n            const {hx = 0.5, hy = 0.5, hz = 0.5} = collider\n            return {\n                type: 'Cubiod',\n                args: [hx, hy, hz],\n            }\n    }\n}\n\nconst generateRigidBodyColliders = (colliders: RigidBody3dPropValue['colliders'] = []): ColliderDef[] => {\n    const defs: ColliderDef[] = []\n    colliders.forEach((collider) => {\n        defs.push(generateRigidBodyCollider(collider))\n    })\n    return defs\n}\n\nconst generateRigidBodySpec = (config: RigidBody3dPropValue, position: [number, number, number], rotation: [number, number, number] = [0, 0, 0]): AddBodyDef => {\n\n    const colliders = generateRigidBodyColliders(config.colliders)\n\n    const mass = config.mass ?? 1\n\n    const quaternion = getQuaternionFromEuler(rotation[0], rotation[1], rotation[2])\n\n    const customBody = config.customBodyDef?.customBody ?? ''\n\n    return {\n        body: {\n            type: getBodyType(config.bodyType),\n            position: position,\n            quaternion: [quaternion.x, quaternion.y, quaternion.z, quaternion.w],\n            mass,\n        },\n        colliders,\n        customBody,\n    }\n}\n\nconst getQuaternionFromEuler = (x: number, y: number, z: number) => {\n    const euler = new Euler(x, y, z)\n    const quaternion = new Quaternion()\n    quaternion.setFromEuler(euler)\n    return quaternion\n}\n\nconst RigidBody3DModule: React.FC<Props & {\n    meshRef: MutableRefObject<Object3D>\n}> = ({value, meshRef}) => {\n\n    const id = useEditableId()\n    const {setSharedProp} = useEditableContext()\n\n    const {\n        x: rX,\n        y: rY,\n        z: rZ,\n    } = useEditableProp(predefinedPropKeys.rotation) ?? {\n        x: 0,\n        y: 0,\n        z: 0,\n    }\n\n    useRapier3DBody(() => {\n        const position = meshRef.current.position\n        return generateRigidBodySpec(value, [position.x, position.y, position.z], [rX, rY, rZ])\n    }, {\n        ref: meshRef,\n        id,\n    })\n\n    const api = useBodyApi(id)\n\n    useEffect(() => {\n        setSharedProp('rigidBody3dApi', api)\n    }, [api])\n\n    return null\n}\n\nconst ColliderVisualiser: React.FC<{\n    collider: ColliderValue,\n}> = ({collider}) => {\n    if (collider.colliderType === RigidBodyColliderShape.BALL) {\n        const {radius = 1} = collider\n        return (\n            <Sphere args={[radius + 0.001]} layers={[31]}>\n                <meshPhongMaterial color=\"red\" wireframe />\n            </Sphere>\n        )\n    } else if (collider.colliderType === RigidBodyColliderShape.CUBIOD) {\n        const {hx = 0.5, hy = 0.5, hz = 0.5} = collider\n        return (\n            <Box args={[hx * 2, hy * 2, hz * 2]} layers={[31]}>\n                <meshPhongMaterial color=\"red\" wireframe />\n            </Box>\n        )\n    }\n    return null\n}\n\nconst RigidBody3DModuleVisualizer: React.FC<Props & {\n    visible: boolean,\n}> = ({value, visible}) => {\n\n    const {colliders = []} = value\n    const scale = useEditableProp(predefinedPropKeys.scale) ?? {\n        x: 1,\n        y: 1,\n        z: 1,\n    }\n\n    return (\n        <group visible={visible} scale={[1 / scale.x, 1 / scale.y, 1 / scale.z]}>\n            {colliders.map((collider) => (\n                <ColliderVisualiser collider={collider} key={collider.key}/>\n            ))}\n        </group>\n    )\n}\n\nconst RigidBody3DModuleWrapper: React.FC<Props> = ({value}) => {\n\n    const meshRef = useEditableSharedProp('meshRef')\n    const isEditMode = useIsEditMode()\n\n    if (!meshRef) return null\n\n    if (!value.enabled) return null\n\n    return (\n        <>\n            {\n                !isEditMode && (\n                    <RigidBody3DModule meshRef={meshRef} value={value}/>\n                )\n            }\n            <RigidBody3DModuleVisualizer value={value} visible={isEditMode}/>\n        </>\n    )\n}\n\nexport const EditableModules: React.FC = ({children}) => {\n\n    useEditableProp(modulesProp.key)\n    const rigidBody3d = useEditableProp(predefinedPropKeys.rigidBody3d)\n\n    return (\n        <>\n            {children}\n            {\n                rigidBody3d && (\n                    <RigidBody3DModuleWrapper value={rigidBody3d}/>\n                )\n            }\n        </>\n    )\n}","import {\n    BoxGeometry,\n    BufferGeometry,\n    Color,\n    CylinderGeometry,\n    DoubleSide,\n    Euler,\n    Float32BufferAttribute,\n    Line,\n    LineBasicMaterial,\n    Matrix4,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    OctahedronGeometry,\n    PlaneGeometry,\n    Quaternion,\n    Raycaster,\n    SphereGeometry,\n    TorusGeometry,\n    Vector3\n} from 'three';\n\nvar TransformControls = function ( camera, domElement ) {\n\n    if ( domElement === undefined ) {\n\n        console.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n        domElement = document;\n\n    }\n\n    Object3D.call( this );\n\n    this.visible = false;\n    this.domElement = domElement;\n\n    var _gizmo = new TransformControlsGizmo();\n    this.add( _gizmo );\n\n    var _plane = new TransformControlsPlane();\n    this.add( _plane );\n\n    var scope = this;\n\n    // Define properties with getters/setter\n    // Setting the defined property will automatically trigger change event\n    // Defined properties are passed down to gizmo and plane\n\n    defineProperty( 'camera', camera );\n    defineProperty( 'object', undefined );\n    defineProperty( 'enabled', true );\n    defineProperty( 'axis', null );\n    defineProperty( 'mode', 'translate' );\n    defineProperty( 'translationSnap', null );\n    defineProperty( 'rotationSnap', null );\n    defineProperty( 'scaleSnap', null );\n    defineProperty( 'space', 'world' );\n    defineProperty( 'size', 1 );\n    defineProperty( 'dragging', false );\n    defineProperty( 'showX', true );\n    defineProperty( 'showY', true );\n    defineProperty( 'showZ', true );\n\n    var changeEvent = { type: 'change' };\n    var mouseDownEvent = { type: 'mouseDown' };\n    var mouseUpEvent = { type: 'mouseUp', mode: scope.mode };\n    var objectChangeEvent = { type: 'objectChange' };\n\n    // Reusable utility variables\n\n    var raycaster = new Raycaster();\n    this.raycaster = raycaster\n\n    function intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n        var allIntersections = raycaster.intersectObject( object, true );\n\n        for ( var i = 0; i < allIntersections.length; i ++ ) {\n\n            if ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n                return allIntersections[ i ];\n\n            }\n\n        }\n\n        return false;\n\n    }\n\n    var _tempVector = new Vector3();\n    var _tempVector2 = new Vector3();\n    var _tempQuaternion = new Quaternion();\n    var _unit = {\n        X: new Vector3( 1, 0, 0 ),\n        Y: new Vector3( 0, 1, 0 ),\n        Z: new Vector3( 0, 0, 1 )\n    };\n\n    var pointStart = new Vector3();\n    var pointEnd = new Vector3();\n    var offset = new Vector3();\n    var rotationAxis = new Vector3();\n    var startNorm = new Vector3();\n    var endNorm = new Vector3();\n    var rotationAngle = 0;\n\n    var cameraPosition = new Vector3();\n    var cameraQuaternion = new Quaternion();\n    var cameraScale = new Vector3();\n\n    var parentPosition = new Vector3();\n    var parentQuaternion = new Quaternion();\n    var parentQuaternionInv = new Quaternion();\n    var parentScale = new Vector3();\n\n    var worldPositionStart = new Vector3();\n    var worldQuaternionStart = new Quaternion();\n    var worldScaleStart = new Vector3();\n\n    var worldPosition = new Vector3();\n    var worldQuaternion = new Quaternion();\n    var worldQuaternionInv = new Quaternion();\n    var worldScale = new Vector3();\n\n    var eye = new Vector3();\n\n    var positionStart = new Vector3();\n    var quaternionStart = new Quaternion();\n    var scaleStart = new Vector3();\n\n    // TODO: remove properties unused in plane and gizmo\n\n    defineProperty( 'worldPosition', worldPosition );\n    defineProperty( 'worldPositionStart', worldPositionStart );\n    defineProperty( 'worldQuaternion', worldQuaternion );\n    defineProperty( 'worldQuaternionStart', worldQuaternionStart );\n    defineProperty( 'cameraPosition', cameraPosition );\n    defineProperty( 'cameraQuaternion', cameraQuaternion );\n    defineProperty( 'pointStart', pointStart );\n    defineProperty( 'pointEnd', pointEnd );\n    defineProperty( 'rotationAxis', rotationAxis );\n    defineProperty( 'rotationAngle', rotationAngle );\n    defineProperty( 'eye', eye );\n\n    {\n\n        domElement.addEventListener( 'pointerdown', onPointerDown );\n        domElement.addEventListener( 'pointermove', onPointerHover );\n        scope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n    }\n\n    this.dispose = function () {\n\n        domElement.removeEventListener( 'pointerdown', onPointerDown );\n        domElement.removeEventListener( 'pointermove', onPointerHover );\n        scope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n        scope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n        this.traverse( function ( child ) {\n\n            if ( child.geometry ) child.geometry.dispose();\n            if ( child.material ) child.material.dispose();\n\n        } );\n\n    };\n\n    // Set current object\n    this.attach = function ( object ) {\n\n        this.object = object;\n        this.visible = true;\n\n        return this;\n\n    };\n\n    // Detatch from object\n    this.detach = function () {\n\n        this.object = undefined;\n        this.visible = false;\n        this.axis = null;\n\n        return this;\n\n    };\n\n    // Defined getter, setter and store for a property\n    function defineProperty( propName, defaultValue ) {\n\n        var propValue = defaultValue;\n\n        Object.defineProperty( scope, propName, {\n\n            get: function () {\n\n                return propValue !== undefined ? propValue : defaultValue;\n\n            },\n\n            set: function ( value ) {\n\n                if ( propValue !== value ) {\n\n                    propValue = value;\n                    _plane[ propName ] = value;\n                    _gizmo[ propName ] = value;\n\n                    scope.dispatchEvent( { type: propName + '-changed', value: value } );\n                    scope.dispatchEvent( changeEvent );\n\n                }\n\n            }\n\n        } );\n\n        scope[ propName ] = defaultValue;\n        _plane[ propName ] = defaultValue;\n        _gizmo[ propName ] = defaultValue;\n\n    }\n\n    // updateMatrixWorld  updates key transformation variables\n    this.updateMatrixWorld = function () {\n\n        if ( this.object !== undefined ) {\n\n            this.object.updateMatrixWorld();\n\n            if ( this.object.parent === null ) {\n\n                console.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n            } else {\n\n                this.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\n\n            }\n\n            this.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\n\n            parentQuaternionInv.copy( parentQuaternion ).invert();\n            worldQuaternionInv.copy( worldQuaternion ).invert();\n\n        }\n\n        this.camera.updateMatrixWorld();\n        this.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\n\n        eye.copy( cameraPosition ).sub( worldPosition ).normalize();\n\n        Object3D.prototype.updateMatrixWorld.call( this );\n\n    };\n\n    this.pointerHover = function ( pointer ) {\n\n        if ( this.object === undefined || this.dragging === true ) return;\n\n        raycaster.setFromCamera( pointer, this.camera );\n\n        var intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\n\n        if ( intersect ) {\n\n            this.axis = intersect.object.name;\n\n        } else {\n\n            this.axis = null;\n\n        }\n\n    };\n\n    this.pointerDown = function ( pointer ) {\n\n        if ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n        if ( this.axis !== null ) {\n\n            raycaster.setFromCamera( pointer, this.camera );\n\n            var planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n            if ( planeIntersect ) {\n\n                var space = this.space;\n\n                if ( this.mode === 'scale' ) {\n\n                    space = 'local';\n\n                } else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\n\n                    space = 'world';\n\n                }\n\n                if ( space === 'local' && this.mode === 'rotate' ) {\n\n                    var snap = this.rotationSnap;\n\n                    if ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\n                    if ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\n                    if ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\n\n                }\n\n                this.object.updateMatrixWorld();\n                this.object.parent.updateMatrixWorld();\n\n                positionStart.copy( this.object.position );\n                quaternionStart.copy( this.object.quaternion );\n                scaleStart.copy( this.object.scale );\n\n                this.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\n\n                pointStart.copy( planeIntersect.point ).sub( worldPositionStart );\n\n            }\n\n            this.dragging = true;\n            mouseDownEvent.mode = this.mode;\n            this.dispatchEvent( mouseDownEvent );\n\n        }\n\n    };\n\n    this.pointerMove = function ( pointer ) {\n\n        var axis = this.axis;\n        var mode = this.mode;\n        var object = this.object;\n        var space = this.space;\n\n        if ( mode === 'scale' ) {\n\n            space = 'local';\n\n        } else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n            space = 'world';\n\n        }\n\n        if ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n        raycaster.setFromCamera( pointer, this.camera );\n\n        var planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n        if ( ! planeIntersect ) return;\n\n        pointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\n\n        if ( mode === 'translate' ) {\n\n            // Apply translate\n\n            offset.copy( pointEnd ).sub( pointStart );\n\n            if ( space === 'local' && axis !== 'XYZ' ) {\n\n                offset.applyQuaternion( worldQuaternionInv );\n\n            }\n\n            if ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\n            if ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\n            if ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\n\n            if ( space === 'local' && axis !== 'XYZ' ) {\n\n                offset.applyQuaternion( quaternionStart ).divide( parentScale );\n\n            } else {\n\n                offset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\n\n            }\n\n            object.position.copy( offset ).add( positionStart );\n\n            // Apply translation snap\n\n            if ( this.translationSnap ) {\n\n                if ( space === 'local' ) {\n\n                    object.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).invert() );\n\n                    if ( axis.search( 'X' ) !== - 1 ) {\n\n                        object.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n                    }\n\n                    if ( axis.search( 'Y' ) !== - 1 ) {\n\n                        object.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n                    }\n\n                    if ( axis.search( 'Z' ) !== - 1 ) {\n\n                        object.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n                    }\n\n                    object.position.applyQuaternion( quaternionStart );\n\n                }\n\n                if ( space === 'world' ) {\n\n                    if ( object.parent ) {\n\n                        object.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n                    }\n\n                    if ( axis.search( 'X' ) !== - 1 ) {\n\n                        object.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n                    }\n\n                    if ( axis.search( 'Y' ) !== - 1 ) {\n\n                        object.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n                    }\n\n                    if ( axis.search( 'Z' ) !== - 1 ) {\n\n                        object.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n                    }\n\n                    if ( object.parent ) {\n\n                        object.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n                    }\n\n                }\n\n            }\n\n        } else if ( mode === 'scale' ) {\n\n            if ( axis.search( 'XYZ' ) !== - 1 ) {\n\n                var d = pointEnd.length() / pointStart.length();\n\n                if ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\n\n                _tempVector2.set( d, d, d );\n\n            } else {\n\n                _tempVector.copy( pointStart );\n                _tempVector2.copy( pointEnd );\n\n                _tempVector.applyQuaternion( worldQuaternionInv );\n                _tempVector2.applyQuaternion( worldQuaternionInv );\n\n                _tempVector2.divide( _tempVector );\n\n                if ( axis.search( 'X' ) === - 1 ) {\n\n                    _tempVector2.x = 1;\n\n                }\n\n                if ( axis.search( 'Y' ) === - 1 ) {\n\n                    _tempVector2.y = 1;\n\n                }\n\n                if ( axis.search( 'Z' ) === - 1 ) {\n\n                    _tempVector2.z = 1;\n\n                }\n\n            }\n\n            // Apply scale\n\n            object.scale.copy( scaleStart ).multiply( _tempVector2 );\n\n            if ( this.scaleSnap ) {\n\n                if ( axis.search( 'X' ) !== - 1 ) {\n\n                    object.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n                }\n\n                if ( axis.search( 'Y' ) !== - 1 ) {\n\n                    object.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n                }\n\n                if ( axis.search( 'Z' ) !== - 1 ) {\n\n                    object.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n                }\n\n            }\n\n        } else if ( mode === 'rotate' ) {\n\n            offset.copy( pointEnd ).sub( pointStart );\n\n            var ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n            if ( axis === 'E' ) {\n\n                rotationAxis.copy( eye );\n                rotationAngle = pointEnd.angleTo( pointStart );\n\n                startNorm.copy( pointStart ).normalize();\n                endNorm.copy( pointEnd ).normalize();\n\n                rotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\n\n            } else if ( axis === 'XYZE' ) {\n\n                rotationAxis.copy( offset ).cross( eye ).normalize();\n                rotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n            } else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n                rotationAxis.copy( _unit[ axis ] );\n\n                _tempVector.copy( _unit[ axis ] );\n\n                if ( space === 'local' ) {\n\n                    _tempVector.applyQuaternion( worldQuaternion );\n\n                }\n\n                rotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\n\n            }\n\n            // Apply rotation snap\n\n            if ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n            this.rotationAngle = rotationAngle;\n\n            // Apply rotate\n            if ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n                object.quaternion.copy( quaternionStart );\n                object.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\n\n            } else {\n\n                rotationAxis.applyQuaternion( parentQuaternionInv );\n                object.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\n                object.quaternion.multiply( quaternionStart ).normalize();\n\n            }\n\n        }\n\n        this.dispatchEvent( changeEvent );\n        this.dispatchEvent( objectChangeEvent );\n\n    };\n\n    this.pointerUp = function ( pointer ) {\n\n        if ( pointer.button !== 0 ) return;\n\n        if ( this.dragging && ( this.axis !== null ) ) {\n\n            mouseUpEvent.mode = this.mode;\n            this.dispatchEvent( mouseUpEvent );\n\n        }\n\n        this.dragging = false;\n        this.axis = null;\n\n    };\n\n    // normalize mouse / touch pointer and remap {x,y} to view space.\n\n    function getPointer( event ) {\n\n        if ( scope.domElement.ownerDocument.pointerLockElement ) {\n\n            return {\n                x: 0,\n                y: 0,\n                button: event.button\n            };\n\n        } else {\n\n            var pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n            var rect = domElement.getBoundingClientRect();\n\n            return {\n                x: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\n                y: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\n                button: event.button\n            };\n\n        }\n\n    }\n\n    // mouse / touch event handlers\n\n    function onPointerHover( event ) {\n\n        if ( ! scope.enabled ) return;\n\n        switch ( event.pointerType ) {\n\n            case 'mouse':\n            case 'pen':\n                scope.pointerHover( getPointer( event ) );\n                break;\n\n        }\n\n    }\n\n    function onPointerDown( event ) {\n\n        if ( ! scope.enabled ) return;\n\n        scope.domElement.style.touchAction = 'none'; // disable touch scroll\n        scope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\n        scope.pointerHover( getPointer( event ) );\n        scope.pointerDown( getPointer( event ) );\n\n    }\n\n    function onPointerMove( event ) {\n\n        if ( ! scope.enabled ) return;\n\n        scope.pointerMove( getPointer( event ) );\n\n    }\n\n    function onPointerUp( event ) {\n\n        if ( ! scope.enabled ) return;\n\n        scope.domElement.style.touchAction = '';\n        scope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\n        scope.pointerUp( getPointer( event ) );\n\n    }\n\n    // TODO: deprecate\n\n    this.getMode = function () {\n\n        return scope.mode;\n\n    };\n\n    this.setMode = function ( mode ) {\n\n        scope.mode = mode;\n\n    };\n\n    this.setTranslationSnap = function ( translationSnap ) {\n\n        scope.translationSnap = translationSnap;\n\n    };\n\n    this.setRotationSnap = function ( rotationSnap ) {\n\n        scope.rotationSnap = rotationSnap;\n\n    };\n\n    this.setScaleSnap = function ( scaleSnap ) {\n\n        scope.scaleSnap = scaleSnap;\n\n    };\n\n    this.setSize = function ( size ) {\n\n        scope.size = size;\n\n    };\n\n    this.setSpace = function ( space ) {\n\n        scope.space = space;\n\n    };\n\n    this.update = function () {\n\n        console.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n    };\n\n};\n\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    constructor: TransformControls,\n\n    isTransformControls: true\n\n} );\n\n\nvar TransformControlsGizmo = function () {\n\n    'use strict';\n\n    Object3D.call( this );\n\n    this.type = 'TransformControlsGizmo';\n\n    // shared materials\n\n    var gizmoMaterial = new MeshBasicMaterial( {\n        depthTest: false,\n        depthWrite: false,\n        transparent: true,\n        side: DoubleSide,\n        fog: false,\n        toneMapped: false\n    } );\n\n    var gizmoLineMaterial = new LineBasicMaterial( {\n        depthTest: false,\n        depthWrite: false,\n        transparent: true,\n        linewidth: 1,\n        fog: false,\n        toneMapped: false\n    } );\n\n    // Make unique material for each axis/color\n\n    var matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n\n    var matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n\n    var matRed = gizmoMaterial.clone();\n    matRed.color.set( 0xff0000 );\n\n    var matGreen = gizmoMaterial.clone();\n    matGreen.color.set( 0x00ff00 );\n\n    var matBlue = gizmoMaterial.clone();\n    matBlue.color.set( 0x0000ff );\n\n    var matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n\n    var matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set( 0xffff00 );\n\n    var matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set( 0x00ffff );\n\n    var matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set( 0xff00ff );\n\n    var matYellow = gizmoMaterial.clone();\n    matYellow.color.set( 0xffff00 );\n\n    var matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set( 0xff0000 );\n\n    var matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set( 0x00ff00 );\n\n    var matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set( 0x0000ff );\n\n    var matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set( 0x00ffff );\n\n    var matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set( 0xff00ff );\n\n    var matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set( 0xffff00 );\n\n    var matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set( 0x787878 );\n\n    var matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25;\n\n    // reusable geometry\n\n    var arrowGeometry = new CylinderGeometry( 0, 0.05, 0.2, 12, 1, false );\n\n    var scaleHandleGeometry = new BoxGeometry( 0.125, 0.125, 0.125 );\n\n    var lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n    var CircleGeometry = function ( radius, arc ) {\n\n        var geometry = new BufferGeometry( );\n        var vertices = [];\n\n        for ( var i = 0; i <= 64 * arc; ++ i ) {\n\n            vertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n\n        }\n\n        geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n        return geometry;\n\n    };\n\n    // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n    var TranslateHelperGeometry = function () {\n\n        var geometry = new BufferGeometry();\n\n        geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n        return geometry;\n\n    };\n\n    // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n    var gizmoTranslate = {\n        X: [\n            [ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\n            [ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\n            [ new Line( lineGeometry, matLineRed ) ]\n        ],\n        Y: [\n            [ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\n            [ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\n            [ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\n        ],\n        Z: [\n            [ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\n            [ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\n            [ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\n        ],\n        XYZ: [\n            [ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\n        ],\n        XY: [\n            [ new Mesh( new PlaneGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\n            [ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\n            [ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n        ],\n        YZ: [\n            [ new Mesh( new PlaneGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n            [ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n            [ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n        ],\n        XZ: [\n            [ new Mesh( new PlaneGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n            [ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\n            [ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n        ]\n    };\n\n    var pickerTranslate = {\n        X: [\n            [ new Mesh( new CylinderGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n        ],\n        Y: [\n            [ new Mesh( new CylinderGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\n        ],\n        Z: [\n            [ new Mesh( new CylinderGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\n        ],\n        XYZ: [\n            [ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n        ],\n        XY: [\n            [ new Mesh( new PlaneGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\n        ],\n        YZ: [\n            [ new Mesh( new PlaneGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\n        ],\n        XZ: [\n            [ new Mesh( new PlaneGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\n        ]\n    };\n\n    var helperTranslate = {\n        START: [\n            [ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n        ],\n        END: [\n            [ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n        ],\n        DELTA: [\n            [ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n        ],\n        X: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n        ],\n        Y: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n        ],\n        Z: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n        ]\n    };\n\n    var gizmoRotate = {\n        X: [\n            [ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\n            [ new Mesh( new OctahedronGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\n        ],\n        Y: [\n            [ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\n            [ new Mesh( new OctahedronGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\n        ],\n        Z: [\n            [ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\n            [ new Mesh( new OctahedronGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\n        ],\n        E: [\n            [ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\n            [ new Mesh( new CylinderGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\n            [ new Mesh( new CylinderGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\n            [ new Mesh( new CylinderGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\n            [ new Mesh( new CylinderGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\n        ],\n        XYZE: [\n            [ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\n        ]\n    };\n\n    var helperRotate = {\n        AXIS: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n        ]\n    };\n\n    var pickerRotate = {\n        X: [\n            [ new Mesh( new TorusGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n        ],\n        Y: [\n            [ new Mesh( new TorusGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n        ],\n        Z: [\n            [ new Mesh( new TorusGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n        ],\n        E: [\n            [ new Mesh( new TorusGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\n        ],\n        XYZE: [\n            [ new Mesh( new SphereGeometry( 0.7, 10, 8 ), matInvisible ) ]\n        ]\n    };\n\n    var gizmoScale = {\n        X: [\n            [ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n            [ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\n        ],\n        Y: [\n            [ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\n            [ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\n        ],\n        Z: [\n            [ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\n            [ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\n        ],\n        XY: [\n            [ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\n            [ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\n            [ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n        ],\n        YZ: [\n            [ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\n            [ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n            [ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n        ],\n        XZ: [\n            [ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\n            [ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\n            [ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n        ],\n        XYZX: [\n            [ new Mesh( new BoxGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\n        ],\n        XYZY: [\n            [ new Mesh( new BoxGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\n        ],\n        XYZZ: [\n            [ new Mesh( new BoxGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\n        ]\n    };\n\n    var pickerScale = {\n        X: [\n            [ new Mesh( new CylinderGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n        ],\n        Y: [\n            [ new Mesh( new CylinderGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\n        ],\n        Z: [\n            [ new Mesh( new CylinderGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\n        ],\n        XY: [\n            [ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\n        ],\n        YZ: [\n            [ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\n        ],\n        XZ: [\n            [ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\n        ],\n        XYZX: [\n            [ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\n        ],\n        XYZY: [\n            [ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\n        ],\n        XYZZ: [\n            [ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\n        ]\n    };\n\n    var helperScale = {\n        X: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n        ],\n        Y: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n        ],\n        Z: [\n            [ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n        ]\n    };\n\n    // Creates an Object3D with gizmos described in custom hierarchy definition.\n\n    var setupGizmo = function ( gizmoMap ) {\n\n        var gizmo = new Object3D();\n\n        for ( var name in gizmoMap ) {\n\n            for ( var i = gizmoMap[ name ].length; i --; ) {\n\n                var object = gizmoMap[ name ][ i ][ 0 ].clone();\n                var position = gizmoMap[ name ][ i ][ 1 ];\n                var rotation = gizmoMap[ name ][ i ][ 2 ];\n                var scale = gizmoMap[ name ][ i ][ 3 ];\n                var tag = gizmoMap[ name ][ i ][ 4 ];\n\n                // name and tag properties are essential for picking and updating logic.\n                object.name = name;\n                object.tag = tag;\n\n                if ( position ) {\n\n                    object.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n                }\n\n                if ( rotation ) {\n\n                    object.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n                }\n\n                if ( scale ) {\n\n                    object.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n                }\n\n                object.updateMatrix();\n\n                var tempGeometry = object.geometry.clone();\n                tempGeometry.applyMatrix4( object.matrix );\n                object.geometry = tempGeometry;\n                object.renderOrder = Infinity;\n\n                object.position.set( 0, 0, 0 );\n                object.rotation.set( 0, 0, 0 );\n                object.scale.set( 1, 1, 1 );\n\n                gizmo.add( object );\n\n            }\n\n        }\n\n        return gizmo;\n\n    };\n\n    // Reusable utility variables\n\n    var tempVector = new Vector3( 0, 0, 0 );\n    var tempEuler = new Euler();\n    var alignVector = new Vector3( 0, 1, 0 );\n    var zeroVector = new Vector3( 0, 0, 0 );\n    var lookAtMatrix = new Matrix4();\n    var tempQuaternion = new Quaternion();\n    var tempQuaternion2 = new Quaternion();\n    var identityQuaternion = new Quaternion();\n\n    var unitX = new Vector3( 1, 0, 0 );\n    var unitY = new Vector3( 0, 1, 0 );\n    var unitZ = new Vector3( 0, 0, 1 );\n\n    // Gizmo creation\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n\n    this.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n    this.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n    this.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n    this.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n    this.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n    this.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n    this.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n    this.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n    this.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n    // Pickers should be hidden always\n\n    this.picker[ 'translate' ].visible = false;\n    this.picker[ 'rotate' ].visible = false;\n    this.picker[ 'scale' ].visible = false;\n\n    // updateMatrixWorld will update transformations and appearance of individual handles\n\n    this.updateMatrixWorld = function () {\n\n        var space = this.space;\n\n        if ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n        var quaternion = space === 'local' ? this.worldQuaternion : identityQuaternion;\n\n        // Show only gizmos for current transform mode\n\n        this.gizmo[ 'translate' ].visible = this.mode === 'translate';\n        this.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n        this.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n        this.helper[ 'translate' ].visible = this.mode === 'translate';\n        this.helper[ 'rotate' ].visible = this.mode === 'rotate';\n        this.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n        var handles = [];\n        handles = handles.concat( this.picker[ this.mode ].children );\n        handles = handles.concat( this.gizmo[ this.mode ].children );\n        handles = handles.concat( this.helper[ this.mode ].children );\n\n        for ( var i = 0; i < handles.length; i ++ ) {\n\n            var handle = handles[ i ];\n\n            // hide aligned to camera\n\n            handle.visible = true;\n            handle.rotation.set( 0, 0, 0 );\n            handle.position.copy( this.worldPosition );\n\n            var factor;\n\n            if ( this.camera.isOrthographicCamera ) {\n\n                factor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n            } else {\n\n                factor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n            }\n\n            handle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\n\n            // TODO: simplify helpers and consider decoupling from gizmo\n\n            if ( handle.tag === 'helper' ) {\n\n                handle.visible = false;\n\n                if ( handle.name === 'AXIS' ) {\n\n                    handle.position.copy( this.worldPositionStart );\n                    handle.visible = !! this.axis;\n\n                    if ( this.axis === 'X' ) {\n\n                        tempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\n                        handle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n                        if ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n                            handle.visible = false;\n\n                        }\n\n                    }\n\n                    if ( this.axis === 'Y' ) {\n\n                        tempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\n                        handle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n                        if ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n                            handle.visible = false;\n\n                        }\n\n                    }\n\n                    if ( this.axis === 'Z' ) {\n\n                        tempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n                        handle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n                        if ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n                            handle.visible = false;\n\n                        }\n\n                    }\n\n                    if ( this.axis === 'XYZE' ) {\n\n                        tempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n                        alignVector.copy( this.rotationAxis );\n                        handle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\n                        handle.quaternion.multiply( tempQuaternion );\n                        handle.visible = this.dragging;\n\n                    }\n\n                    if ( this.axis === 'E' ) {\n\n                        handle.visible = false;\n\n                    }\n\n\n                } else if ( handle.name === 'START' ) {\n\n                    handle.position.copy( this.worldPositionStart );\n                    handle.visible = this.dragging;\n\n                } else if ( handle.name === 'END' ) {\n\n                    handle.position.copy( this.worldPosition );\n                    handle.visible = this.dragging;\n\n                } else if ( handle.name === 'DELTA' ) {\n\n                    handle.position.copy( this.worldPositionStart );\n                    handle.quaternion.copy( this.worldQuaternionStart );\n                    tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n                    tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n                    handle.scale.copy( tempVector );\n                    handle.visible = this.dragging;\n\n                } else {\n\n                    handle.quaternion.copy( quaternion );\n\n                    if ( this.dragging ) {\n\n                        handle.position.copy( this.worldPositionStart );\n\n                    } else {\n\n                        handle.position.copy( this.worldPosition );\n\n                    }\n\n                    if ( this.axis ) {\n\n                        handle.visible = this.axis.search( handle.name ) !== - 1;\n\n                    }\n\n                }\n\n                // If updating helper, skip rest of the loop\n                continue;\n\n            }\n\n            // Align handles to current local or world rotation\n\n            handle.quaternion.copy( quaternion );\n\n            if ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n                // Hide translate and scale axis facing the camera\n\n                var AXIS_HIDE_TRESHOLD = 0.99;\n                var PLANE_HIDE_TRESHOLD = 0.2;\n                var AXIS_FLIP_TRESHOLD = 0.0;\n\n\n                if ( handle.name === 'X' || handle.name === 'XYZX' ) {\n\n                    if ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n                        handle.scale.set( 1e-10, 1e-10, 1e-10 );\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name === 'Y' || handle.name === 'XYZY' ) {\n\n                    if ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n                        handle.scale.set( 1e-10, 1e-10, 1e-10 );\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\n\n                    if ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n                        handle.scale.set( 1e-10, 1e-10, 1e-10 );\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name === 'XY' ) {\n\n                    if ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n                        handle.scale.set( 1e-10, 1e-10, 1e-10 );\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name === 'YZ' ) {\n\n                    if ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n                        handle.scale.set( 1e-10, 1e-10, 1e-10 );\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name === 'XZ' ) {\n\n                    if ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n                        handle.scale.set( 1e-10, 1e-10, 1e-10 );\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                // Flip translate and scale axis ocluded behind another axis\n\n                if ( handle.name.search( 'X' ) !== - 1 ) {\n\n                    if ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n                        if ( handle.tag === 'fwd' ) {\n\n                            handle.visible = false;\n\n                        } else {\n\n                            handle.scale.x *= - 1;\n\n                        }\n\n                    } else if ( handle.tag === 'bwd' ) {\n\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name.search( 'Y' ) !== - 1 ) {\n\n                    if ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n                        if ( handle.tag === 'fwd' ) {\n\n                            handle.visible = false;\n\n                        } else {\n\n                            handle.scale.y *= - 1;\n\n                        }\n\n                    } else if ( handle.tag === 'bwd' ) {\n\n                        handle.visible = false;\n\n                    }\n\n                }\n\n                if ( handle.name.search( 'Z' ) !== - 1 ) {\n\n                    if ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n                        if ( handle.tag === 'fwd' ) {\n\n                            handle.visible = false;\n\n                        } else {\n\n                            handle.scale.z *= - 1;\n\n                        }\n\n                    } else if ( handle.tag === 'bwd' ) {\n\n                        handle.visible = false;\n\n                    }\n\n                }\n\n            } else if ( this.mode === 'rotate' ) {\n\n                // Align handles to current local or world rotation\n\n                tempQuaternion2.copy( quaternion );\n                alignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).invert() );\n\n                if ( handle.name.search( 'E' ) !== - 1 ) {\n\n                    handle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\n\n                }\n\n                if ( handle.name === 'X' ) {\n\n                    tempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n                    handle.quaternion.copy( tempQuaternion );\n\n                }\n\n                if ( handle.name === 'Y' ) {\n\n                    tempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n                    handle.quaternion.copy( tempQuaternion );\n\n                }\n\n                if ( handle.name === 'Z' ) {\n\n                    tempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n                    handle.quaternion.copy( tempQuaternion );\n\n                }\n\n            }\n\n            // Hide disabled axes\n            handle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n            handle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n            handle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n            handle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n            // highlight selected axis\n\n            handle.material._opacity = handle.material._opacity || handle.material.opacity;\n            handle.material._color = handle.material._color || handle.material.color.clone();\n\n            handle.material.color.copy( handle.material._color );\n            handle.material.opacity = handle.material._opacity;\n\n            if ( ! this.enabled ) {\n\n                handle.material.opacity *= 0.5;\n                handle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n            } else if ( this.axis ) {\n\n                if ( handle.name === this.axis ) {\n\n                    handle.material.opacity = 1.0;\n                    handle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n                } else if ( this.axis.split( '' ).some( function ( a ) {\n\n                    return handle.name === a;\n\n                } ) ) {\n\n                    handle.material.opacity = 1.0;\n                    handle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n                } else {\n\n                    handle.material.opacity *= 0.25;\n                    handle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n                }\n\n            }\n\n        }\n\n        Object3D.prototype.updateMatrixWorld.call( this );\n\n    };\n\n};\n\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    constructor: TransformControlsGizmo,\n\n    isTransformControlsGizmo: true\n\n} );\n\n\nvar TransformControlsPlane = function () {\n\n    'use strict';\n\n    Mesh.call( this,\n        new PlaneGeometry( 100000, 100000, 2, 2 ),\n        new MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n    );\n\n    this.type = 'TransformControlsPlane';\n\n    var unitX = new Vector3( 1, 0, 0 );\n    var unitY = new Vector3( 0, 1, 0 );\n    var unitZ = new Vector3( 0, 0, 1 );\n\n    var tempVector = new Vector3();\n    var dirVector = new Vector3();\n    var alignVector = new Vector3();\n    var tempMatrix = new Matrix4();\n    var identityQuaternion = new Quaternion();\n\n    this.updateMatrixWorld = function () {\n\n        var space = this.space;\n\n        this.position.copy( this.worldPosition );\n\n        if ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n        unitX.set( 1, 0, 0 ).applyQuaternion( space === 'local' ? this.worldQuaternion : identityQuaternion );\n        unitY.set( 0, 1, 0 ).applyQuaternion( space === 'local' ? this.worldQuaternion : identityQuaternion );\n        unitZ.set( 0, 0, 1 ).applyQuaternion( space === 'local' ? this.worldQuaternion : identityQuaternion );\n\n        // Align the plane for current transform mode, axis and space.\n\n        alignVector.copy( unitY );\n\n        switch ( this.mode ) {\n\n            case 'translate':\n            case 'scale':\n                switch ( this.axis ) {\n\n                    case 'X':\n                        alignVector.copy( this.eye ).cross( unitX );\n                        dirVector.copy( unitX ).cross( alignVector );\n                        break;\n                    case 'Y':\n                        alignVector.copy( this.eye ).cross( unitY );\n                        dirVector.copy( unitY ).cross( alignVector );\n                        break;\n                    case 'Z':\n                        alignVector.copy( this.eye ).cross( unitZ );\n                        dirVector.copy( unitZ ).cross( alignVector );\n                        break;\n                    case 'XY':\n                        dirVector.copy( unitZ );\n                        break;\n                    case 'YZ':\n                        dirVector.copy( unitX );\n                        break;\n                    case 'XZ':\n                        alignVector.copy( unitZ );\n                        dirVector.copy( unitY );\n                        break;\n                    case 'XYZ':\n                    case 'E':\n                        dirVector.set( 0, 0, 0 );\n                        break;\n\n                }\n\n                break;\n            case 'rotate':\n            default:\n                // special case for rotate\n                dirVector.set( 0, 0, 0 );\n\n        }\n\n        if ( dirVector.length() === 0 ) {\n\n            // If in rotate mode, make the plane parallel to camera\n            this.quaternion.copy( this.cameraQuaternion );\n\n        } else {\n\n            tempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\n\n            this.quaternion.setFromRotationMatrix( tempMatrix );\n\n        }\n\n        Object3D.prototype.updateMatrixWorld.call( this );\n\n    };\n\n};\n\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n    constructor: TransformControlsPlane,\n\n    isTransformControlsPlane: true\n\n} );\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n","import {useCallback, useEffect, useRef} from \"react\";\nimport hotkeys from \"hotkeys-js\";\n\ntype Options = {\n    scope?: string,\n    element?: HTMLElement | null,\n    keyup?: boolean | null\n    keydown?: boolean | null\n    splitKey?: string;\n}\n\nexport const useHotkeys = (event: string, callback: any, options?: Options) => {\n\n    useEffect(() => {\n        if (options) {\n            hotkeys(event, options, callback)\n        } else {\n            hotkeys(event, callback)\n        }\n\n        return () => {\n            hotkeys.unbind(event, callback)\n        }\n    }, [])\n\n}\n\nexport const useCallbackRef = (cb: () => any, dependencies: any[]) => {\n\n    const callback = useCallback(cb, dependencies)\n    const callbackRef = useRef(callback)\n    useEffect(() => {\n        callbackRef.current = callback\n    }, [callback])\n    return callbackRef\n\n}","import {MutableRefObject, useCallback, useEffect, useRef, useState} from \"react\";\nimport {useThree} from \"react-three-fiber\";\nimport { TransformControls as OriginalTransformControls } from \"three/examples/jsm/controls/TransformControls\";\n// @ts-ignore\nimport { TransformControls as CustomTransformControls } from \"../custom/TransformControls\"\nimport {Object3D, Vector3} from \"three\";\nimport {useHotkeys} from \"../custom/hooks\";\nimport {setComponentPropValue} from \"../editor/state/main/actions\";\nimport {predefinedPropKeys} from \"../editor/componentEditor/config\";\nimport {useProxy} from \"valtio\";\nimport {editorStateProxy, EditorTransformMode, useIsEditMode, useTransformMode} from \"../editor/state/editor\";\nimport {EDITOR_LAYER} from \"./InteractiveMesh\";\nimport {isShiftPressed} from \"../editor/hotkeys\";\nimport {storeSnapshot} from \"../editor/state/history/actions\";\n\nconst TransformControls: any = CustomTransformControls\n\nconst recursiveSetLayer = (object: Object3D) => {\n    // if (object.children.length === 0) {\n        object.layers.set(EDITOR_LAYER)\n    // } else {\n        object.children.forEach((child) => recursiveSetLayer(child))\n    // }\n}\n\nexport const useIsCanvasInteractable = () => {\n    return true\n}\n\nexport const useDraggableMesh = (id: string, isSelected: boolean, options: {\n    translationSnap?: number,\n    passedRef?: MutableRefObject<Object3D>,\n    updateValue?: (key: string, value: any, startValue: any) => void,\n    onChange?: () => void,\n    onDraggingChanged?: (event: any) => void,\n} = {}) => {\n    const { camera, gl, scene } = useThree()\n    const isEditMode = useIsEditMode()\n    const localRef = useRef<Object3D>(null!)\n    const ref = options.passedRef ?? localRef\n    const orbitRef = useProxy(editorStateProxy).orbitRef\n    const [controls, setControls] = useState<OriginalTransformControls | null>(null)\n    const isCanvasEnabled = useIsCanvasInteractable()\n    const [shiftIsPressed, setShiftIsPressed] = useState<boolean>(isShiftPressed())\n    const {updateValue, onChange, onDraggingChanged: passedOnDraggingChanged} = options\n\n    useHotkeys('*', () => {\n        setShiftIsPressed(isShiftPressed())\n    }, {\n        keyup: true,\n        keydown: true,\n    })\n\n    useEffect(() => {\n        const callback = () => {\n            setShiftIsPressed(isShiftPressed())\n        }\n        document.addEventListener('keyup', callback)\n        return () => {\n            document.removeEventListener('keyup', callback)\n        }\n    }, [])\n\n    const active = isEditMode && isSelected && isCanvasEnabled\n\n    // @ts-ignore\n    useEffect(() => {\n        if (!controls) return\n        const currentTranslationSnap = controls.translationSnap\n        const currentRotationSnap = controls.rotationSnap\n        if (shiftIsPressed) {\n            controls.setTranslationSnap(1)\n            controls.setRotationSnap(1)\n            return () => {\n                controls.setTranslationSnap(currentTranslationSnap)\n                controls.setRotationSnap(currentRotationSnap)\n            }\n        }\n    }, [shiftIsPressed, controls])\n\n    const startPositionRef = useRef(new Vector3())\n\n    useEffect(() => {\n        if (!orbitRef || !controls) return\n        const onDraggingChanged = (event: any) => {\n            startPositionRef.current.copy(ref.current.position)\n            editorStateProxy.transformActive = event.value\n            if (orbitRef.current) {\n                orbitRef.current.enabled = !event.value\n            }\n            if (passedOnDraggingChanged) {\n                passedOnDraggingChanged(event)\n            }\n        }\n\n        controls.addEventListener('dragging-changed', onDraggingChanged)\n        if (onChange) {\n            controls.addEventListener('change', onChange)\n        }\n        return () => {\n            editorStateProxy.transformActive = false\n            if (orbitRef.current) {\n                orbitRef.current.enabled = true\n            }\n            if (onChange) {\n                controls.removeEventListener('change', onChange)\n            }\n            controls.removeEventListener('dragging-changed', onDraggingChanged)\n        }\n    }, [orbitRef, controls])\n\n    const transformMode = useTransformMode()\n\n    const onMouseUp = useCallback(() => {\n        if (!ref.current) return\n        storeSnapshot()\n        console.log('MOUSE UP!')\n\n        if (transformMode === EditorTransformMode.translate) {\n            const {x, y, z} = ref.current.position\n            const update = {\n                x,\n                y,\n                z\n            }\n            if (updateValue) {\n                updateValue(predefinedPropKeys.position, update, startPositionRef.current)\n            } else {\n                setComponentPropValue(id, predefinedPropKeys.position, {\n                    x,\n                    y,\n                    z,\n                })\n            }\n        } else if (transformMode === EditorTransformMode.rotate) {\n            const {x, y, z} = ref.current.rotation\n            const update = {\n                x,\n                y,\n                z\n            }\n            if (updateValue) {\n                updateValue(predefinedPropKeys.rotation, update, startPositionRef.current)\n            } else {\n                setComponentPropValue(id, predefinedPropKeys.rotation, {\n                    x,\n                    y,\n                    z,\n                })\n            }\n        } else if (transformMode === EditorTransformMode.scale) {\n            const {x, y, z} = ref.current.scale\n            const update = {\n                x,\n                y,\n                z\n            }\n            if (updateValue) {\n                updateValue(predefinedPropKeys.scale, update, startPositionRef.current)\n            } else {\n                setComponentPropValue(id, predefinedPropKeys.scale, {\n                    x,\n                    y,\n                    z,\n                })\n            }\n        }\n\n    }, [transformMode])\n\n    const onMouseUpRef = useRef(onMouseUp)\n\n    useEffect(() => {\n        onMouseUpRef.current = onMouseUp\n    }, [onMouseUp])\n\n    useEffect(() => {\n\n        if (!active) return\n        if (!ref.current) return\n        const controls = new TransformControls(camera, gl.domElement)\n        const {translationSnap} = options\n        if (translationSnap != undefined) {\n            controls.setTranslationSnap(translationSnap)\n        }\n        controls.raycaster.layers.enable(EDITOR_LAYER)\n        recursiveSetLayer(controls)\n        setControls(controls)\n        controls.attach(ref.current as Object3D)\n        controls.addEventListener('mouseUp', () => {\n\n            onMouseUpRef.current()\n\n        })\n        scene.add(controls)\n\n        return () => {\n            controls.detach()\n            scene.remove(controls)\n            setControls(null)\n        }\n\n    }, [active])\n\n    useEffect(() => {\n        controls?.setMode(transformMode)\n    }, [controls, transformMode])\n\n    return [ref]\n}","import React, {MutableRefObject, useEffect, useMemo, useRef, useState} from \"react\"\nimport {useEditableProp} from \"./useEditableProp\";\nimport {predefinedPropKeys} from \"../editor/componentEditor/config\";\nimport {setComponentHovered} from \"../editor/state/ui\";\nimport {useEditableContext, useEditableId, useEditableIsSoleSelected, useIsEditableSelected} from \"./Editable\";\nimport {setSelectedComponents} from \"../editor/state/main/actions\";\nimport {BoxHelper, Object3D} from \"three\";\nimport {useHelper} from \"@react-three/drei\";\nimport {isCommandPressed, isShiftPressed} from \"../editor/hotkeys\";\nimport {useDraggableMesh} from \"./useDraggableMesh\";\nimport {editorStateProxy, useGroupPortalRef, useIsEditMode} from \"../editor/state/editor\";\nimport {ref} from \"valtio\";\n\nexport const EDITOR_LAYER = 31\n\nexport const useMeshHelper = (ref: MutableRefObject<Object3D>, active: boolean) => {\n    const helperToUse = useMemo(() => {\n        if (active) {\n            return BoxHelper\n        }\n        return null\n    }, [active])\n\n\n    const helperRef = useHelper(ref, helperToUse)\n\n    useEffect(() => {\n        if (helperRef.current) {\n            helperRef.current?.layers.set(EDITOR_LAYER)\n        }\n    })\n}\n\nexport const InteractiveMesh: React.FC = ({children}) => {\n    const id = useEditableId()\n    const {parentPath} = useEditableContext()\n    const isSelected = useIsEditableSelected()\n    const isSoleSelected = useEditableIsSoleSelected()\n    const isMultipleSelected = isSelected && !isSoleSelected\n    const groupPortalRef = useGroupPortalRef()\n    const {setSharedProp} = useEditableContext()\n\n    useEffect(() => {\n        if (!isMultipleSelected || !groupPortalRef) return\n        const parent = groupRef.current.parent\n        parent?.remove(groupRef.current)\n        groupPortalRef.current.add(groupRef.current)\n        return () => {\n            groupPortalRef.current.remove(groupRef.current)\n            parent?.add(groupRef.current)\n        }\n    }, [isMultipleSelected, groupPortalRef])\n\n    const position = useEditableProp(predefinedPropKeys.position, {\n        defaultValue: {\n            x: 0,\n            y: 0,\n            z: 0,\n        }\n    })\n    const rotation = useEditableProp(predefinedPropKeys.rotation, {\n        defaultValue: {\n            x: 0,\n            y: 0,\n            z: 0,\n        }\n    })\n    const scale = useEditableProp(predefinedPropKeys.scale, {\n        defaultValue: {\n            x: 1,\n            y: 1,\n            z: 1,\n        }\n    })\n\n    const [pointerOver, setPointerOver] = useState(false)\n    const isEditMode = useIsEditMode()\n\n    useEffect(() => {\n        if (pointerOver) {\n            return setComponentHovered(id)\n        }\n        return\n    }, [pointerOver, id])\n\n    const {\n        onPointerUp,\n        onPointerOver,\n        onPointerOut,\n    } = useMemo(() => ({\n        onPointerUp: (event: any) => {\n            if (!isEditMode) return\n            let skip = false\n            event.intersections.forEach(({eventObject}: any) => {\n                const eventObjectId = eventObject.userData.id\n                if (eventObjectId !== id && parentPath.includes(eventObjectId)) {\n                    skip = true\n                }\n            })\n            if (skip) {\n                return\n            }\n            event.stopPropagation()\n            const add = isShiftPressed() || isCommandPressed()\n            if (editorStateProxy.transformActive) return\n            setSelectedComponents({\n                [id]: true,\n            }, !add)\n        },\n        onPointerOver: (event: any) => {\n            if (!isEditMode) return\n            event.stopPropagation()\n            if (editorStateProxy.transformActive) return\n            setPointerOver(true)\n        },\n        onPointerOut: (event: any) => {\n            if (!isEditMode) return\n            event.stopPropagation()\n            setPointerOver(false)\n        },\n    }), [isEditMode, parentPath])\n\n    const groupRef = useRef<Object3D>(null!)\n\n    useMeshHelper(groupRef, (isSelected || pointerOver) && isEditMode)\n    useDraggableMesh(id, isSoleSelected, {\n        passedRef: groupRef,\n    })\n\n    useEffect(() => {\n        if (isSoleSelected) {\n            const storedRef = ref(groupRef)\n            editorStateProxy.selectedRef = storedRef\n            return () =>{\n                if (editorStateProxy.selectedRef === storedRef) {\n                    editorStateProxy.selectedRef = null\n                }\n            }\n        }\n        return\n    }, [isSoleSelected])\n\n    useEffect(() => {\n        setSharedProp('meshRef', groupRef)\n    }, [setSharedProp, groupRef])\n\n    const firstCallRef = useRef(true)\n\n    useEffect(() => {\n        if (!isEditMode && !firstCallRef.current) return\n        firstCallRef.current = false\n        groupRef.current.position.set(position.x, position.y, position.z)\n        groupRef.current.rotation.set(rotation.x, rotation.y, rotation.z)\n        groupRef.current.scale.set(scale.x, scale.y, scale.z)\n    }, [isEditMode, position, rotation, scale])\n\n    const content = (\n        <group ref={groupRef}\n               onPointerUp={onPointerUp}\n               onPointerOver={onPointerOver}\n               onPointerOut={onPointerOut} userData={{\n                   id,\n                }}>\n            {children}\n        </group>\n    )\n\n    return content\n}","import React, {createContext, useCallback, useContext, useEffect, useLayoutEffect, useMemo, useState} from \"react\";\nimport {\n    addComponent,\n    addDeactivatedComponent, removeComponent,\n    removeDeactivatedComponent,\n    setComponentChildren, setComponentInitialProps\n} from \"../editor/state/components/store\";\nimport {useIsDeactivated, useSelectedComponents} from \"../editor/state/main/hooks\";\nimport {setComponentProps} from \"../editor/state/props\";\nimport {EditableModules} from \"./EditableModules\";\nimport {getCombinedId} from \"../utils/ids\";\nimport {InteractiveMesh} from \"./InteractiveMesh\";\n\ninterface Config {\n    name?: string,\n    _unsaved?: boolean,\n    type?: string,\n}\n\nconst getComponentId = (config: Config) => {\n    if (config.type) return config.type\n    return ''\n}\n\ninterface Props {\n    id: string,\n    _config?: Config,\n    [key: string]: any,\n}\n\ninterface ContextInterface {\n    id: string,\n    componentTypeId: string,\n    isRoot: boolean,\n    parentPath: string[],\n    parentId: string,\n    rootParentId: string,\n    registerWithParent: (id: string) => () => void,\n    isSelected: {\n        selected: boolean,\n        single?: boolean,\n    },\n    sharedProps: {\n        [key: string]: any,\n    },\n    setSharedProp: (key: string, value: any) => void,\n}\n\nconst Context = createContext<ContextInterface>({\n    id: '',\n    componentTypeId: '',\n    isRoot: true,\n    parentId: '',\n    rootParentId: '',\n    parentPath: [],\n    registerWithParent: () => () => {\n    },\n    isSelected: {\n        selected: false,\n    },\n    sharedProps: {},\n    setSharedProp: () => {},\n})\n\nexport const useEditableContext = () => {\n    return useContext(Context)\n}\n\nexport const useEditableSharedProp = (key: string) => {\n    const {sharedProps} = useEditableContext()\n    return sharedProps[key]\n}\n\nexport const useIsEditableSelected = () => {\n    const {isSelected} = useEditableContext()\n    return isSelected.selected\n}\n\nexport const useEditableIsSoleSelected = () => {\n    const {isSelected} = useEditableContext()\n    return (isSelected.selected && isSelected.single) ?? false\n}\n\nexport const useEditableId = () => {\n    const {id} = useEditableContext()\n    return id\n}\n\nconst useIsSelected = (id: string) => {\n    const selectedComponents = useSelectedComponents()\n    return useMemo(() => {\n        if (Object.keys(selectedComponents).includes(id)) {\n            const single = (Object.keys(selectedComponents).length === 1)\n            return {\n                selected: true,\n                single,\n            }\n        }\n        return {\n            selected: false,\n        }\n    }, [id, selectedComponents])\n}\n\nexport const Editable: React.FC<Props> = ({\n                                              children,\n                                              id,\n                                              _config: config = {},\n                                                ...props\n                                          }) => {\n\n    const {\n        isRoot,\n        parentPath,\n        registerWithParent,\n        parentId,\n        rootParentId\n    } = useEditableContext()\n\n    const [name] = useState(() => config?.name || (children ? (children as any).type.displayName || (children as any).type.name || id : id))\n    const [uid] = useState(() => {\n        return getCombinedId(parentPath.concat([id]))\n    })\n    const [componentId] = useState(() => getComponentId(config))\n\n    const isSelected = useIsSelected(uid)\n    const isSoleSelected = useMemo(() => {\n        return isSelected.selected && isSelected.single\n    }, [isSelected])\n\n    useEffect(() => {\n        if (!isSoleSelected) return\n        return () => {\n            setComponentProps(uid, () => ({}))\n        }\n    }, [isSoleSelected])\n\n    useLayoutEffect(() => {\n        registerWithParent(uid)\n    }, [])\n\n    useLayoutEffect(() => {\n        setComponentInitialProps(uid, props)\n    }, [props])\n\n    const [childEditables, setChildEditables] = useState<{\n        [id: string]: true,\n    }>({})\n\n    const {\n        registerChildren\n    } = useMemo(() => ({\n        registerChildren: (childId: string) => {\n            setChildEditables(state => ({\n                ...state,\n                [childId]: true,\n            }))\n            return () => {\n                setChildEditables(state => {\n                    const updated = {\n                        ...state,\n                    }\n                    delete updated[childId]\n                    return updated\n                })\n            }\n        },\n    }), [])\n\n    const isDeactivated = useIsDeactivated(uid)\n    const unsaved = config._unsaved ?? false\n\n    useEffect(() => {\n        if (isDeactivated) {\n            addDeactivatedComponent(uid, name, Object.keys(childEditables), isRoot, unsaved, parentId, rootParentId)\n            return () => {\n                removeDeactivatedComponent(uid)\n            }\n        } else {\n            addComponent(uid, name, Object.keys(childEditables), isRoot, unsaved, props, componentId, parentId, rootParentId)\n            return () => {\n                removeComponent(uid)\n            }\n        }\n    }, [isDeactivated])\n\n    useEffect(() => {\n        if (!isDeactivated) {\n            setComponentChildren(uid, Object.keys(childEditables))\n        }\n    }, [childEditables, isDeactivated])\n\n    const updatedParentPath = useMemo(() => {\n        return parentPath.concat(id)\n    }, [parentPath])\n\n    const [sharedProps, setSharedProps] = useState<{\n        [key: string]: any,\n    }>({})\n\n    const setSharedProp = useCallback((key: string, value: any) => {\n        setSharedProps(state => ({\n            ...state,\n            [key]: value,\n        }))\n    }, [setSharedProps])\n\n    if (isDeactivated) return null\n\n    return (\n        <Context.Provider value={{\n            id: uid,\n            componentTypeId: componentId,\n            isRoot: false,\n            parentId: uid,\n            rootParentId: isRoot ? uid : rootParentId,\n            parentPath: updatedParentPath,\n            registerWithParent: registerChildren,\n            isSelected,\n            sharedProps,\n            setSharedProp,\n        }}>\n            <InteractiveMesh>\n                <EditableModules>\n                    {children}\n                </EditableModules>\n            </InteractiveMesh>\n        </Context.Provider>\n    );\n};","import {useEditableContext, useEditableIsSoleSelected, useEditableSharedProp} from \"./Editable\";\nimport {useLayoutEffect, useMemo, useState} from \"react\";\nimport {useComponentInitialProps} from \"../editor/state/components/hooks\";\nimport {Prop, PropOrigin, setComponentProps} from \"../editor/state/props\";\nimport {useComponentState, useSharedComponent} from \"../editor/state/main/hooks\";\nimport {predefinedPropKeys} from \"../editor/componentEditor/config\";\nimport {setComponentCanHaveChildren} from \"../editor/state/components/store\";\n\ninterface Config {\n    id?: string,\n    defaultValue?: any,\n    hidden?: boolean,\n    sync?: boolean,\n}\n\nconst useProp = (key: string, componentId: string, componentTypeId: string, defaultValue: any, hidden: boolean): Prop => {\n    const initialProps = useComponentInitialProps(componentId)\n    const {modifiedState = {}, overriddenState = {}} = useComponentState(componentId)\n    const {appliedState = {}} = useSharedComponent(componentTypeId)\n\n    return useMemo(() => {\n        const applied = appliedState[key]\n        const appliedValue = applied?.value\n\n        const defaultResult = {\n            hidden,\n        }\n\n        const appliedResult = {\n            ...defaultResult,\n            value: appliedValue,\n            type: PropOrigin.applied,\n        }\n\n        if (modifiedState[key] && !overriddenState[key]) {\n            const modifiedValue = modifiedState[key].value\n            if (modifiedValue !== appliedValue) {\n                return {\n                    ...defaultResult,\n                    value: modifiedValue,\n                    type: PropOrigin.modified,\n                }\n            } else {\n                return appliedResult\n            }\n        }\n        if (initialProps[key] && !overriddenState[key]) {\n            const initialValue = initialProps[key]\n            if (initialValue !== appliedValue) {\n                return {\n                    ...defaultResult,\n                    value: initialProps[key],\n                    type: PropOrigin.initial,\n                }\n            } else {\n                return appliedResult\n            }\n        }\n        if (applied) {\n            return appliedResult\n        }\n        return {\n            ...defaultResult,\n            value: defaultValue,\n            type: PropOrigin.default,\n        }\n    }, [initialProps, modifiedState, overriddenState, appliedState, defaultValue])\n}\n\nexport const useEditableProp = (key: string, config: Config = {}) => {\n    const {\n        id: editableId,\n        componentTypeId,\n        setSharedProp\n    } = useEditableContext()\n    const {hidden = false} = config\n    const isSelected = useEditableIsSoleSelected()\n    const [id] = useState(() => config.id ? config.id : editableId)\n    const {sync = false} = config\n\n    const sharedProp = useEditableSharedProp(key)\n\n    const prop = useProp(key, id, componentTypeId, config.defaultValue, hidden)\n\n    useLayoutEffect(() => {\n        if (key === predefinedPropKeys.children) {\n            return setComponentCanHaveChildren(id)\n        }\n        return\n    }, [])\n\n    useLayoutEffect(() => {\n        if (!isSelected) return\n        setComponentProps(editableId, (state) => {\n            return {\n                ...state,\n                [key]: prop,\n            }\n        })\n    }, [isSelected, prop])\n\n    const {value} = prop\n\n    useLayoutEffect(() => {\n        if (!sync) return\n        setSharedProp(key, value)\n    }, [sync])\n\n    return (!sync && sharedProp) ? sharedProp : prop.value\n}","import React, {useMemo} from \"react\"\nimport {useUnsavedComponent, useUnsavedComponents} from \"../editor/state/main/hooks\";\nimport {ComponentState} from \"../editor/state/components/types\";\nimport {Editable} from \"./Editable\";\nimport {useAddable} from \"./addables\";\n\nconst UnsavedComponent: React.FC<{\n    component: ComponentState\n}> = ({component}) => {\n    const addable = useAddable(component.componentId ?? '')\n    const Component = useMemo(() => {\n        return addable?.component\n    }, [addable])\n    if (!addable) return null\n    const props = component.initialProps ?? {}\n    return (\n        <Editable id={component.uid} _config={{\n            name: component.name,\n            type: addable.sharedType ? component.componentId : '',\n            _unsaved: true,\n        }} {...props}>\n            {Component && <Component/>}\n        </Editable>\n    )\n}\n\nconst TemporaryComponent: React.FC<{\n    id: string,\n}> = ({id}) => {\n    const component = useUnsavedComponent(id)\n    if (!component) return null\n    return <UnsavedComponent component={component}/>\n}\n\nexport const TemporaryComponentsList: React.FC<{\n    ids: string[],\n}> = ({ids}) => {\n    return (\n        <>\n            {\n                ids.map((id) => (\n                    <TemporaryComponent id={id} key={id}/>\n                ))\n            }\n        </>\n    )\n}\n\nexport const TemporaryComponents: React.FC = () => {\n    const unsavedComponents = useUnsavedComponents()\n    return (\n        <>\n            {\n                Object.entries(unsavedComponents).map(([key, component]) => {\n                    if (!component.isRoot) return null\n                    return (\n                        <UnsavedComponent key={key} component={component}/>\n                    )\n                })\n            }\n        </>\n    )\n}","import React from \"react\"\nimport {useEditableProp} from \"./useEditableProp\";\nimport {predefinedPropKeys} from \"../editor/componentEditor/config\";\nimport {TemporaryComponentsList} from \"./TemporaryComponents\";\n\nexport const EditableChildren: React.FC = ({children}) => {\n\n    const storedChildren = useEditableProp(predefinedPropKeys.children, {\n        defaultValue: [],\n        hidden: true,\n    }) ?? []\n\n    return (\n        <>\n            {children}\n            {\n                storedChildren && (\n                    <TemporaryComponentsList ids={storedChildren}/>\n                )\n            }\n        </>\n    )\n}","import create from \"zustand\";\nimport {EmptyObject} from \"./defaultComponents/EmptyObject\";\n\nexport interface Addable {\n    id: string,\n    name: string,\n    props: {\n        [key: string]: any,\n    },\n    component: any,\n    sharedType: boolean,\n}\n\nexport const useAddableStore = create<{\n    addables: {\n        [key: string]: Addable,\n    }\n}>(() => ({\n    addables: {},\n}))\n\nexport const useAddable = (id: string) => {\n    return useAddableStore(state => state.addables[id])\n}\n\nexport const getAddable = (id: string) => {\n    return useAddableStore.getState().addables[id]\n}\n\nexport const registerAddable = (id: string, component: any, {\n    name,\n    sharedType = true,\n    props = {},\n}: {\n    name: string,\n    sharedType?: boolean,\n    props?: {\n        [key: string]: any,\n    }\n}) => {\n    const preppedId = `_addable/${id}`\n    useAddableStore.setState(state => ({\n        addables: {\n            ...state.addables,\n            [preppedId]: {\n                id: preppedId,\n                name,\n                props,\n                component,\n                sharedType,\n            }\n        }\n    }))\n}\n\nregisterAddable('_emptyObject', EmptyObject, {\n    name: 'Empty Object',\n    sharedType: false,\n    props: {}\n})","import React from \"react\"\nimport {EditableChildren} from \"../EditableChildren\";\n\nexport const EmptyObject: React.FC = () => {\n\n    return (\n        <EditableChildren/>\n    )\n}","import {proxy, useProxy} from \"valtio\";\nimport {getAddable} from \"../../scene/addables\";\nimport {addUnsavedComponent, setSelectedComponents} from \"./main/actions\";\nimport {predefinedPropKeys} from \"../componentEditor/config\";\n\nexport const uiProxy = proxy<{\n    displayAddingComponent: boolean,\n    displayAddingComponentParent: string,\n    addingComponent: string,\n    addingComponentParent: string,\n    componentContextMenu: {\n        visible: boolean,\n        components?: string[],\n        position?: [number, number],\n    },\n    hoveredComponents: {\n        [key: string]: true,\n    }\n}>({\n    displayAddingComponent: false,\n    displayAddingComponentParent: '',\n    addingComponent: '',\n    addingComponentParent: '',\n    componentContextMenu: {\n        visible: false,\n        components: [],\n    },\n    hoveredComponents: {}\n})\n\nexport const useAddingComponent = () => {\n    return useProxy(uiProxy).addingComponent\n}\n\nexport const addComponent = (addableId: string, parent: string, position?: {x: number, y: number, z: number}) => {\n    console.log('position', position)\n    const addable = getAddable(addableId)\n    const id = addUnsavedComponent(addable, parent, {\n        [predefinedPropKeys.position]: position,\n    })\n    setSelectedComponents({\n        [id]: true,\n    })\n}\n\nexport const addStoredComponent = (position: {x: number, y: number, z: number}) => {\n    addComponent(uiProxy.addingComponent, uiProxy.addingComponentParent, position)\n    uiProxy.addingComponent = ''\n    uiProxy.addingComponentParent = ''\n}\n\nexport const setComponentHovered = (id: string) => {\n    uiProxy.hoveredComponents = {\n        ...uiProxy.hoveredComponents,\n        [id]: true,\n    }\n    return () => {\n        const update = {\n            ...uiProxy.hoveredComponents,\n        }\n        delete update[id]\n        uiProxy.hoveredComponents = update\n    }\n}\n\nexport const useIsComponentHovered = (id: string) => {\n    const hoveredComponents = useProxy(uiProxy).hoveredComponents\n    return hoveredComponents[id] ?? false\n}\n\nexport const displayComponentContextMenu = (components: string[], position: [number, number]) => {\n    uiProxy.componentContextMenu = {\n        visible: true,\n        components,\n        position,\n    }\n}\n\nexport const setDisplayAddingComponentParent = (id: string) => {\n    uiProxy.displayAddingComponentParent = id\n}\n\nexport const setAddingComponent = (id: string) => {\n    uiProxy.addingComponent = id\n    uiProxy.addingComponentParent = uiProxy.displayAddingComponentParent\n}\n\nexport const setDisplayAddingComponent = (adding: boolean, parent: string = '') => {\n    if (adding) {\n        setDisplayAddingComponentParent(parent)\n    }\n    uiProxy.displayAddingComponent = adding\n    if (!adding) {\n        addingComponentClosed = Date.now()\n    }\n}\n\nexport let addingComponentClosed = 0","// @ts-nocheck\nimport React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\"\nimport Tree, {\n    ItemId,\n    moveItemOnTree,\n    mutateTree,\n    RenderItemParams,\n    TreeData,\n    TreeDestinationPosition,\n    TreeSourcePosition,\n} from '@atlaskit/tree';\nimport {styled} from \"./ui/sitches.config\"\nimport {FaCaretDown, FaCaretUp, FaCube, FaFolder, FaFolderOpen, FaPlus} from \"react-icons/fa\";\nimport {\n    deleteComponent, setComponentName,\n    setComponentsTree, setComponentTreeItemExpanded, setGroupName,\n    setSelectedComponents, updateComponentLocation,\n    updateSelectedComponents\n} from \"./state/main/actions\";\nimport {useComponentName, useSelectedComponents} from \"./state/main/hooks\";\nimport {useComponentsStore} from \"./state/components/store\";\nimport {ComponentState} from \"./state/components/types\";\nimport {getMainStateStoreState, useMainStateStore} from \"./state/main/store\";\nimport {sortBy} from \"lodash-es\";\nimport {useComponent, useComponentCanHaveChildren} from \"./state/components/hooks\";\nimport {isCommandPressed, isShiftPressed} from \"./hotkeys\";\nimport {getSelectedComponents} from \"./state/main/getters\";\nimport {TreeItem} from \"@atlaskit/tree/types\";\nimport hotkeys from \"hotkeys-js\";\nimport {displayComponentContextMenu, setDisplayAddingComponent, useIsComponentHovered} from \"./state/ui\";\nimport {VIEWS} from \"./ManagerSidebar\";\nimport {MainStateStore} from \"./state/main/types\";\nimport {SelectedComponentListeners} from \"./SelectedComponentListeners\";\n\nexport const useIsItemSelected = (id: string) => {\n    const selectedComponents = Object.keys(useSelectedComponents())\n    return selectedComponents.includes(id)\n}\n\nenum TreeItemType {\n    group = 'group',\n    component = 'component',\n}\n\nexport enum SceneItemIcon {\n    group = 'group',\n    groupClosed = 'groupClosed',\n    component = 'component'\n}\n\nexport const ROOT_ID = '__root'\n\nconst generateTree = (components: {\n    [key: string]: ComponentState,\n}, groups: MainStateStore['groups'], groupedComponents: MainStateStore['groupedComponents'], showActive: boolean): TreeData => {\n    const items = {}\n    const rootChildren: string[] = []\n    const groupsChildren: {\n        [key: string]: string[]\n    } = {}\n    Object.entries(groups).forEach(([groupId, group]) => {\n        items[groupId] = {\n            id: groupId,\n            children: [],\n            data: {\n                children: [],\n                title: group.name,\n                type: TreeItemType.group,\n            }\n        }\n        if (groupedComponents[groupId]) {\n            const parentGroupId = groupedComponents[groupId]\n            if (groupsChildren[parentGroupId]) {\n                groupsChildren[parentGroupId].push(groupId)\n            } else {\n                groupsChildren[parentGroupId] = [groupId]\n            }\n        } else {\n            rootChildren.push(groupId)\n        }\n    })\n    Object.entries(groupsChildren).forEach(([groupId, children]) => {\n        if (items[groupId]) {\n            items[groupId].children = items[groupId].children.concat(children)\n            items[groupId].data.children = items[groupId].children\n        }\n    })\n    Object.entries(components).forEach(([id, component]) => {\n        items[id] = {\n            id,\n            children: [],\n            data: {\n                children: component.children,\n                title: component.name,\n                type: TreeItemType.component,\n            }\n        }\n        if (component.isRoot) {\n            if (groupedComponents[id]) {\n                const groupId = groupedComponents[id]\n                if (items[groupId]) {\n                    items[groupId].children.push(id)\n                    items[groupId].data.children = items[groupId].children\n                }\n            } else {\n                rootChildren.push(id)\n            }\n        }\n    })\n    items[ROOT_ID] = {\n        id: ROOT_ID,\n        children: rootChildren,\n    }\n    const componentsTree = showActive ? getMainStateStoreState().componentsTree : {}\n    Object.values(items).forEach((item) => {\n        if (componentsTree[item.id]) {\n            const treeItem = componentsTree[item.id]\n            const last = item.children.length;\n            const sortedChildren = sortBy(item.children, (child) => {\n                return treeItem.children.indexOf(child) !== -1 ? treeItem.children.indexOf(child) : last;\n            })\n            item.children = sortedChildren\n            item.isExpanded = treeItem.isExpanded\n        }\n    })\n    return {\n        rootId: ROOT_ID,\n        items: items,\n    }\n}\n\nconst useSceneTree = (showActive: boolean): TreeData => {\n\n    const activeComponents = useComponentsStore(state => state.components)\n    const deactivatedComponents = useComponentsStore(state => state.deactivatedComponents)\n    const groups = useMainStateStore(state => state.groups)\n    const groupedComponents = useMainStateStore(state => state.groupedComponents)\n\n    const components = showActive ? activeComponents : deactivatedComponents\n\n    const [tree, setTree] = useState<TreeData>(() => generateTree(components, groups, groupedComponents, showActive))\n\n    useEffect(() => {\n        setTree(generateTree(components, groups, groupedComponents, showActive))\n    }, [components, groups, groupedComponents])\n\n    return [tree, setTree]\n}\n\nexport const ItemIcon: React.FC<{\n    iconType: SceneItemIcon\n}> = ({iconType}) => {\n    if (iconType === SceneItemIcon.group) {\n        return <FaFolderOpen size={11}/>\n    } else if (iconType === SceneItemIcon.groupClosed) {\n        return <FaFolder size={11}/>\n    }\n    return <FaCube size={11}/>\n}\n\nconst sidePadding = 12\n\nconst StyledChildrenContainer = styled('div', {\n    paddingLeft: `${sidePadding}px`,\n})\n\nconst useItemData = (id: string) => {\n    const component = useComponent(id)\n    return component\n}\n\nconst SceneChild: React.FC<{\n    id: string,\n}> = ({id}) => {\n    const data = useItemData(id)\n    if (!data) return null\n    return (\n        <SceneItem id={id} icon={<ItemIcon iconType={SceneItemIcon.component}/>} draggable={false} name={data.name}/>\n    )\n}\n\nconst useChildren = (id: string) => {\n\n    const component = useComponent(id)\n\n    return component?.children ?? []\n\n}\n\nconst SceneChildren: React.FC<{\n    id: string,\n}> = ({id}) => {\n    const children = useChildren(id)\n    return (\n        <StyledChildrenContainer>\n            {\n                children.map((childId) => (\n                    <SceneChild id={childId} key={childId}/>\n                ))\n            }\n        </StyledChildrenContainer>\n    )\n}\n\nconst StyledDraggableContainer = styled('div', {\n    padding: '1px $1b',\n})\n\nconst StyledWrapper = styled('div', {\n    position: 'relative',\n})\n\nconst StyledInputWrapper = styled('div', {\n    position: 'absolute',\n    top: '0',\n    left: '30px',\n    right: '40px',\n    bottom: '0',\n    display: 'flex',\n    alignItems: 'center',\n})\n\nexport const StyledButton = styled('button', {\n    padding: 0,\n    margin: 0,\n    border: 0,\n    font: 'inherit',\n    color: 'inherit',\n    backgroundColor: 'transparent',\n})\n\nexport const StyledClickable = styled(StyledButton, {\n    display: 'grid',\n    alignItems: 'center',\n    width: '100%',\n    gridTemplateColumns: 'auto 1fr auto',\n    columnGap: '$1b',\n    padding: '$1b',\n    borderRadius: '$2',\n    cursor: 'pointer',\n    textAlign: 'left',\n    transition: 'background 250ms ease, border 250ms ease, color 250ms ease',\n    '&:hover': {\n        backgroundColor: 'rgba(0,0,0,0.25)'\n    },\n    '&:focus': {\n        outline: 'none',\n        boxShadow: '0 0 0 2px $pink',\n    },\n    variants: {\n        appearance: {\n            hovered: {\n                backgroundColor: 'rgba(0,0,0,0.25)'\n            },\n            selected: {\n                color: '$white',\n                backgroundColor: '$purple',\n                '&:hover': {\n                    backgroundColor: '$purple',\n                }\n            }\n        }\n    }\n})\n\nconst StyledRound = styled('div', {\n    width: '22px',\n    height: '22px',\n    borderRadius: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    transition: 'all 250ms ease',\n})\n\nexport const StyledIcon: any = styled(StyledRound, {\n    border: '2px solid transparent',\n\n    variants: {\n        appearance: {\n            clickable: {\n                '&:hover': {\n                    borderColor: '$purple',\n                    backgroundColor: '$purple',\n                    color: '$white',\n                },\n            }\n        },\n        style: {\n            interactive: {\n                [`${StyledClickable}:hover &`]: {\n                    borderColor: '$darkPurple',\n                },\n                '&:hover': {\n                    borderColor: '$purple',\n                    color: '$white',\n                },\n            }\n        }\n    }\n})\n\nconst StyledTrash = styled(StyledIcon, {\n    opacity: 0,\n    [`${StyledClickable}:hover &`]: {\n        opacity: 1,\n    },\n    [`&:hover`]: {\n        opacity: 1,\n    },\n    variants: {\n        style: {\n            interactive: {\n                [`${StyledClickable}:hover &`]: {\n                    borderColor: '$darkPurple',\n                },\n                [`&:hover`]: {\n                    borderColor: '$purple',\n                    backgroundColor: '$purple',\n                    color: '$white',\n                },\n            }\n        }\n    }\n})\n\nconst StyledToggleIcon = styled('span', {\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '2px',\n    marginLeft: '2px',\n    '&:hover': {\n        color: '$white',\n    }\n})\n\nconst StyledOptions = styled('div', {\n    display: 'flex',\n    alignItems: 'center',\n})\n\nlet lastSelectedItem: string = ''\n\nconst setLastSelectedItem = (id: string) => {\n    lastSelectedItem = id\n}\n\nconst selectItem = (id: string) => {\n    setSelectedComponents({\n        [id]: true,\n    })\n}\n\nconst addChildrenToRange = (item: TreeItem, range: string[], tree: TreeData) => {\n    item.children.forEach((childId) => {\n        range.push(childId)\n        const childItem = tree.items[childId]\n        if (childItem) {\n            addChildrenToRange(childItem, range, tree)\n        }\n    })\n    if (item.data.children) {\n        item.data.children.forEach((childId) => {\n            range.push(childId)\n            const childItem = tree.items[childId]\n            if (childItem) {\n                addChildrenToRange(childItem, range, tree)\n            }\n        })\n    }\n}\n\nconst getOrderedRange = () => {\n    const {components} = useComponentsStore.getState()\n    const {groups, groupedComponents} = getMainStateStoreState()\n    const tree = generateTree(components, groups, groupedComponents, true)\n    const root = tree.items[tree.rootId]\n    const range: string[] = []\n    root.children.forEach((id) => {\n        range.push(id)\n        const item = tree.items[id]\n        if (!item) return\n        addChildrenToRange(item, range, tree)\n    })\n    return range\n}\n\nconst selectRange = (id: string) => {\n    const orderedRange = getOrderedRange()\n    if (!lastSelectedItem) {\n        const selectedComponents = Object.keys(getSelectedComponents())\n        const last = selectedComponents.length;\n        const sorted = sortBy(selectedComponents, (child) => {\n            return orderedRange.indexOf(child) !== -1 ? orderedRange.indexOf(child) : last;\n        })\n        lastSelectedItem = sorted[0]\n    }\n    const fromIndex = orderedRange.indexOf(lastSelectedItem)\n    const toIndex = orderedRange.indexOf(id)\n    const reverse = toIndex < fromIndex\n    const lowest = reverse ? toIndex : fromIndex\n    const highest = reverse ? fromIndex : toIndex\n    const selected = orderedRange.slice(lowest, highest + 1)\n    const selectedComponents: {\n        [key: string]: true,\n    } = {}\n    selected.forEach((componentId) => {\n        selectedComponents[componentId] = true\n    })\n    setSelectedComponents(selectedComponents)\n}\n\nconst EditName: React.FC<{\n    name: string,\n    onChange: (name: string) => void,\n}> = ({name, onChange}) => {\n    const [editName, setEditName] = useState(name)\n    const inputRef = useRef()\n    useEffect(() => {\n        inputRef.current?.focus()\n    }, [])\n    return (\n        <StyledInputWrapper as=\"form\" onSubmit={event => {\n            event.preventDefault()\n            onChange(editName)\n        }}>\n            <input ref={inputRef} type=\"text\" value={editName} onChange={event => setEditName(event.target.value)} onClick={event => event.stopPropagation()} onBlur={() => onChange('')}/>\n        </StyledInputWrapper>\n    )\n}\n\nconst SceneItem: React.FC<{\n    id: string,\n    iconProps?: any,\n    icon?: any,\n    draggable?: boolean,\n    isGroup?: boolean,\n    isExpanded?: boolean,\n    onClick?: () => void,\n    name: string,\n}> = ({\n                           name: passedName,\n          iconProps = {},\n          icon,\n          id,\n          isGroup,\n          draggable = true,\n          isExpanded = false,\n          onClick: passedOnClick\n      }) => {\n\n    const isSelected = useIsItemSelected(id)\n    const [focused, setFocused] = useState(false)\n    const buttonRef = useRef()\n    const canHaveChildren = useComponentCanHaveChildren(id)\n    const customName = useComponentName(id)\n    const [editingName, setEditingName] = useState(false)\n    const isHovered = useIsComponentHovered(id)\n\n    const name = customName || passedName\n\n    useEffect(() => {\n        if (isSelected) {\n            buttonRef.current.focus()\n        }\n    }, [isSelected])\n\n    useEffect(() => {\n        if (isSelected && focused) {\n            return () => {\n                buttonRef.current?.blur()\n            }\n        }\n    }, [isSelected, focused])\n\n    useEffect(() => {\n        if (focused && isSelected) {\n\n            const callback = () => {\n                if (hotkeys.isPressed(27)) {\n                    setSelectedComponents({})\n                }\n            }\n\n            hotkeys('*', callback)\n\n            return () => {\n                hotkeys.unbind('*', callback)\n            }\n\n        }\n    }, [focused, isSelected])\n\n    const updateName = useCallback((updatedName: string) => {\n        setEditingName(false)\n        if (!updatedName) return\n        if (isGroup) {\n            setGroupName(id, updatedName)\n        } else {\n            setComponentName(id, updatedName)\n        }\n    }, [isGroup])\n\n    const {\n        onClick, onFocus,\n        onBlur, onDelete,\n        onAddChild,\n        onContextMenu,\n        onNameClicked,\n    } = useMemo(() => ({\n        onNameClicked: () => {\n          if (isSelected) {\n              setEditingName(true)\n          }\n        },\n        onContextMenu: (event: any) => {\n            event.preventDefault()\n            console.log('event', event)\n            displayComponentContextMenu(Object.keys(getMainStateStoreState().selectedComponents), [event.clientX, event.clientY])\n        },\n        onAddChild: (event: any) => {\n            event.stopPropagation()\n            setDisplayAddingComponent(true, id)\n        },\n        onDelete: (event: any) => {\n            event.stopPropagation()\n            deleteComponent(id)\n        },\n        onFocus: () => {\n            setFocused(true)\n        },\n        onBlur: () => {\n            setFocused(false)\n        },\n        onClick: (event: any) => {\n            event.stopPropagation()\n            buttonRef.current?.focus()\n            if (isCommandPressed()) {\n                if (isSelected) {\n                    updateSelectedComponents(state => {\n                        const updatedState = {\n                            ...state,\n                        }\n                        delete updatedState[id]\n                        return updatedState\n                    })\n                } else {\n                    updateSelectedComponents(state => ({\n                        ...state,\n                        [id]: true,\n                    }))\n                }\n                setLastSelectedItem(id)\n            } else if (isShiftPressed()) {\n                selectRange(id)\n            } else {\n                selectItem(id)\n                setLastSelectedItem(id)\n            }\n        }\n    }), [isSelected])\n\n    return (\n        <>\n            {\n                focused && <SelectedComponentListeners/>\n            }\n            <StyledDraggableContainer>\n                <StyledWrapper>\n                    <StyledClickable ref={buttonRef} onClick={onClick} onFocus={onFocus} onBlur={onBlur}\n                                     onContextMenu={onContextMenu}\n                                     appearance={isSelected ? 'selected' : isHovered ? 'hovered' : ''}>\n                        <StyledIcon {...iconProps} style={draggable ? 'interactive' : ''}>\n                            {icon}\n                        </StyledIcon>\n                        <div>\n                            <span onClick={onNameClicked}>\n                                {name}\n                            </span>\n                            {\n                                isGroup && (\n                                    <StyledToggleIcon onClick={(event) => {\n                                        event.preventDefault()\n                                        event.stopPropagation()\n                                        passedOnClick()\n                                    }}>\n                                        {\n                                            isExpanded ? (\n                                                <FaCaretUp size={11}/>\n                                            ) : (\n                                                <FaCaretDown size={11}/>\n                                            )\n                                        }\n                                    </StyledToggleIcon>\n                                )\n                            }\n                        </div>\n                        <StyledOptions>\n                            {\n                                canHaveChildren && (\n                                    <StyledTrash style=\"interactive\" onClick={onAddChild}>\n                                        <FaPlus size={10}/>\n                                    </StyledTrash>\n                                )\n                            }\n                        </StyledOptions>\n                    </StyledClickable>\n                    {\n                        editingName && (\n                            <EditName name={name} onChange={updateName}/>\n                        )\n                    }\n                </StyledWrapper>\n            </StyledDraggableContainer>\n            {\n                !isGroup && (\n                    <SceneChildren id={id}/>\n                )\n            }\n        </>\n    )\n}\n\nconst Draggable: React.FC<RenderItemParams> = ({item, onExpand, onCollapse, provided, snapshot}) => {\n\n    const isGroup = item.data.type === TreeItemType.group\n    const cantDrag = item.children.length > 0 && item.isExpanded\n    const {isExpanded = false} = item\n\n    const {\n        onBlur,\n        onDragStart,\n        onFocus,\n        onKeyDown,\n        onMouseDown,\n        onTouchStart,\n        ...otherProps\n    } = provided?.dragHandleProps ?? {}\n\n    const dragHandleProps = cantDrag ? {\n        ...otherProps\n    } : {\n        onBlur,\n        onDragStart,\n        onFocus,\n        onKeyDown,\n        onMouseDown,\n        onTouchStart,\n        ...otherProps,\n    }\n\n    const onHandleClicked = () => {\n        if (isExpanded) {\n            onCollapse(item.id)\n        } else {\n            onExpand(item.id)\n        }\n    }\n\n    const iconType = isGroup ? isExpanded ? SceneItemIcon.group : SceneItemIcon.groupClosed : SceneItemIcon.component\n\n    return (\n        <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}>\n            <SceneItem\n                id={item.id}\n                itemChildren={item.data.children ?? []}\n                iconProps={dragHandleProps}\n                onClick={isGroup ? onHandleClicked : undefined}\n                icon={<ItemIcon iconType={iconType}/>} isGroup={isGroup} draggable={!cantDrag}\n                isExpanded={isExpanded} name={item.data ? item.data.title : ''}/>\n        </div>\n    );\n}\n\nconst StyledContainer = styled('div', {\n    overflowY: 'auto',\n    padding: `6px 0`,\n})\n\nexport const SceneList: React.FC<{\n    view: VIEWS,\n}> = ({view}) => {\n\n    const showActive = view === VIEWS.active\n\n    const [tree, setState] = useSceneTree(showActive)\n\n    const {\n        onExpand,\n        onCollapse,\n        onDragEnd,\n    } = useMemo(() => ({\n        onExpand: (itemId: ItemId) => {\n            setState(mutateTree(tree, itemId, {isExpanded: true}));\n            setComponentTreeItemExpanded(itemId, true)\n        },\n        onCollapse: (itemId: ItemId) => {\n            setState(mutateTree(tree, itemId, {isExpanded: false}));\n            setComponentTreeItemExpanded(itemId, false)\n        },\n        onDragEnd: (\n            source: TreeSourcePosition,\n            destination?: TreeDestinationPosition,\n        ) => {\n            if (!destination) {\n                return;\n            }\n            const destinationItem = tree.items[destination.parentId]\n            if (destination.parentId !== ROOT_ID && (!destinationItem || destinationItem.data.type !== TreeItemType.group)) return\n            const updatedTree = moveItemOnTree(tree, source, destination)\n            if (source.parentId !== destination.parentId) {\n                const id = tree.items[source.parentId].children[source.index]\n                if (!id) {\n                    throw new Error(`Id not found ${id}`)\n                }\n                updateComponentLocation(id, destination.parentId)\n            }\n            setComponentsTree(updatedTree)\n            setState(updatedTree);\n        },\n    }), [tree])\n\n\n    return (\n        <StyledContainer>\n            <Tree\n                tree={tree}\n                renderItem={Draggable}\n                onExpand={onExpand}\n                onCollapse={onCollapse}\n                onDragEnd={onDragEnd}\n                isDragEnabled={showActive}\n                isNestingEnabled={showActive}\n                offsetPerLevel={sidePadding}\n                key={showActive ? 'active' : 'deactivated'}\n            />\n        </StyledContainer>\n    );\n}","import {Shortcuts} from 'shortcuts';\nimport {ShortcutDescriptor} from \"shortcuts/src/types\";\nimport {useEffect} from \"react\";\n\nconst shortcutsManager = new Shortcuts()\n\nexport const registerShortcut = (shortcuts: ShortcutDescriptor | ShortcutDescriptor[], manager?: Shortcuts) => {\n    if (!manager) {\n        manager = shortcutsManager\n    }\n\n    manager.add(shortcuts)\n\n    return () => {\n        manager?.remove(shortcuts)\n    }\n}\n\nexport const useShortcut = (shortcuts: ShortcutDescriptor | ShortcutDescriptor[], manager?: Shortcuts) => {\n\n    useEffect(() => {\n        return registerShortcut(shortcuts, manager)\n    }, [])\n\n}","import React from \"react\"\nimport {useShortcut} from \"./shortcuts\";\nimport {copySelectedComponents, deleteSelectedComponents} from \"./state/main/actions\";\n\nexport const SelectedComponentListeners: React.FC = () => {\n\n    useShortcut([\n        {\n            shortcut: 'Backspace',\n            handler: () => {\n                deleteSelectedComponents()\n            }\n        },\n        {\n            shortcut: 'Delete',\n            handler: () => {\n                deleteSelectedComponents()\n            }\n        }, {\n            shortcut: 'CmdOrCtrl+C',\n            handler: () => {\n                copySelectedComponents()\n            }\n        }])\n\n    return null\n}","import React, {useState} from \"react\"\nimport {SceneList, StyledButton} from \"./SceneList\";\nimport { styled } from \"./ui/sitches.config\";\nimport {setSelectedComponents} from \"./state/main/actions\";\nimport {addingComponentClosed, setDisplayAddingComponent, uiProxy} from \"./state/ui\";\n\nconst StyledContainer = styled('div', {\n    display: 'grid',\n    height: '100%',\n    gridTemplateRows: 'auto minmax(0, 1fr) auto',\n})\n\nexport const StyledTextButton = styled(StyledButton, {\n    cursor: 'pointer',\n    color: '$midPurple',\n    '&:hover': {\n        color: '$lightPurple',\n        textDecoration: 'underline',\n    }\n})\n\nexport const StyledPlainButton: any = styled(StyledButton, {\n    fontSize: '$1b',\n    fontWeight: '$medium',\n    border: '2px solid $purple',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '9999999px',\n    padding: '$2',\n    transition: '200ms ease all',\n    '&:not(:disabled)': {\n        cursor: 'pointer',\n    },\n    '&:hover:not(:disabled)': {\n        borderColor: '$purple',\n        backgroundColor: '$purple',\n        color: '$white',\n    },\n    '&:disabled': {\n      borderColor: 'transparent',\n        opacity: 0.6,\n    },\n    variants: {\n        appearance: {\n          faint: {\n              borderColor: '$darkPurple',\n          }\n        },\n        shape: {\n            tiny: {\n              padding: '0 $1b',\n              fontSize: '$1',\n            },\n            full: {\n                width: '100%',\n            },\n            thinner: {\n                padding: '0 $2b',\n                height: '25px',\n            },\n            thinnerWide: {\n                padding: '0 $2b',\n                height: '25px',\n                width: '100%',\n            },\n            round: {\n                padding: '0',\n                width: '25px',\n                height: '25px',\n            }\n        }\n    }\n})\n\nexport const StyledHeading = styled('h3', {\n    fontSize: '$1b'\n})\n\nconst StyledBox = styled('div', {\n    maxHeight: '100%',\n})\n\nexport const StyledPaddedBox = styled('div', {\n    padding: '$2b $3',\n    variants: {\n        visual: {\n            top: {\n                borderBottom: '1px solid $faint',\n            },\n            bottom: {\n                borderTop: '1px solid $faint',\n            },\n        }\n    }\n})\n\nconst StyledHeader = styled(StyledPaddedBox, {\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: '1fr auto',\n    columnGap: '$2',\n})\n\nexport enum VIEWS {\n    active = 'active',\n    deactivated = 'deactivated',\n}\n\nexport const ManagerSidebar: React.FC = () => {\n\n    const [selectedView, setSelectedView] = useState(VIEWS.active)\n\n    return (\n        <StyledContainer>\n            <StyledHeader visual=\"top\">\n                <StyledHeading>\n                    Scene\n                </StyledHeading>\n                <div>\n                    <select value={selectedView} onChange={event => setSelectedView(event.target.value as VIEWS)}>\n                        <option value={VIEWS.active}>Active</option>\n                        <option value={VIEWS.deactivated}>Deactivated</option>\n                    </select>\n                </div>\n            </StyledHeader>\n            <StyledBox onClick={() => {\n                if (!uiProxy.displayAddingComponent && addingComponentClosed < Date.now() - 50) {\n                    setSelectedComponents({})\n                }\n            }}>\n                <SceneList view={selectedView}/>\n            </StyledBox>\n            <StyledPaddedBox visual=\"bottom\">\n                <StyledPlainButton shape=\"full\" onClick={() => {\n                    setDisplayAddingComponent(true)\n                }}>\n                    Add Component\n                </StyledPlainButton>\n            </StyledPaddedBox>\n        </StyledContainer>\n    )\n}","import React, {useMemo, useState} from \"react\"\nimport {FaCaretDown, FaCaretUp, FaTimes} from \"react-icons/fa\";\nimport { styled } from \"../../ui/sitches.config\";\nimport {StyledPlainButton} from \"../../ManagerSidebar\";\nimport {NumberInput} from \"./NumberInput\";\nimport {SelectInput} from \"./SelectInput\";\nimport {InputProps} from \"./TextInput\";\nimport {PropOrigin} from \"../../state/props\";\nimport {PropInputOptions} from \"./Options\";\nimport {usePropContext} from \"../ComponentModules\";\nimport { StyledBox } from \"../../ui/generics\";\n\nconst StyledContainer = styled('div', {\n    padding: '$3',\n    borderTop: '1px solid $faint',\n})\n\nconst StyledHeader = styled('div', {\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: 'auto 1fr auto',\n    columnGap: '$2',\n})\n\nconst StyledLabel = styled('label', {\n    fontSize: '$1b',\n    fontWeight: '$semi',\n})\n\nconst StyledInputWrapper = styled('div', {\n    display: 'grid',\n    alignItems: 'center',\n    gridTemplateColumns: 'auto 1fr',\n    columnGap: '$2',\n    marginTop: '$2',\n})\n\nconst StyledInputLabel = styled('label', {\n    minWidth: '60px',\n    display: 'inline-grid',\n    fontSize: '$1b',\n})\n\nconst StyledBody = styled('div', {\n    marginTop: '$3',\n})\n\nconst StyledCollidersContainer = styled('div', {\n    border: '1px solid $faint',\n    marginLeft: '-$2',\n    marginRight: '-$2',\n    maxWidth: 'none',\n    marginTop: '$2',\n})\n\nconst StyledCollidersHeader = styled('header', {\n    padding: '$2',\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    columnGap: '$2',\n    alignItems: 'center',\n})\n\nexport enum RigidBodyColliderShape {\n    BALL = 'BALL',\n    CUBIOD = 'CUBIOD',\n}\n\nexport enum RigidBodyType {\n    DYNAMIC = 'DYNAMIC',\n    STATIC = 'STATIC',\n    KINEMATIC = 'KINEMATIC',\n}\n\nconst options = [\n    {\n        value: RigidBodyType.DYNAMIC,\n        label: 'Dynamic',\n    },\n    {\n        value: RigidBodyType.STATIC,\n        label: 'Static',\n    },\n    {\n        value: RigidBodyType.KINEMATIC,\n        label: 'Kinematic',\n    },\n]\n\nexport type ColliderValue = {\n    key: string,\n    colliderType: RigidBodyColliderShape,\n    hx?: number,\n    hy?: number,\n    hz?: number,\n    radius?: number,\n}\n\nexport type RigidBody3dPropValue = {\n    enabled?: boolean,\n    bodyType?: RigidBodyType,\n    mass?: number,\n    colliders?: ColliderValue[],\n    customBodyDef?: {\n        [key: string]: any,\n    }\n}\n\nconst StyledColliderContainer = styled('div', {\n    padding: '$2',\n    borderTop: '1px solid $faint',\n})\n\nconst RigidBody3DColliderInput: React.FC<{\n    collider: ColliderValue,\n    onChange: (newValue: any) => void,\n    onDelete: () => void,\n}> = ({collider, onChange, onDelete}) => {\n    const {colliderType, key, radius = 1, hx = 0.5, hy = 0.5, hz = 0.5} = collider\n    const {\n        updateValue,\n    } = useMemo(() => ({\n        updateValue: (newValue: any,) => {\n            const updatedCollider = {\n                ...collider,\n                ...newValue,\n            }\n            onChange(updatedCollider)\n        }\n    }), [onChange])\n    return (\n        <StyledColliderContainer>\n            <StyledInputWrapper css={{\n                gridTemplateColumns: 'auto 1fr auto',\n                marginTop: '0',\n            }}>\n                <StyledInputLabel htmlFor={`${key}-shape`}>\n                    Shape\n                </StyledInputLabel>\n                <div>\n                    <SelectInput inputId={`${key}-shape`} value={colliderType} onChange={(newValue: any) => {\n                        updateValue({\n                            colliderType: newValue,\n                        })\n                    }} options={[{\n                        value: RigidBodyColliderShape.BALL,\n                        label: 'Ball',\n                    }, {\n                        value: RigidBodyColliderShape.CUBIOD,\n                        label: 'Cubiod',\n                    }]}/>\n                </div>\n                <div>\n                    <button onClick={onDelete}>\n                        <FaTimes size={11}/>\n                    </button>\n                </div>\n            </StyledInputWrapper>\n            {\n                colliderType === RigidBodyColliderShape.BALL && (\n                    <>\n                        <StyledInputWrapper>\n                            <StyledInputLabel htmlFor={`${key}-radius`}>\n                                Radius\n                            </StyledInputLabel>\n                            <NumberInput inputId={`${key}-radius`} value={radius} onChange={(newValue: any) => {\n                                updateValue({\n                                    radius: newValue,\n                                })\n                            }}/>\n                        </StyledInputWrapper>\n                    </>\n                )\n            }\n            {\n                colliderType === RigidBodyColliderShape.CUBIOD && (\n                    <>\n                        <StyledInputWrapper>\n                            <StyledInputLabel htmlFor={`${key}-hx`}>\n                                hx\n                            </StyledInputLabel>\n                            <NumberInput inputId={`${key}-hx`} value={hx} onChange={(newValue: any) => {\n                                updateValue({\n                                    hx: newValue,\n                                })\n                            }}/>\n                        </StyledInputWrapper>\n                        <StyledInputWrapper>\n                            <StyledInputLabel htmlFor={`${key}-hy`}>\n                                hy\n                            </StyledInputLabel>\n                            <NumberInput inputId={`${key}-hy`} value={hy} onChange={(newValue: any) => {\n                                updateValue({\n                                    hy: newValue,\n                                })\n                            }}/>\n                        </StyledInputWrapper>\n                        <StyledInputWrapper>\n                            <StyledInputLabel htmlFor={`${key}-hz`}>\n                                hz\n                            </StyledInputLabel>\n                            <NumberInput inputId={`${key}-hz`} value={hz} onChange={(newValue: any) => {\n                                updateValue({\n                                    hz: newValue,\n                                })\n                            }}/>\n                        </StyledInputWrapper>\n                    </>\n                )\n            }\n        </StyledColliderContainer>\n    )\n}\n\nexport const RigidBody3DInput: React.FC<InputProps> = ({\n    value,\n    inputId,\n    onChange: passedOnChange,\n                                                       }) => {\n\n    const [isExpanded, setIsExpanded] = useState(true)\n\n    const {\n        enabled = true,\n        bodyType = RigidBodyType.DYNAMIC,\n        mass = 1,\n        colliders = [],\n    } = value as RigidBody3dPropValue\n\n    const {\n        addCollider,\n        updateCollider,\n        deleteCollider,\n    } = useMemo(() => ({\n        addCollider: () => {\n            const newCollider: ColliderValue = {\n                key: Date.now().toString(),\n                colliderType: RigidBodyColliderShape.BALL,\n            }\n            const updatedValue = {\n                ...value,\n                colliders: colliders.concat([newCollider])\n            }\n            passedOnChange(updatedValue)\n        },\n        updateCollider: (index: number, newValue: any) => {\n            const updatedColliders = colliders.slice()\n            updatedColliders[index] = newValue\n            const updatedValue = {\n                ...value,\n                colliders: updatedColliders,\n            }\n            passedOnChange(updatedValue)\n        },\n        deleteCollider: (index: number,) => {\n            const updatedColliders = colliders.slice()\n            updatedColliders.splice(index, 1)\n            const updatedValue = {\n                ...value,\n                colliders: updatedColliders,\n            }\n            passedOnChange(updatedValue)\n        }\n    }), [value, colliders])\n\n    const {\n        propKey,\n        propType,\n        componentTypeId,\n        componentId,\n    } = usePropContext()\n\n    return (\n        <StyledContainer>\n            <StyledHeader>\n                <div>\n                    <input id={inputId} type=\"checkbox\" checked={enabled} onChange={(event) => {\n                        const updatedValue = {\n                            ...value,\n                            enabled: event.target.checked,\n                        }\n                        passedOnChange(updatedValue)\n                    }}/>\n                </div>\n                <StyledBox css={{\n                    display: 'grid',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'auto 1fr',\n                    columnGap: '$0b',\n                }}>\n                    <StyledLabel htmlFor={inputId}>RigidBody 3D</StyledLabel>\n                    <PropInputOptions propKey={propKey} propType={propType as PropOrigin} componentId={componentId} componentTypeId={componentTypeId} inputValue={value}/>\n                </StyledBox>\n                <div>\n                    <button onClick={() => {\n                        setIsExpanded(state => !state)\n                    }}>\n                        {\n                            isExpanded ? (\n                                <FaCaretUp/>\n                            ) : (\n                                <FaCaretDown/>\n                            )\n                        }\n                    </button>\n                </div>\n            </StyledHeader>\n            {\n                isExpanded && (\n                    <StyledBody>\n                        <StyledInputWrapper>\n                            <StyledInputLabel htmlFor=\"rigidBody3d-type\">\n                                Type\n                            </StyledInputLabel>\n                            <div>\n                                <SelectInput inputId=\"rigidBody3d-type\" value={bodyType} onChange={(newValue: any) => {\n                                    const updatedValue = {\n                                        ...value,\n                                        bodyType: newValue,\n                                    }\n                                    passedOnChange(updatedValue)\n                                }} options={options}/>\n                            </div>\n                        </StyledInputWrapper>\n                        {\n                            (bodyType === RigidBodyType.DYNAMIC) && (\n                                <StyledInputWrapper>\n                                    <StyledInputLabel htmlFor=\"rigidBody3d-mass\">\n                                        Mass\n                                    </StyledInputLabel>\n                                    <div>\n                                        <NumberInput inputId=\"rigidBody3d-mass\" value={mass} onChange={(newValue: any) => {\n                                            const updatedValue = {\n                                                ...value,\n                                                mass: newValue,\n                                            }\n                                            passedOnChange(updatedValue)\n                                        }}/>\n                                    </div>\n                                </StyledInputWrapper>\n                            )\n                        }\n                        <StyledCollidersContainer>\n                            <StyledCollidersHeader>\n                                <div>\n                                    <StyledInputLabel>\n                                        Colliders\n                                    </StyledInputLabel>\n                                </div>\n                                <StyledPlainButton shape=\"thinnerWide\" onClick={addCollider}>Add Collider</StyledPlainButton>\n                            </StyledCollidersHeader>\n                            {\n                                colliders.length > 0 && (\n                                    <div>\n                                        {\n                                            colliders.map((collider, index) => (\n                                                <div key={collider.key}>\n                                                    <RigidBody3DColliderInput collider={collider} onChange={(newValue: any) => {\n                                                        updateCollider(index, newValue)\n                                                    }} onDelete={() => {\n                                                        deleteCollider(index)\n                                                    }}/>\n                                                </div>\n                                            ))\n                                        }\n                                    </div>\n                                )\n                            }\n                        </StyledCollidersContainer>\n                    </StyledBody>\n                )\n            }\n        </StyledContainer>\n    )\n}","import React, {useEffect, useMemo, useState} from \"react\"\nimport {InputProps} from \"./TextInput\";\n\nexport const SelectInput: React.FC<InputProps & {\n    options: {\n        value: string,\n        label?: string,\n    }[]\n}> = ({inputId, value, onChange: passedOnChange, options}) => {\n    const [inputValue, setInputValue] = useState(value ?? '')\n\n    useEffect(() => {\n        setInputValue(value ?? '')\n    }, [value])\n\n    const {\n        onChange,\n    } = useMemo(() => ({\n        onChange: (event: any) => {\n            const newValue = event.target.value\n            setInputValue(newValue)\n            passedOnChange(newValue)\n        },\n    }), [passedOnChange])\n\n    return (\n        <select id={inputId} value={inputValue} onChange={onChange}>\n            {\n                options.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label ?? option.value}\n                    </option>\n                ))\n            }\n        </select>\n    )\n}","import React, {useCallback, useMemo} from \"react\";\nimport {PropOrigin} from \"../../state/props\";\nimport {resetComponentProp, setSharedComponentPropValue} from \"../../state/main/actions\";\nimport {StyledTextButton} from \"../../ManagerSidebar\";\nimport {styled} from \"../../ui/sitches.config\";\n\nconst StyledHeaderOptions = styled('div', {\n    display: 'flex',\n    alignItems: 'center',\n    '> button': {\n        marginLeft: '$1',\n    }\n})\n\nexport const PropInputOptions: React.FC<{\n    inputValue: any,\n    propType: PropOrigin,\n    propKey: string,\n    componentId: string,\n    componentTypeId: string,\n}> = ({inputValue, propType, componentId, propKey, componentTypeId}) => {\n\n    const applyValue = useCallback(() => {\n        setSharedComponentPropValue(componentTypeId, propKey, inputValue)\n    }, [inputValue])\n\n    const {\n        onReset,\n    } = useMemo(() => ({\n        onReset: () => {\n            resetComponentProp(componentId, propKey)\n        },\n    }), [])\n\n    return (\n        <StyledHeaderOptions>\n            {\n                (propType === PropOrigin.modified || propType === PropOrigin.initial) && (\n                    <>\n                        <StyledTextButton onClick={onReset}>\n                            reset\n                        </StyledTextButton>\n                        {\n                            !!componentTypeId && (\n                                <StyledTextButton onClick={applyValue}>\n                                    apply\n                                </StyledTextButton>\n                            )\n                        }\n                    </>\n                )\n            }\n        </StyledHeaderOptions>\n    )\n}","import React, {createContext, useCallback, useContext, useEffect, useMemo, useState} from \"react\"\nimport {Prop} from \"../state/props\";\nimport {predefinedProps} from \"./config\";\nimport {setComponentPropValue} from \"../state/main/actions\";\nimport UnknownInput from \"./inputs/UnknownInput\";\nimport {storeSnapshot} from \"../state/history/actions\";\n\nconst Context = createContext<{\n    propType: string,\n    propKey: string,\n    componentId: string,\n    componentTypeId: string,\n}>({\n    propType: '',\n    propKey: '',\n    componentId: '',\n    componentTypeId: '',\n})\n\nexport const usePropContext = () => useContext(Context)\n\nexport const Module: React.FC<{\n    componentId: string,\n    componentTypeId: string,\n    value: any,\n    propKey: string,\n    propType: string,\n    onChange?: (value: any) => void,\n}> = ({componentId, componentTypeId, value, propKey, propType, onChange: passedOnChange}) => {\n\n    const [inputValue, setInputValue] = useState(value)\n\n    const updateValue = useCallback((newValue: any) => {\n        storeSnapshot()\n        setComponentPropValue(componentId, propKey, newValue)\n        if (passedOnChange) {\n            passedOnChange(newValue)\n        }\n    }, [componentId])\n\n    const {\n        onChange,\n    } = useMemo(() => ({\n        onChange: (newValue: any) => {\n            setInputValue(newValue)\n            updateValue(newValue)\n        },\n    }), [updateValue])\n\n    useEffect(() => {\n        setInputValue(value)\n    }, [value])\n\n    const propConfig = useMemo(() => {\n        return predefinedProps[propKey]\n    }, [propKey])\n\n    const InputComponent = useMemo(() => {\n        return propConfig?.input ?? UnknownInput\n    }, [propConfig])\n\n    const defaultValue = propConfig?.defaultValue ?? ''\n    const inputId = `input-${propKey}`\n\n    return (\n        <Context.Provider value={{\n            propType,\n            propKey,\n            componentId,\n            componentTypeId,\n        }}>\n            <div>\n                {InputComponent && <InputComponent inputId={inputId} value={inputValue ?? defaultValue} onChange={onChange}/>}\n            </div>\n        </Context.Provider>\n    )\n}\n\nexport const ComponentModules: React.FC<{\n    componentId: string,\n    componentTypeId: string,\n    props: {\n        [key: string]: Prop,\n    }\n}> = ({componentId, componentTypeId, props}) => {\n    return (\n        <div>\n            {\n                Object.entries(props).map(([propKey, prop]) => {\n                    if (prop.value === undefined) return null\n                    return (\n                        <Module key={propKey} propKey={propKey} propType={prop.type} value={prop.value} componentId={componentId} componentTypeId={componentTypeId}/>\n                    )\n                })\n            }\n        </div>\n    )\n}","import { styled } from \"./sitches.config\";\n\nexport const StyledBox = styled('div', {})","import {MultiNumberInput} from \"./inputs/MultiNumberInput\";\nimport {RigidBody3DInput} from \"./inputs/RigidBody3DInput\";\n\ninterface PredefinedProp {\n    key: string,\n    label: string,\n    input?: any,\n    defaultValue?: any,\n}\n\nexport const childrenProp: PredefinedProp = {\n    key: '__children',\n    label: 'Children',\n}\n\nexport const modulesProp: PredefinedProp = {\n    key: '__modules',\n    label: 'Modules',\n}\n\nexport const rigidBody3dModuleProp: PredefinedProp = {\n    key: '__rigidBody3dModule',\n    label: 'RigidBody 3D',\n    input: RigidBody3DInput,\n    defaultValue: undefined\n}\n\nexport const positionProp: PredefinedProp = {\n    key: '__position',\n    label: 'Position',\n    input: MultiNumberInput,\n    defaultValue: {x: 0, y: 0, z: 0,}\n}\n\nexport const rotationProp: PredefinedProp = {\n    key: '__rotation',\n    label: 'Rotation',\n    input: MultiNumberInput,\n    defaultValue: {x: 0, y: 0, z: 0,}\n}\n\nexport const scaleProp: PredefinedProp = {\n    key: '__scale',\n    label: 'Scale',\n    input: MultiNumberInput,\n    defaultValue: {x: 1, y: 1, z: 1,}\n}\n\nexport const predefinedProps = {\n    [positionProp.key]: positionProp,\n    [rotationProp.key]: rotationProp,\n    [scaleProp.key]: scaleProp,\n    [rigidBody3dModuleProp.key]: rigidBody3dModuleProp,\n}\n\nexport const predefinedBottomProps = {\n    [rigidBody3dModuleProp.key]: rigidBody3dModuleProp,\n}\n\nexport const predefinedPropKeys = {\n    position: positionProp.key,\n    rotation: rotationProp.key,\n    scale: scaleProp.key,\n    rigidBody3d: rigidBody3dModuleProp.key,\n    modules: modulesProp.key,\n    children: childrenProp.key,\n}","import React, {useEffect, useMemo, useState} from \"react\"\nimport {styled} from \"../ui/sitches.config\"\nimport {Prop, PropOrigin, useComponentProps} from \"../state/props\";\nimport {setComponentPropValue} from \"../state/main/actions\";\nimport {useComponent} from \"../state/components/hooks\";\nimport {\n    modulesProp,\n    positionProp,\n    predefinedBottomProps,\n    predefinedProps,\n    rigidBody3dModuleProp,\n    rotationProp,\n    scaleProp\n} from \"./config\";\nimport {ComponentModules, Module} from \"./ComponentModules\";\nimport {PropInputOptions} from \"./inputs/Options\";\nimport {StyledPaddedBox, StyledPlainButton} from \"../ManagerSidebar\";\n\nconst StyledContainer = styled('div', {\n    height: '100%',\n    display: 'grid',\n    gridTemplateRows: '1fr auto',\n})\n\nconst StyledProp = styled('div', {\n    marginTop: '$2',\n})\n\nconst StyledHeader = styled('header', {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 $3',\n    marginBottom: '$1',\n    minHeight: '18px',\n})\n\nconst StyledHeaderLabel = styled('label', {\n    fontSize: '$1b',\n})\n\nconst StyledInputContainer = styled('div', {\n    padding: '0 $3',\n})\n\nconst PropInput: React.FC<{\n    componentId: string,\n    componentTypeId: string,\n    propKey: string,\n    value: any,\n    propType: string,\n}> = ({\n    componentId,\n    componentTypeId,\n    propKey,\n    value,\n    propType\n                       }) => {\n\n    const [inputValue, setInputValue] = useState(value)\n\n    useEffect(() => {\n        setInputValue(value)\n    }, [value])\n\n    const inputId = `input-${propKey}`\n\n    const propConfig = useMemo(() => {\n        return predefinedProps[propKey]\n    }, [propKey])\n\n    const label = propConfig?.label ?? propKey\n\n    return (\n        <StyledProp>\n            <StyledHeader>\n                <StyledHeaderLabel htmlFor={inputId}>{label || propKey}</StyledHeaderLabel>\n                <PropInputOptions propKey={propKey} propType={propType as PropOrigin} componentId={componentId} componentTypeId={componentTypeId} inputValue={inputValue}/>\n            </StyledHeader>\n            <StyledInputContainer>\n                <Module propType={propType} componentId={componentId} componentTypeId={componentTypeId} value={value} propKey={propKey} onChange={setInputValue}/>\n            </StyledInputContainer>\n        </StyledProp>\n    )\n}\n\nconst defaultOrder = [positionProp.key, rotationProp.key, scaleProp.key]\n\nconst sortProps = ([propA]: [string, any], [propB]: [string, any]) => {\n    let propAIndex = defaultOrder.indexOf(propA)\n    propAIndex = propAIndex === -1 ? 9999 : propAIndex\n    let propBIndex = defaultOrder.indexOf(propB)\n    propBIndex = propBIndex === -1 ? 9999 : propBIndex\n    return propAIndex - propBIndex\n}\n\nconst CustomProps: React.FC<{\n    componentId: string,\n    componentTypeId: string,\n    props: {\n        [key: string]: Prop,\n    }\n}> = ({componentId, componentTypeId, props}) => {\n    return (\n        <div>\n            {\n                Object.entries(props).sort(sortProps).map(([key, prop]) => (\n                    <PropInput componentId={componentId} componentTypeId={componentTypeId} key={key} propKey={key} value={prop.value} propType={prop.type}/>\n                ))\n            }\n        </div>\n    )\n}\n\nexport const ComponentState: React.FC<{\n    id: string,\n}> = ({id}) => {\n    const componentProps = useComponentProps(id)\n    const component = useComponent(id)\n    const componentTypeId = component?.componentId ?? ''\n    const {\n        [modulesProp.key]: modules,\n        ...remainingProps\n    } = componentProps\n    const {\n        customProps,\n        bottomProps\n    } = useMemo(() => {\n        const customProps: {\n            [key: string]: Prop,\n        } = {}\n        const bottomProps: {\n            [key: string]: Prop,\n        } = {}\n        Object.entries(remainingProps).forEach(([key, prop]) => {\n            if (prop.hidden) return\n            if (predefinedBottomProps[key]) {\n                bottomProps[key] = prop\n            } else {\n                customProps[key] = prop\n            }\n        })\n        return {\n            customProps,\n            bottomProps,\n        }\n    }, [remainingProps])\n\n    const {\n        addModule,\n    } = useMemo(() => ({\n        addModule: () => {\n            if (!componentProps[rigidBody3dModuleProp.key] || componentProps[rigidBody3dModuleProp.key].value === undefined) {\n                setComponentPropValue(id, rigidBody3dModuleProp.key, {\n                    enabled: true,\n                })\n            }\n        }\n    }), [componentProps])\n\n    return (\n        <>\n            <StyledContainer>\n                <CustomProps componentId={id} componentTypeId={componentTypeId} props={customProps}/>\n                {\n                    modules && (\n                        <ComponentModules componentId={id} componentTypeId={componentTypeId} props={bottomProps}/>\n                    )\n                }\n            </StyledContainer>\n            {\n                modules && (\n                    <StyledPaddedBox visual=\"bottom\">\n                        <StyledPlainButton shape=\"full\" onClick={addModule}>\n                            Add Module\n                        </StyledPlainButton>\n                    </StyledPaddedBox>\n                )\n            }\n        </>\n    )\n}","import React, {createContext, useContext} from \"react\"\nimport { styled } from \"./ui/sitches.config\"\nimport {StyledHeading, StyledPaddedBox} from \"./ManagerSidebar\";\nimport {ComponentState} from \"./componentEditor/ComponentState\";\nimport {useComponentName, useSoleSelectedComponent} from \"./state/main/hooks\";\nimport {useComponent} from \"./state/components/hooks\";\n\nconst StyledContainer = styled('div', {\n    height: '100%',\n    display: 'grid',\n    gridTemplateRows: 'auto 1fr auto',\n})\n\ninterface ContextState {\n    selectedComponent: string,\n}\n\nconst Context = createContext<ContextState>(null!)\n\nexport const useCurrentComponentId = () => {\n    return useContext(Context).selectedComponent\n}\n\nconst SidebarHeader: React.FC<{\n    id: string,\n}> = ({id}) => {\n    const component = useComponent(id)\n    const customName = useComponentName(id)\n    const name = customName || (component?.name ?? '')\n    return (\n        <StyledPaddedBox visual=\"top\">\n            <StyledHeading>\n                {name}\n            </StyledHeading>\n        </StyledPaddedBox>\n    )\n}\n\nexport const StateSidebar: React.FC = () => {\n    const selectedComponent = useSoleSelectedComponent()\n    if (!selectedComponent) return null\n    return (\n        <Context.Provider value={{\n            selectedComponent,\n        }}>\n            <StyledContainer>\n                <SidebarHeader id={selectedComponent}/>\n                <ComponentState id={selectedComponent} key={selectedComponent}/>\n            </StyledContainer>\n        </Context.Provider>\n    )\n}","import React from \"react\"\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { styled } from \"./ui/sitches.config\"\nimport {\n    setAddingComponent,\n    setDisplayAddingComponentParent,\n    setDisplayAddingComponent,\n    uiProxy,\n    addComponent\n} from \"./state/ui\";\nimport {useProxy} from \"valtio\";\nimport {ItemIcon, SceneItemIcon, StyledClickable, StyledIcon} from \"./SceneList\";\nimport {FaMousePointer} from \"react-icons/fa\";\nimport {useAddableStore} from \"../scene/addables\";\n\nconst StyledContainer = styled('div', {\n    position: 'absolute',\n    left: '100%',\n    top: 0,\n    bottom: 0,\n    zIndex: '$high',\n    width: '260px',\n    backgroundColor: '$darkGreyLighter',\n    borderLeft: '1px solid $darkGrey',\n    padding: '$2',\n    overflowY: 'auto',\n})\n\nconst StyledAddableComponent = styled(StyledClickable, {\n    '&:not(:first-child)': {\n        marginTop: '$0b',\n    }\n})\n\nconst StyledIconWrapper = styled('span', {\n    position: 'relative',\n    left: '1px',\n})\n\nconst closeAddingComponent = () => {\n    setDisplayAddingComponent(false)\n    setDisplayAddingComponentParent('')\n}\n\nconst AddableComponent: React.FC<{\n    label: string,\n    addableId: string,\n}> = ({label, addableId}) => {\n    return (\n        <StyledAddableComponent onClick={() => {\n            addComponent(addableId, uiProxy.displayAddingComponentParent)\n            closeAddingComponent()\n        }}>\n            <StyledIcon>\n                <ItemIcon iconType={SceneItemIcon.component}/>\n            </StyledIcon>\n            <div>\n                {label}\n            </div>\n            <StyledIcon appearance=\"clickable\" onClick={(event: any) => {\n                event.stopPropagation()\n                setAddingComponent(addableId)\n                closeAddingComponent()\n            }}>\n                <StyledIconWrapper>\n                    <FaMousePointer size={10} />\n                </StyledIconWrapper>\n            </StyledIcon>\n        </StyledAddableComponent>\n    )\n}\n\nexport const AddingComponentMenu: React.FC = () => {\n    const isAddingComponent = useProxy(uiProxy).displayAddingComponent\n    const addables = useAddableStore(state => state.addables)\n    if (!isAddingComponent) return null\n    return (\n        <OutsideClickHandler onOutsideClick={closeAddingComponent}>\n            <StyledContainer>\n                {\n                    Object.entries(addables).map(([key, addable]) => (\n                        <AddableComponent addableId={addable.id} label={addable.name} key={key}/>\n                    ))\n                }\n            </StyledContainer>\n        </OutsideClickHandler>\n    )\n}","import React, {useMemo} from \"react\"\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { styled } from \"./ui/sitches.config\"\nimport {useProxy} from \"valtio\";\nimport {uiProxy} from \"./state/ui\";\nimport {StyledButton} from \"./SceneList\";\nimport {deleteSelectedComponents, groupComponents, removeDeactivatedComponents} from \"./state/main/actions\";\nimport {useComponentsStore} from \"./state/components/store\";\n\nconst StyledContainer = styled('div', {\n    zIndex: '$max',\n    backgroundColor: '$darkGrey',\n    padding: '$1 0',\n    width: '180px',\n    border: '1px solid $lightPurple',\n    borderRadius: '$1',\n})\n\nconst StyledOption = styled(StyledButton, {\n    width: '100%',\n    padding: '$1 $2',\n    textAlign: 'left',\n    cursor: 'pointer',\n    fontSize: '$1b',\n    fontWeight: '$semi',\n    '&:hover': {\n        backgroundColor: '$purple',\n        color: '$white',\n    }\n})\n\nconst closeContextMenu = () => {\n    uiProxy.componentContextMenu = {\n        visible: false,\n    }\n}\n\nconst useSelectedComponentTypes = (componentIds: string[]) => {\n    return useMemo(() => {\n        let allRoot = true\n        let componentsSelected = false\n        let inactiveComponents = false\n        let groups = false\n        const {components, deactivatedComponents} = useComponentsStore.getState()\n        componentIds.forEach((id) => {\n            if (components[id]) {\n                componentsSelected = true\n                const component = components[id]\n                if (!component.isRoot) {\n                    allRoot = false\n                }\n            } else if (deactivatedComponents[id]) {\n                inactiveComponents = true\n            } else {\n                groups = true\n            }\n        })\n        return {\n            allRoot,\n            hasComponents: componentsSelected,\n            hasInactiveComponents: inactiveComponents,\n            hasGroups: groups,\n        }\n    }, [componentIds])\n}\n\nconst ComponentsMenu: React.FC<{\n    components: string[]\n}> = ({components}) => {\n\n    const {\n        allRoot,\n        hasComponents,\n        hasInactiveComponents,\n        hasGroups\n    } = useSelectedComponentTypes(components)\n\n    const {\n        onDelete,\n        onReactivate,\n        onGroup,\n    } = useMemo(() => ({\n        onGroup: () => {\n            groupComponents(components)\n            closeContextMenu()\n        },\n        onDelete: () => {\n            deleteSelectedComponents()\n            closeContextMenu()\n        },\n        onReactivate: () => {\n            removeDeactivatedComponents(components)\n            closeContextMenu()\n        }\n    }), [components])\n\n    const options = useMemo(() => {\n\n        const multipleComponents = components.length > 1\n\n        const allActive = !hasInactiveComponents\n\n        let options: any[] = []\n\n        const canGroup = allRoot\n\n        if (allActive) {\n            if (!hasGroups) {\n                if (canGroup) {\n                    options.push(\n                        <StyledOption onClick={onGroup} key=\"groupComponents\">\n                            Group component{multipleComponents ? 's' : ''}\n                        </StyledOption>\n                    )\n                }\n                options.push(\n                    <StyledOption onClick={onDelete} key=\"delete\">\n                        Delete component{multipleComponents ? 's' : ''}\n                    </StyledOption>\n                )\n            } else if ((hasComponents || hasGroups) && canGroup) {\n                options.push(\n                    <StyledOption onClick={onGroup} key=\"group\">\n                        Group\n                    </StyledOption>\n                )\n            }\n        }\n        if (hasInactiveComponents) {\n            options.push(\n                <StyledOption onClick={onReactivate} key=\"restore\">\n                    Restore\n                </StyledOption>\n            )\n        }\n\n        return options\n    }, [\n        components,\n        onDelete,\n        onReactivate,\n        onGroup,\n        hasComponents,\n        hasInactiveComponents,\n        hasGroups,\n        allRoot,\n    ])\n\n    return (\n        <StyledContainer>\n            {\n               options\n            }\n        </StyledContainer>\n    )\n}\n\nexport const ContextMenu: React.FC = () => {\n\n    const {componentContextMenu} = useProxy(uiProxy)\n\n    if (!componentContextMenu.visible) return null\n\n    const {position = [0, 0], components = []} = componentContextMenu\n\n    return (\n        <OutsideClickHandler onOutsideClick={closeContextMenu}>\n            <div style={{\n                position: 'fixed',\n                left: `${position[0]}px`,\n                top: `${position[1]}px`,\n            }}>\n                <ComponentsMenu components={components}/>\n            </div>\n        </OutsideClickHandler>\n    )\n}","import React, {useRef} from \"react\"\nimport {useShortcut} from \"./shortcuts\";\nimport {handlePaste} from \"./state/main/actions\";\nimport {redoState, undoState} from \"./state/history/actions\";\n\nconst delay = 100\n\nexport const GlobalHotkeysListener: React.FC = () => {\n\n    const localStateRef = useRef({\n        lastUndo: 0,\n        lastRedo: 0,\n        lastPaste: 0,\n        lastSave: 0,\n    })\n\n    useShortcut([{\n        shortcut: 'CmdOrCtrl+Z',\n        handler: () => {\n            const now = Date.now()\n            if (now > localStateRef.current.lastUndo + delay) {\n                localStateRef.current.lastUndo = now\n                undoState()\n            }\n        }\n    }, {\n        shortcut: 'CmdOrCtrl+Shift+Z',\n        handler: () => {\n            const now = Date.now()\n            if (now > localStateRef.current.lastRedo + delay) {\n                localStateRef.current.lastRedo = now\n                redoState()\n            }\n        }\n    }, {\n        shortcut: 'CmdOrCtrl+S',\n        handler: (event: any) => {\n            event.preventDefault()\n            // saveChanges()\n        }\n    }, {\n        shortcut: 'CmdOrCtrl+V',\n        handler: () => {\n            const now = Date.now()\n            if (now > localStateRef.current.lastPaste + delay) {\n                localStateRef.current.lastPaste = now\n                handlePaste()\n            }\n        }\n    }])\n\n    return null\n}","import React from \"react\"\nimport GoogleFontLoader from \"react-google-font-loader\"\nimport \"./ui/sitches.config\"\n\nconst StyledHeader = styled('header', {\n    backgroundColor: '$darkGrey',\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    alignItems: 'center',\n    height: '$headerHeight',\n    padding: '0 $2'\n})\nimport { styled } from \"./ui/sitches.config\"\nimport {ManagerSidebar, StyledPlainButton} from \"./ManagerSidebar\";\nimport {FaRedo, FaUndo} from \"react-icons/fa\";\nimport {StateSidebar} from \"./StateSidebar\";\nimport {useHotkeysListener} from \"./hotkeys\";\nimport {AddingComponentMenu} from \"./AddingComponentMenu\";\nimport {ContextMenu} from \"./ContextMenu\";\nimport { StyledBox } from \"./ui/generics\"\nimport {BiExpand, BiMove, BiRotateLeft} from \"react-icons/bi\";\nimport {StyledButton} from \"./SceneList\";\nimport {EditorTransformMode, setEditMode, setTransformMode, useIsEditMode, useTransformMode} from \"./state/editor\";\nimport {GlobalHotkeysListener} from \"./GlobalHotkeysListener\";\nimport {getMainStateStoreState} from \"./state/main/store\";\nimport {useComponentsStore} from \"./state/components/store\";\nimport {redoState, undoState} from \"./state/history/actions\";\n\nconst StyledHeaderSide = styled('div', {\n    width: '300px',\n    'h3': {\n        fontSize: '$2',\n        letterSpacing: '1px',\n    }\n})\n\nconst StyledHeaderMiddle = styled('div', {\n    display: 'flex',\n    justifyContent: 'center',\n})\n\nconst StyledHeaderOptions = styled(StyledHeaderSide, {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    '> *:not(:last-child)': {\n        marginRight: '$1',\n    }\n})\n\nconst Header: React.FC = () => {\n    const isEditMode = useIsEditMode()\n    return (\n        <StyledHeader>\n            <StyledHeaderSide>\n                <h3>RGG</h3>\n            </StyledHeaderSide>\n            <StyledHeaderMiddle>\n                <StyledPlainButton shape=\"thinner\" onClick={() => {\n                    setEditMode(!isEditMode)\n                }}>\n                    {\n                        isEditMode ? \"Play\" : \"Edit\"\n                    }\n                </StyledPlainButton>\n            </StyledHeaderMiddle>\n            <StyledHeaderOptions>\n                <StyledPlainButton shape=\"thinner\" appearance=\"faint\" onClick={() => {\n                    console.log(getMainStateStoreState())\n                    console.log(useComponentsStore.getState())\n                }}>\n                    Debug\n                </StyledPlainButton>\n                <StyledPlainButton shape=\"thinner\" appearance=\"faint\">\n                    Discard\n                </StyledPlainButton>\n                <StyledPlainButton shape=\"round\" appearance=\"faint\" onClick={undoState}>\n                    <FaUndo size={9}/>\n                </StyledPlainButton>\n                <StyledPlainButton shape=\"round\" appearance=\"faint\" disabled onClick={redoState}>\n                    <FaRedo size={9}/>\n                </StyledPlainButton>\n                <StyledPlainButton shape=\"thinner\">\n                    Save\n                </StyledPlainButton>\n            </StyledHeaderOptions>\n        </StyledHeader>\n    )\n}\n\nconst StyledDefaultContainer = styled('div', {\n    color: '$lightPurple',\n    fontFamily: '$main',\n    fontSize: '$2',\n})\n\nconst StyledContainer = styled(StyledDefaultContainer, {\n    backgroundColor: '$darkGrey',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'grid',\n    gridTemplateRows: 'auto minmax(0, 1fr)',\n})\n\nconst StyledMain = styled('div', {\n    display: 'grid',\n    gridTemplateColumns: 'auto minmax(0, 1fr) auto',\n})\n\nconst StyledSidebar = styled('div', {\n    width: '$sidebar',\n    backgroundColor: '$darkGreyLighter',\n    position: 'relative',\n    maxHeight: '100%',\n})\n\nconst StyledContent = styled('div', {\n    position: 'relative',\n})\n\nconst StyledBoxButton: any = styled(StyledButton, {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '26px',\n    height: '26px',\n    cursor: 'pointer',\n    variants: {\n        appearance: {\n            active: {\n                backgroundColor: '$purple',\n                color: '$white',\n            }\n        }\n    }\n})\n\nconst OverlayControls: React.FC = () => {\n\n    const transformMode = useTransformMode()\n\n    return (\n        <StyledBox css={{\n            position: 'absolute',\n            top: '$1',\n            right: '$1',\n            zIndex: '$high',\n            display: 'grid',\n            gridTemplateColumns: 'auto auto auto',\n            backgroundColor: '$darkGrey',\n        }}>\n            <StyledBoxButton appearance={transformMode === EditorTransformMode.translate ? 'active' : ''}\n            onClick={() => {\n                setTransformMode(EditorTransformMode.translate)\n            }}>\n                <BiMove size={16}/>\n            </StyledBoxButton>\n            <StyledBoxButton appearance={transformMode === EditorTransformMode.rotate ? 'active' : ''}\n            onClick={() => {\n                setTransformMode(EditorTransformMode.rotate)\n            }}>\n                <BiRotateLeft size={16}/>\n            </StyledBoxButton>\n            <StyledBoxButton appearance={transformMode === EditorTransformMode.scale ? 'active' : ''}\n            onClick={() => {\n                setTransformMode(EditorTransformMode.scale)\n            }}>\n                <BiExpand size={15}/>\n            </StyledBoxButton>\n        </StyledBox>\n    )\n}\n\nexport const Editor: React.FC = ({children}) => {\n    useHotkeysListener()\n    return (\n        <>\n            <GoogleFontLoader\n                fonts={[\n                    {\n                        font: 'Roboto',\n                        weights: [400, 500, 600, 700],\n                    },\n                ]}\n            />\n            <GlobalHotkeysListener/>\n            <StyledContainer>\n                <Header/>\n                <StyledMain>\n                    <StyledSidebar>\n                        <ManagerSidebar/>\n                        <AddingComponentMenu/>\n                    </StyledSidebar>\n                    <StyledContent>\n                        {children}\n                        <OverlayControls/>\n                    </StyledContent>\n                    <StyledSidebar css={{\n                        width: '$sidebarPlus',\n                    }}>\n                        <StateSidebar/>\n                    </StyledSidebar>\n                </StyledMain>\n                <ContextMenu/>\n            </StyledContainer>\n        </>\n    )\n}","import React from \"react\"\nimport {useIsEditMode} from \"../editor/state/editor\";\n\nconst EditFloor: React.FC = () => {\n    const twoDimensional = false\n    const isEditMode = useIsEditMode()\n    return (\n        <>\n            <gridHelper visible={isEditMode} position={[0, 0, -0.01]} args={[1000, 1000, '#888', '#111']} rotation={[twoDimensional ? Math.PI / 2 : 0, 0, 0]} layers={[31]}/>\n        </>\n    )\n}\n\nexport default EditFloor","import React, {useEffect, useLayoutEffect, useRef} from \"react\"\nimport {PerspectiveCamera as PCamera, Vector3} from \"three\";\nimport {OrbitControls, PerspectiveCamera} from \"@react-three/drei\";\nimport {useThree} from \"react-three-fiber\";\nimport {ref, useProxy} from \"valtio\";\nimport {editorStateProxy, useIsEditMode} from \"../editor/state/editor\";\nimport {useCallbackRef, useHotkeys} from \"../custom/hooks\";\nimport {isSpacePressed} from \"../editor/hotkeys\";\n\nconst offsets = {\n    x: 0,\n    // y: 2,\n    // z: 5,\n    y: 25,\n    z: 20,\n}\n\nconst EditCamera: React.FC = () => {\n    const cameraRef = useRef<PCamera>(null!)\n    const orbitRef = useRef<OrbitControls>(null!)\n    const isEditMode = useIsEditMode()\n    const {\n        setDefaultCamera,\n    } = useThree()\n\n    useLayoutEffect(() => {\n        if (isEditMode) {\n            setDefaultCamera(cameraRef.current)\n        }\n    }, [isEditMode])\n\n    useEffect(() => {\n        editorStateProxy.orbitRef = ref(orbitRef)\n    }, [])\n\n    useEffect(() => {\n        if (!orbitRef.current) return\n        orbitRef.current.enabled = isEditMode\n    }, [isEditMode])\n\n    useLayoutEffect(() => {\n        cameraRef.current.layers.enable(31)\n        cameraRef.current.lookAt(0, 5, 0)\n    }, [])\n\n    const selectedRef = useProxy(editorStateProxy).selectedRef\n\n    const spacePressed = useCallbackRef(() => {\n        if (selectedRef) {\n            if (selectedRef) {\n                cameraRef.current.position.set(selectedRef.current.position.x + offsets.x, selectedRef.current.position.y + offsets.y, selectedRef.current.position.z + offsets.z)\n                orbitRef.current.target = new Vector3().copy(selectedRef.current.position)\n            }\n        }\n    }, [selectedRef])\n\n    useHotkeys('*', () => {\n        if (isSpacePressed()) {\n            spacePressed.current()\n        }\n    })\n\n    useEffect(() => {\n        cameraRef.current.position.set(offsets.x, offsets.y, offsets.z)\n    }, [])\n\n    return (\n        <>\n            <PerspectiveCamera ref={cameraRef}/>\n            <OrbitControls ref={orbitRef} />\n        </>\n    )\n}\n\nexport default EditCamera","import {Plane, Sphere} from \"@react-three/drei\"\nimport React, {useEffect, useMemo, useRef, useState} from \"react\"\nimport {DoubleSide, Object3D} from \"three\";\nimport {useFrame, useThree} from \"react-three-fiber\";\nimport {isShiftPressed} from \"./hotkeys\";\nimport {addStoredComponent} from \"./state/ui\";\n\nexport const AddingComponentPlane: React.FC = () => {\n    const planeRef = useRef<Object3D>(null!)\n    const floorRef = useRef<Object3D>(null!)\n    const {camera} = useThree()\n    const [horizontalMode, setHorizontalMode] = useState(true)\n    const localStateRef = useRef({\n        x: 0,\n        z: 0,\n        y: 0,\n        disabled: false,\n        pointerDown: false,\n    })\n    const localState = localStateRef.current\n\n    useEffect(() => {\n        const onMouseDown = () => {\n            localState.pointerDown = true\n        }\n        const onMouseUp = () => {\n            localState.pointerDown = false\n            localState.disabled = false\n        }\n        const onMouseMove = () => {\n            if (localState.pointerDown) {\n                localState.disabled = true\n            }\n        }\n        const onPointerDown = () => {\n            onMouseDown()\n        }\n        const onPointerUp = () => {\n            onMouseUp()\n        }\n        window.addEventListener('pointermove', onMouseMove)\n        window.addEventListener('mousemove', onMouseMove)\n        window.addEventListener('mousedown', onMouseDown)\n        window.addEventListener('mouseup', onMouseUp)\n        window.addEventListener('pointerdown', onPointerDown)\n        window.addEventListener('pointerup', onPointerUp)\n        return () => {\n            window.removeEventListener('pointermove', onMouseMove)\n            window.removeEventListener('mousemove', onMouseMove)\n            window.removeEventListener('mousedown', onMouseDown)\n            window.removeEventListener('mouseup', onMouseUp)\n            window.removeEventListener('pointerdown', onPointerDown)\n            window.removeEventListener('pointerup', onPointerUp)\n        }\n    }, [])\n\n    const {onFloorPointerMove, onVerticalPointerUp, onVerticalMove, onFloorPointerUp} = useMemo(() => (\n        {\n            onVerticalPointerUp: (event: any) => {\n                if (horizontalMode) return\n                if (localState.disabled) return\n                event.stopPropagation()\n                const {y} = event.point\n                const {x, z} = localState\n                addStoredComponent({\n                    x,\n                    y,\n                    z\n                })\n            },\n            onFloorPointerUp: (event: any) => {\n                if (!horizontalMode) return\n                if (localState.disabled) return\n                event.stopPropagation()\n                const {x, z} = event.point\n                const {y} = localState\n                addStoredComponent({\n                    x,\n                    y,\n                    z\n                })\n            },\n            onFloorPointerMove: (event: any) => {\n                if (!horizontalMode) return\n                if (localState.disabled) return\n                event.stopPropagation()\n                const {x, z} = event.point\n                localState.x = x\n                localState.z = z\n            },\n            onVerticalMove: (event: any) => {\n                if (horizontalMode) return\n                if (localState.disabled) return\n                event.stopPropagation()\n                const {y} = event.point\n                localState.y = y\n            },\n        }\n    ), [horizontalMode])\n\n    useEffect(() => {\n        planeRef.current.position.x = localState.x\n        planeRef.current.position.z = localState.z\n        planeRef.current.position.y = localState.y\n        floorRef.current.position.x = Math.round(localState.x)\n        floorRef.current.position.y = localState.y\n        floorRef.current.position.z = Math.round(localState.z)\n    }, [horizontalMode])\n\n    const groupRef = useRef<Object3D>(null!)\n\n    useFrame(() => {\n        planeRef.current.rotation.y = Math.atan2( ( camera.position.x - planeRef.current.position.x ), ( camera.position.z - planeRef.current.position.z ) );\n        groupRef.current.position.y = localState.y\n        groupRef.current.position.x = localState.x\n        groupRef.current.position.z = localState.z\n    })\n\n    useEffect(() => {\n        const callback = () => {\n            setHorizontalMode(!isShiftPressed())\n        }\n        document.addEventListener('keydown', callback)\n        document.addEventListener('keyup', callback)\n        return () => {\n            document.removeEventListener('keydown', callback)\n            document.removeEventListener('keyup', callback)\n        }\n    }, [])\n\n    return (\n        <>\n            <Plane args={[256, 256]} onPointerMove={onFloorPointerMove} onPointerUp={onFloorPointerUp} rotation={[-Math.PI / 2, 0, 0]} ref={floorRef}>\n                <meshBasicMaterial transparent opacity={0} side={DoubleSide} />\n                <gridHelper rotation={[-Math.PI /2, 0, 0]} visible={horizontalMode} position={[0, 0, 0]} args={[1000, 1000, 'rgb(28,113,255, 0.05)', 'rgb(28,113,255, 0.05)']} layers={[31]}/>\n            </Plane>\n            <Plane args={[256, 256]} onPointerMove={onVerticalMove} onPointerUp={onVerticalPointerUp} ref={planeRef}>\n                <meshBasicMaterial transparent opacity={0} side={DoubleSide} />\n                <gridHelper rotation={[-Math.PI /2, 0, 0]} visible={!horizontalMode} args={[1000, 1000, 'rgb(28,113,255, 0.05)', 'rgb(28,113,255, 0.05)']} layers={[31]}/>\n            </Plane>\n            <group ref={groupRef}>\n                <Sphere>\n                    <meshBasicMaterial color=\"green\" />\n                </Sphere>\n            </group>\n        </>\n    )\n}","import React, {useCallback, useEffect, useMemo, useRef} from \"react\"\nimport {TemporaryComponents} from \"./TemporaryComponents\";\nimport EditFloor from \"./EditFloor\";\nimport EditCamera from \"./EditCamera\";\nimport {setComponentPropValue, setSelectedComponents} from \"../editor/state/main/actions\";\nimport {useSelectedComponents} from \"../editor/state/main/hooks\";\nimport {editorStateProxy, useIsEditMode} from \"../editor/state/editor\";\nimport {ref} from \"valtio\";\nimport {useMeshHelper} from \"./InteractiveMesh\";\nimport {useDraggableMesh} from \"./useDraggableMesh\";\nimport {Object3D, Box3, Vector3} from \"three\";\nimport {useCallbackRef} from \"../custom/hooks\";\nimport {predefinedPropKeys} from \"../editor/componentEditor/config\";\nimport {AddingComponentPlane} from \"../editor/AddingComponentPlane\";\nimport {useAddingComponent} from \"../editor/state/ui\";\n\nconst useComponentsAreSelected = () => {\n    const selectedComponents = useSelectedComponents()\n    return Object.keys(selectedComponents).length > 0\n}\n\nexport const useEditCanvasProps = () => {\n\n    const componentsSelected = useComponentsAreSelected()\n    const isEditMode = useIsEditMode()\n\n    return useMemo(() => {\n        return {\n            onPointerMissed: () => {\n                if (!isEditMode) return\n                if (componentsSelected) {\n                    setSelectedComponents({})\n                }\n            }\n        }\n    }, [componentsSelected])\n}\n\nconst center = new Vector3()\n\nconst getCenterPoint = (obj: Object3D) => {\n    const boundingBox = new Box3().setFromObject(obj);\n    console.log('boundingBox', boundingBox)\n    boundingBox.getCenter(center)\n    console.log('center', center)\n    return center\n}\n\nconst MultipleSelectedGroup: React.FC = () => {\n    const groupRef = useRef<Object3D>(null!)\n    const selectedComponents = useSelectedComponents()\n    const active = Object.keys(selectedComponents).length > 1\n    useEffect(() => {\n        editorStateProxy.groupPortalRef = ref(groupRef)\n        return () => {\n            editorStateProxy.groupPortalRef = null\n        }\n    }, [])\n    useMeshHelper(groupRef as any, active)\n    const dragMeshRef = useRef(new Object3D())\n    const originRef = useRef(new Vector3())\n\n    const positionDragRef = useCallback(() => {\n        const centerPosition = getCenterPoint(groupRef.current as any)\n        originRef.current = centerPosition\n        dragMeshRef.current.position.set(centerPosition.x, centerPosition.y, centerPosition.z)\n    }, [])\n\n    useEffect(() => {\n        if (!active) return\n        groupRef.current.position.set(0, 0, 0)\n        setTimeout(positionDragRef)\n    }, [active, selectedComponents])\n    const isDraggingRef = useRef(false)\n    const startingPositionRef = useRef(new Vector3())\n\n    const updateValue = useCallbackRef(() => {\n        const xDifference = groupRef.current.position.x - startingPositionRef.current.x\n        const yDifference = groupRef.current.position.y - startingPositionRef.current.y\n        const zDifference = groupRef.current.position.z - startingPositionRef.current.z\n        Object.keys(selectedComponents).forEach((componentId) => {\n            setComponentPropValue(componentId, predefinedPropKeys.position, (value: any) => {\n                if (!value) {\n                    // todo - get proper default?\n                    value = {\n                        x: 0,\n                        y: 0,\n                        z: 0,\n                    }\n                }\n                return {\n                    x: value.x + xDifference,\n                    y: value.y + yDifference,\n                    z: value.z + zDifference,\n                }\n            })\n        })\n        groupRef.current.position.set(0, 0, 0)\n        positionDragRef()\n    }, [selectedComponents])\n\n    useDraggableMesh('', active, {\n        updateValue: (updateType) => {\n            if (updateType === predefinedPropKeys.position) {\n                updateValue.current()\n            }\n            // todo - support scale and rotate\n        },\n        onChange: () => {\n            if (!isDraggingRef.current) return\n            groupRef.current.position.x = (originRef.current.x - dragMeshRef.current.position.x) * -1\n            groupRef.current.position.y = (originRef.current.y - dragMeshRef.current.position.y) * -1\n            groupRef.current.position.z = (originRef.current.z - dragMeshRef.current.position.z) * -1\n        },\n        onDraggingChanged: (event: any) => {\n            console.log('onDraggingChanged', event)\n            startingPositionRef.current.copy(groupRef.current.position)\n            isDraggingRef.current = event.value\n        },\n        passedRef: dragMeshRef,\n    })\n    return (\n        <>\n            <group ref={groupRef}/>\n            <group ref={dragMeshRef}/>\n        </>\n    )\n}\n\nconst EditTools: React.FC = () => {\n\n    const addingComponent = useAddingComponent()\n\n    return (\n        <>\n            <EditFloor/>\n            <EditCamera/>\n            <MultipleSelectedGroup/>\n            {\n                addingComponent && (\n                    <AddingComponentPlane/>\n                )\n            }\n        </>\n    )\n}\n\nexport const EditCanvas: React.FC = ({children}) => {\n    const isEditMode = useIsEditMode()\n    return (\n        <>\n            {children}\n            {\n                isEditMode && (\n                    <EditTools/>\n                )\n            }\n            <TemporaryComponents/>\n        </>\n    )\n}\n\nconsole.warn(`TODO!!! - 'apply' function is stale, when updating component prop value`)"],"names":["createStyled","tokens","colors","$darkGrey","$darkGreyLighter","$white","$lightPurple","$faint","$purple","$faintPurple","$midPurple","$darkPurple","$pink","sizes","$sidebar","$sidebarPlus","$headerHeight","space","$0b","$1","$1b","$2","$2b","$3","fonts","$main","fontSizes","$4","fontWeights","$regular","$semi","$medium","$bold","radii","zIndices","$high","$max","styled","css","global","margin","padding","boxSizing","maxWidth","EditorTransformMode","StyledContainer","StyledInput","appearance","backgroundColor","border","color","width","fontSize","parens","exp","mul","div","add","sub","NumberInput","inputId","value","passedOnChange","onChange","useState","inputValue","setInputValue","useEffect","useMemo","event","newValue","v","_v","evaluate","expr","isNaN","Number","test","newExpr","replace","_match","subExpr","String","base","pow","Math","a","b","Error","parseFloat","parseNumber","target","React","id","type","inputComponents","input","UnknownInput","props","display","gridTemplateColumns","columnGap","StyledItem","alignItems","StyledLabel","MultiNumberInput","Object","entries","map","index","entryKey","entryValue","key","htmlFor","initialStoreState","componentNames","components","sharedComponents","selectedComponents","componentsTree","unsavedComponents","deactivatedComponents","groups","groupedComponents","useMainStateStore","create","persist","name","onRehydrateStorage","state","version","blacklist","setMainStateStoreState","setState","getMainStateStoreState","getState","incrementor","generateUid","Date","now","toString","getCombinedId","ids","join","PendingPasteType","editorStateProxy","proxy","editMode","transformMode","translate","groupPortalRef","orbitRef","selectedRef","cameraCanvasRef","mainCamera","transformActive","addComponentKey","movingComponents","addComponentPosition","x","y","z","useIsEditMode","useProxy","useTransformMode","setTransformMode","mode","PropOrigin","clipboardProxy","pendingPaste","getSelectedComponents","useHistoryStore","pastSnapshots","futureSnapshots","storeSnapshot","concat","length","shift","undoState","newSnapshot","currentSnapshot","slice","redoState","setComponentPropValue","componentId","propKey","propValue","component","updatedValue","modifiedState","undefined","overriddenState","setSelectedComponents","selected","setComponentTreeItemExpanded","isExpanded","children","deleteComponent","groupId","groupChildren","forEach","push","childId","updatedGroups","deleteGroup","deleteUnsavedComponent","addDeactivatedComponent","deleteSelectedComponents","keys","updated","groupComponents","sameParent","currentParent","parentId","update","useSelectedComponents","useComponentName","_state$componentNames","useComponentsStore","componentsThatCanHaveChildren","useComponent","isCommandPressed","hotkeys","command","cmd","control","isShiftPressed","usePropsStore","setComponentProps","updateFn","getBodyType","bodyType","RigidBodyType","STATIC","BodyStatus","Static","KINEMATIC","Kinematic","Dynamic","RigidBody3DModule","meshRef","useEditableId","setSharedProp","useEditableContext","useEditableProp","predefinedPropKeys","rotation","rX","rY","rZ","useRapier3DBody","position","current","config","colliders","defs","collider","colliderType","RigidBodyColliderShape","BALL","radius","args","hx","hy","hz","generateRigidBodyCollider","generateRigidBodyColliders","mass","quaternion","euler","Euler","Quaternion","setFromEuler","getQuaternionFromEuler","customBody","customBodyDef","_config$customBodyDef2","body","w","generateRigidBodySpec","ref","api","useBodyApi","ColliderVisualiser","Sphere","layers","wireframe","CUBIOD","Box","RigidBody3DModuleVisualizer","visible","scale","RigidBody3DModuleWrapper","useEditableSharedProp","isEditMode","enabled","EditableModules","modulesProp","rigidBody3d","TransformControls","camera","domElement","console","warn","document","Object3D","call","this","_gizmo","TransformControlsGizmo","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","mouseDownEvent","mouseUpEvent","objectChangeEvent","raycaster","Raycaster","intersectObjectWithRay","object","includeInvisible","allIntersections","intersectObject","i","_tempVector","Vector3","_tempVector2","_tempQuaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","propName","defaultValue","get","set","dispatchEvent","getPointer","ownerDocument","pointerLockElement","button","pointer","changedTouches","rect","getBoundingClientRect","clientX","left","clientY","top","height","onPointerHover","pointerType","pointerHover","onPointerDown","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","onPointerUp","removeEventListener","pointerUp","dispose","traverse","child","geometry","material","attach","detach","axis","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","invert","normalize","prototype","dragging","setFromCamera","intersect","picker","planeIntersect","snap","rotationSnap","round","point","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","assign","constructor","isTransformControls","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","transparent","side","DoubleSide","fog","toneMapped","gizmoLineMaterial","LineBasicMaterial","linewidth","matInvisible","clone","opacity","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","CylinderGeometry","scaleHandleGeometry","BoxGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","CircleGeometry","arc","vertices","cos","PI","sin","gizmoTranslate","Mesh","Line","XYZ","OctahedronGeometry","XY","PlaneGeometry","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","TorusGeometry","SphereGeometry","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","tempVector","tempEuler","alignVector","zeroVector","lookAtMatrix","Matrix4","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","factor","handle","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","split","some","lerp","Color","isTransformControlsGizmo","dirVector","tempMatrix","isTransformControlsPlane","useHotkeys","callback","options","unbind","useCallbackRef","cb","dependencies","useCallback","callbackRef","useRef","CustomTransformControls","useDraggableMesh","isSelected","useThree","gl","scene","localRef","passedRef","controls","setControls","shiftIsPressed","setShiftIsPressed","updateValue","passedOnDraggingChanged","onDraggingChanged","keyup","keydown","active","currentTranslationSnap","currentRotationSnap","startPositionRef","onMouseUp","log","rotate","onMouseUpRef","enable","EDITOR_LAYER","recursiveSetLayer","remove","useMeshHelper","helperToUse","BoxHelper","helperRef","useHelper","InteractiveMesh","parentPath","useIsEditableSelected","isSoleSelected","useEditableIsSoleSelected","isMultipleSelected","groupRef","pointerOver","setPointerOver","setComponentHovered","skip","intersections","eventObjectId","eventObject","userData","includes","stopPropagation","onPointerOver","onPointerOut","storedRef","firstCallRef","Context","createContext","componentTypeId","isRoot","rootParentId","registerWithParent","sharedProps","useContext","single","Editable","_config","displayName","uid","getComponentId","useIsSelected","useLayoutEffect","initialProps","setComponentInitialProps","childEditables","setChildEditables","registerChildren","isDeactivated","useIsDeactivated","unsaved","_unsaved","removeDeactivatedComponent","addComponent","removeComponent","setComponentChildren","updatedParentPath","setSharedProps","Provider","editableId","hidden","sync","sharedProp","prop","useComponentState","useSharedComponent","appliedState","applied","appliedValue","defaultResult","appliedResult","modifiedValue","modified","initial","useProp","setComponentCanHaveChildren","UnsavedComponent","addable","useAddable","Component","sharedType","TemporaryComponent","TemporaryComponentsList","TemporaryComponents","EditableChildren","storedChildren","useAddableStore","addables","registerAddable","preppedId","TreeItemType","SceneItemIcon","uiProxy","displayAddingComponent","displayAddingComponentParent","addingComponent","addingComponentParent","componentContextMenu","hoveredComponents","addableId","addUnsavedComponent","getAddable","addStoredComponent","setDisplayAddingComponentParent","setDisplayAddingComponent","adding","addingComponentClosed","shortcutsManager","Shortcuts","useShortcut","shortcuts","manager","registerShortcut","SelectedComponentListeners","shortcut","handler","COMPONENTS","data","VIEWS","generateTree","showActive","items","rootChildren","groupsChildren","title","group","parentGroupId","values","item","treeItem","last","sortedChildren","sortBy","rootId","ItemIcon","iconType","FaFolderOpen","groupClosed","FaFolder","FaCube","StyledChildrenContainer","paddingLeft","sidePadding","SceneChild","useItemData","SceneItem","icon","draggable","SceneChildren","StyledDraggableContainer","StyledWrapper","StyledInputWrapper","right","StyledButton","font","StyledClickable","borderRadius","cursor","textAlign","transition","outline","boxShadow","variants","hovered","StyledIcon","justifyContent","clickable","borderColor","interactive","StyledTrash","StyledToggleIcon","marginLeft","StyledOptions","lastSelectedItem","setLastSelectedItem","EditName","editName","setEditName","inputRef","focus","as","onSubmit","preventDefault","onClick","onBlur","passedName","iconProps","isGroup","passedOnClick","useIsItemSelected","focused","setFocused","buttonRef","canHaveChildren","useComponentCanHaveChildren","customName","editingName","setEditingName","isHovered","useIsComponentHovered","blur","isPressed","updateName","updatedName","setGroupName","setComponentName","onNameClicked","onContextMenu","onAddChild","onDelete","onFocus","updatedState","tree","range","orderedRange","addChildrenToRange","childItem","sorted","fromIndex","toIndex","reverse","selectRange","selectItem","FaCaretUp","FaCaretDown","FaPlus","Draggable","onExpand","onCollapse","provided","cantDrag","dragHandleProps","onDragStart","onKeyDown","onMouseDown","onTouchStart","innerRef","draggableProps","itemChildren","overflowY","SceneList","view","activeComponents","setTree","useSceneTree","itemId","mutateTree","onDragEnd","source","destination","destinationItem","updatedTree","moveItemOnTree","newDestination","updateComponentLocation","setComponentsTree","Tree","renderItem","isDragEnabled","isNestingEnabled","offsetPerLevel","gridTemplateRows","StyledTextButton","textDecoration","StyledPlainButton","fontWeight","faint","shape","tiny","full","thinner","thinnerWide","StyledHeading","StyledBox","maxHeight","StyledPaddedBox","visual","borderBottom","borderTop","StyledHeader","ManagerSidebar","selectedView","setSelectedView","deactivated","SelectInput","option","label","StyledHeaderOptions","PropInputOptions","propType","applyValue","setSharedComponentPropValue","onReset","resetComponentProp","Module","propConfig","predefinedProps","InputComponent","ComponentModules","marginTop","StyledInputLabel","minWidth","StyledBody","StyledCollidersContainer","marginRight","StyledCollidersHeader","DYNAMIC","StyledColliderContainer","RigidBody3DColliderInput","updatedCollider","FaTimes","rigidBody3dModuleProp","setIsExpanded","addCollider","newCollider","updateCollider","updatedColliders","deleteCollider","splice","checked","positionProp","rotationProp","scaleProp","predefinedBottomProps","modules","StyledProp","marginBottom","minHeight","StyledHeaderLabel","StyledInputContainer","PropInput","defaultOrder","sortProps","propB","propAIndex","propBIndex","CustomProps","sort","ComponentState","componentProps","useComponentProps","remainingProps","customProps","bottomProps","addModule","SidebarHeader","StateSidebar","selectedComponent","zIndex","borderLeft","StyledAddableComponent","StyledIconWrapper","closeAddingComponent","AddableComponent","FaMousePointer","AddingComponentMenu","isAddingComponent","OutsideClickHandler","onOutsideClick","StyledOption","closeContextMenu","ComponentsMenu","componentIds","allRoot","componentsSelected","inactiveComponents","hasComponents","hasInactiveComponents","hasGroups","onGroup","onReactivate","multipleComponents","canGroup","ContextMenu","GlobalHotkeysListener","localStateRef","lastUndo","lastRedo","lastPaste","lastSave","addedComponents","newIds","cloneComponentWithinState","componentIdWithParentId","rawId","newId","unsavedComponent","childrenProp","getComponentPropValue","newChildren","cloneComponents","handlePasteComponents","handlePaste","StyledHeaderSide","letterSpacing","StyledHeaderMiddle","Header","FaUndo","disabled","FaRedo","fontFamily","StyledMain","StyledSidebar","StyledContent","StyledBoxButton","OverlayControls","BiMove","BiRotateLeft","BiExpand","EditFloor","EditCamera","cameraRef","setDefaultCamera","spacePressed","PerspectiveCamera","OrbitControls","AddingComponentPlane","planeRef","floorRef","horizontalMode","setHorizontalMode","localState","onMouseMove","window","onVerticalPointerUp","onFloorPointerUp","onFloorPointerMove","onVerticalMove","useFrame","Plane","center","MultipleSelectedGroup","dragMeshRef","originRef","positionDragRef","obj","boundingBox","centerPosition","Box3","setFromObject","getCenter","setTimeout","isDraggingRef","startingPositionRef","xDifference","yDifference","zDifference","updateType","EditTools","GoogleFontLoader","weights","onPointerMissed"],"mappings":"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"}