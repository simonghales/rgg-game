{"version":3,"file":"rgg-engine.cjs.development.js","sources":["../src/createWorkerApp.ts","../src/physics/PhysicsProvider.context.ts","../src/physics/physicsLoopWorker.ts","../src/utils/time.ts","../src/physics/types.ts","../src/physics/config.ts","../src/physics/PhysicsConsumer.context.ts","../src/utils/ids.ts","../src/keys.tsx","../src/generic.tsx","../src/physics/PhysicsConsumer.tsx","../src/physics/PhysicsProvider.tsx","../src/physics/Physics.tsx","../src/physics/helpers/planckjs/PlanckPhysicsHandler.context.ts","../src/physics/helpers/planckjs/PlanckApp.context.ts","../src/physics/helpers/planckjs/WorkerSubscription.tsx","../src/physics/helpers/planckjs/types.ts","../src/physics/helpers/planckjs/bodies.ts","../src/physics/helpers/planckjs/PlanckPhysicsWorkerMessagesHandler.tsx","../src/utils/numbers.ts","../src/physics/helpers/planckjs/updates.ts","../src/physics/helpers/planckjs/buffers.ts","../src/physics/helpers/planckjs/PlanckPhysicsHandler.tsx","../src/physics/helpers/planckjs/PlanckApp.tsx","../src/physics/PhysicsConsumerSyncMeshes.tsx","../src/physics/helpers/planckjs/PhysicsConsumerHelpers.tsx","../src/physics/helpers/planckjs/hooks.ts","../src/physics/helpers/cannon/bodies.ts","../src/physics/helpers/cannon/CannonPhysicsWorkerMessagesHandler.tsx","../src/physics/helpers/cannon/updates.ts","../src/physics/helpers/cannon/buffers.ts","../src/physics/helpers/cannon/CannonPhysicsHandler.tsx","../src/physics/helpers/cannon/CannonApp.tsx","../src/physics/helpers/planckjs/PlanckPhysicsConsumer.tsx","../src/physics/helpers/cannon/CannonPhysicsConsumer.tsx","../src/physics/helpers/cannon/hooks.ts","../node_modules/regenerator-runtime/runtime.js","../src/physics/helpers/rapier3d/updates.ts","../src/physics/helpers/rapier3d/bodies.ts","../src/physics/helpers/rapier3d/custom.ts","../src/physics/helpers/rapier3d/Rapier3DPhysicsWorkerMessagesHandler.tsx","../src/physics/helpers/rapier3d/Rapier3DPhysicsHandler.tsx","../src/physics/helpers/rapier3d/Rapier3DApp.tsx","../src/physics/helpers/rapier3d/Rapier3DPhysicsConsumer.tsx","../src/physics/helpers/rapier3d/hooks.ts"],"sourcesContent":["import {render} from \"react-nil\";\nimport {createElement, FC} from \"react\";\n\nexport const createWorkerApp = (app: FC<{\n    worker?: Worker,\n}>) => {\n    render(createElement(app, {\n        worker: self as unknown as Worker,\n    }), null)\n}","import {createContext, useContext} from \"react\";\n\ntype State = {}\n\nexport const Context = createContext(null as unknown as State)\n\nexport const usePhysicsContext = () => {\n    return useContext(Context)\n}","export const createNewPhysicsLoopWebWorker = (stepRate: number) => {\n    return new Worker('data:application/javascript,' +\n        encodeURIComponent(`\n            \n            var start = performance.now();\n            var updateRate = ${stepRate};\n            var maxAccumulator = updateRate;\n            \n            function getNow() {\n                return start + performance.now();\n            }\n            \n            var accumulator = 0;\n            var lastAccumulation = getNow();\n            var now = getNow();\n            var numberOfUpdates = 0;\n            \n            function accumulate() {\n                now = getNow();\n                accumulator += now - lastAccumulation;\n                lastAccumulation = now;\n                while (accumulator <= maxAccumulator) {\n                    now = getNow();\n                    accumulator += now - lastAccumulation;\n                    lastAccumulation = now;\n                }\n                numberOfUpdates = Math.floor(accumulator / maxAccumulator);\n                for (var i = 0; i < numberOfUpdates; i++) {\n                    self.postMessage('step');\n                    accumulator -= maxAccumulator;\n                }\n            }\n        \n            function step() {\n                \n                accumulate();\n                \n                setTimeout(step, updateRate - 2 - accumulator);\n                \n            }\n            \n            step()\n            \n        `) );\n}","const start = Date.now()\n\nexport const getNow = () => {\n    return start + performance.now()\n}","import {MutableRefObject} from \"react\";\nimport {Object3D} from \"three\";\n\nexport type OnWorldStepFn = (delta: number) => void\n\nexport enum WorkerMessageType {\n    PHYSICS_UPDATE,\n    PHYSICS_PROCESSED,\n    PHYSICS_READY,\n    PHYSICS_SET_PAUSED,\n    PHYSICS_ACKNOWLEDGED,\n    ADD_BODY,\n    REMOVE_BODY,\n    MODIFY_BODY,\n    CUSTOM\n}\n\nexport type WorkerMessageData = {\n    type: WorkerMessageType,\n    data?: any,\n    [key: string]: any,\n}\n\nexport type BodyData = {\n    ref: MutableRefObject<Object3D>,\n    index: number,\n    position?: [number, number] | [number, number, number],\n    angle?: number | [number, number, number, number],\n    previous: {\n        position?: [number, number] | [number, number, number],\n        angle?: number | [number, number, number, number],\n    },\n    lastUpdate: number,\n    lastRender: number,\n    applyRotation?: boolean,\n}","export const DEFAULT_STEP_RATE = 1000 / 60","import {createContext, MutableRefObject, useContext} from \"react\";\nimport {Object3D} from \"three\";\n\ntype State = {\n    syncBody: (id: string, ref: MutableRefObject<Object3D>, applyRotation?: boolean) => () => void,\n    syncMeshes: () => void,\n    sendMessage: (message: any) => void,\n}\n\nexport const Context = createContext(null as unknown as State)\n\nexport const usePhysicsConsumerContext = () => useContext(Context)","import { MathUtils } from 'three';\n\nexport const generateUUID = MathUtils.generateUUID;","import {useEffect} from \"react\";\nimport create from \"zustand\";\n\nexport const useTransferKeyEvents = (worker: Worker) => {\n\n    useEffect(() => {\n        const onKeyDown = (event: KeyboardEvent) => {\n            if (event.repeat) return\n            const {\n                code,\n                key,\n                keyCode\n            } = event\n            worker.postMessage({\n                type: 'KEYDOWN',\n                data: {\n                    code,\n                    key,\n                    keyCode,\n                }\n            })\n        }\n        const onKeyUp = (event: KeyboardEvent) => {\n            const {\n                code,\n                key,\n                keyCode\n            } = event\n            worker.postMessage({\n                type: 'KEYUP',\n                data: {\n                    code,\n                    key,\n                    keyCode,\n                }\n            })\n        }\n        window.addEventListener('keydown', onKeyDown)\n        window.addEventListener('keyup', onKeyUp)\n\n        return () => {\n            window.removeEventListener('keydown', onKeyDown)\n            window.removeEventListener('keyup', onKeyUp)\n        }\n\n    }, [])\n\n}\n\nexport const useActiveKeys = create<{\n    activeKeys: {\n        [key: number]: boolean,\n    }\n}>(() => ({\n    activeKeys: {},\n}))\n\nexport const rawActiveKeys: {\n    [key: number]: boolean,\n} = {}\n\nconst setActiveKey = (code: number, active: boolean) => {\n    rawActiveKeys[code] = active\n    return useActiveKeys.setState(state => ({\n        activeKeys: {\n            ...state.activeKeys,\n            [code]: active,\n        }\n    }))\n}\n\nexport const useHandleKeyEvents = (worker: Worker) => {\n\n    useEffect(() => {\n\n        const previousOnMessage = worker.onmessage as any\n\n        worker.onmessage = (event: any) => {\n\n            if (previousOnMessage) {\n                previousOnMessage(event)\n            }\n\n            const data = event.data\n\n            switch (data.type) {\n                case 'KEYUP':\n                    setActiveKey(data.data.keyCode, false)\n                    break;\n                case 'KEYDOWN':\n                    setActiveKey(data.data.keyCode, true)\n                    break;\n            }\n\n        }\n\n        return () => {\n            worker.onmessage = previousOnMessage\n        }\n\n    }, [worker])\n\n}","import React, {createContext, useCallback, useContext, useEffect, useRef, useState} from \"react\"\nimport {generateUUID} from \"./utils/ids\";\nimport {WorkerMessageData, WorkerMessageType} from \"./physics/types\";\nimport {useHandleKeyEvents} from \"./keys\";\n\nenum MessageType {\n    mounted = 'mounted',\n    unmounted = 'unmounted',\n    propUpdate = 'propUpdate',\n    propRemoved = 'propRemoved',\n}\n\ntype Message = {\n    message: MessageType,\n    id: string,\n    [key: string]: any,\n}\n\nconst useSyncComponent = (type: string, id: string, props: any, sendMessage: any) => {\n\n    useEffect(() => {\n        sendMessage({\n            message: MessageType.mounted,\n            id,\n            type,\n            value: props,\n        })\n        return () => {\n            sendMessage({\n                message: MessageType.unmounted,\n                id,\n            })\n        }\n    }, [type, id, sendMessage])\n\n}\n\nconst SyncedComponentProp: React.FC<{\n    id: string,\n    propKey: string,\n    value: any,\n    sendMessage: any,\n}> = ({propKey, id, value, sendMessage}) => {\n    const firstUpdateRef = useRef(true)\n    useEffect(() => {\n        if (firstUpdateRef.current) {\n            firstUpdateRef.current = false\n            return\n        }\n        sendMessage({\n            message: MessageType.propUpdate,\n            id,\n            value,\n            propKey,\n        })\n    }, [value, id, propKey])\n    useEffect(() => {\n        return () => {\n            sendMessage({\n                message: MessageType.propRemoved,\n                id,\n                propKey,\n            })\n        }\n    }, [id, propKey])\n    return null\n}\n\nexport const SyncedComponent: React.FC<{\n    [key: string]: any,\n    type: string,\n    id?: string,\n}> = ({type, id: passedId, ...props}) => {\n\n    const sendMessage = useWorkerSendMessage()\n\n    const [id] = useState(() => passedId ?? generateUUID())\n\n    useSyncComponent(type, id, props, sendMessage)\n\n    return (\n        <>\n            {\n                Object.entries(props).map(([key, value]) => (\n                    <SyncedComponentProp key={key} id={id} propKey={key} value={value} sendMessage={sendMessage}/>\n                ))\n            }\n        </>\n    )\n}\n\nconst Context = createContext<{\n    sendMessage: (message: any) => void,\n    worker: Worker,\n}>(null!)\n\nexport const useWorkerSendMessage = () => {\n    return useContext(Context).sendMessage\n}\n\nexport const useWorker = () => {\n    return useContext(Context).worker\n}\n\nexport const WorkerMessaging: React.FC<{\n    worker: Worker\n}> = ({worker, children}) => {\n\n    const sendMessage = useCallback((message: any) => {\n        worker.postMessage({\n            type: WorkerMessageType.CUSTOM,\n            message,\n        })\n    }, [worker])\n\n    useHandleKeyEvents(worker)\n\n    return (\n        <Context.Provider value={{sendMessage, worker}}>\n            {children}\n        </Context.Provider>\n    )\n\n}\n\nexport const SyncComponents: React.FC<{\n    components: {\n        [key: string]: any,\n    }\n}> = ({components}) => {\n\n\n    const worker = useWorker()\n\n    const [storedComponents, setComponents] = useState<{\n        [key: string]: {\n            id: string,\n            type: string,\n            props: {\n                [key: string]: any,\n            }\n        }\n    }>({})\n\n    const handleCustomMessage = useCallback((message: Message) => {\n        const {id, type, value, propKey} = message\n        switch (message.message) {\n            case MessageType.mounted:\n                setComponents(state => ({\n                    ...state,\n                    [id]: {\n                        id,\n                        type,\n                        props: value,\n                    }\n                }))\n                break;\n            case MessageType.unmounted:\n                setComponents(state => {\n                    const updated = {\n                        ...state,\n                    }\n                    delete updated[id]\n                    return updated\n                })\n                break;\n            case MessageType.propUpdate:\n                setComponents(state => {\n                    const existing = state[id] ?? {\n                        props: {},\n                    }\n                    return {\n                        ...state,\n                        [id]: {\n                            ...existing,\n                            props: {\n                                ...existing.props,\n                                [propKey]: value,\n                            }\n                        }\n                    }\n                })\n                break;\n            case MessageType.propRemoved:\n                setComponents(state => {\n                    const existing = state[id] ?? {\n                        props: {},\n                    }\n                    const updatedProps = {\n                        ...existing.props\n                    }\n                    delete updatedProps[propKey]\n                    return {\n                        ...state,\n                        [id]: {\n                            ...existing,\n                            props: updatedProps,\n                        }\n                    }\n                })\n                break;\n        }\n    }, [])\n\n    useEffect(() => {\n        const previousOnMessage = worker.onmessage\n\n        worker.onmessage = (event: any) => {\n\n            if (previousOnMessage) {\n                // @ts-ignore\n                previousOnMessage(event)\n            }\n\n            const message = event.data as WorkerMessageData\n\n            if (message.type === WorkerMessageType.CUSTOM) {\n                handleCustomMessage(message.message as Message)\n            }\n\n        }\n\n        return () => {\n            worker.onmessage = previousOnMessage\n        }\n\n    }, [])\n\n    return (\n        <>\n            {\n                Object.entries(storedComponents).map(([key, component]) => {\n                    const Component = components[component.type]\n                    if (!Component) return null\n                    return <Component id={key} {...component.props} key={key}/>\n                })\n            }\n        </>\n    )\n}","import React, {\n    createContext,\n    MutableRefObject,\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n    useState\n} from \"react\";\nimport {BodyData, WorkerMessageData, WorkerMessageType} from \"./types\";\nimport {getNow} from \"../utils/time\";\nimport {Object3D} from \"three\";\nimport {DEFAULT_STEP_RATE} from \"./config\";\nimport {Context} from \"./PhysicsConsumer.context\";\nimport {PhysicsConsumerSyncMeshes} from \"../index\";\nimport {WorkerMessaging} from \"../generic\";\nimport {useTransferKeyEvents} from \"../keys\";\n\nexport type DefaultPhysicsConsumerProps = {\n    worker: Worker,\n    stepRate?: number,\n    paused?: boolean,\n}\n\nconst FixedUpdateContext = createContext<{\n    onFixedUpdateSubscriptions: MutableRefObject<{\n        [key: string]: MutableRefObject<(delta: number) => void>,\n    }>,\n    subscribeToOnPhysicsUpdate: (callback: MutableRefObject<(delta: number) => void>) => () => void,\n    updateSubscriptions: (delta: number) => void,\n}>(null!)\n\nexport const useFixedUpdateContext = () =>{\n    return useContext(FixedUpdateContext)\n}\n\nexport const OnFixedUpdateProvider: React.FC = ({children}) => {\n\n    const localStateRef = useRef<{\n        subscriptionsIterator: number,\n    }>({\n        subscriptionsIterator: 0,\n    })\n\n    const onFixedUpdateSubscriptions = useRef<{\n        [key: string]: MutableRefObject<(delta: number) => void>,\n    }>({})\n\n    const {\n        subscribeToOnPhysicsUpdate,\n        updateSubscriptions,\n    } = useMemo(() => ({\n        subscribeToOnPhysicsUpdate: (callback: MutableRefObject<(delta: number) => void>) => {\n            const id = localStateRef.current.subscriptionsIterator.toString()\n            localStateRef.current.subscriptionsIterator += 1\n            onFixedUpdateSubscriptions.current[id] = callback\n            return () => {\n                delete onFixedUpdateSubscriptions.current[id]\n            }\n        },\n        updateSubscriptions: (delta: number) => {\n            Object.values(onFixedUpdateSubscriptions.current).forEach(callback => callback.current(delta))\n        }\n    }), [])\n\n    return (\n        <FixedUpdateContext.Provider value={{\n            onFixedUpdateSubscriptions,\n            subscribeToOnPhysicsUpdate,\n            updateSubscriptions,\n        }}>\n            {children}\n        </FixedUpdateContext.Provider>\n    )\n}\n\ntype Props = DefaultPhysicsConsumerProps & {\n    lerpBody: (body: BodyData, object: Object3D, stepRate: number) => void,\n    updateBodyData: (bodyData: BodyData, positions: Float32Array, angles: Float32Array) => void,\n}\n\nconst PhysicsConsumer: React.FC<Props> = ({\n            paused = false,\n          updateBodyData,\n          worker,\n          children,\n          stepRate = DEFAULT_STEP_RATE, lerpBody\n      }) => {\n\n    const [connected, setConnected] = useState(false)\n    const [bodiesData] = useState<{\n        [id: string]: BodyData\n    }>({})\n    const localStateRef = useRef<{\n        lastUpdate: number,\n        subscriptionsIterator: number,\n        bodies: string[],\n    }>({\n        lastUpdate: getNow(),\n        subscriptionsIterator: 0,\n        bodies: []\n    })\n\n    const {\n        updateSubscriptions,\n    } = useFixedUpdateContext()\n\n    const onFrameCallbacks = useRef<{\n        [id: string]: () => void,\n    }>({})\n\n    const lerpMesh = useCallback((body: BodyData, ref: MutableRefObject<Object3D>) => {\n        if (!ref.current) return\n        const object = ref.current\n        lerpBody(body, object, stepRate)\n    }, [])\n\n    const onUpdate = useCallback((updateTime: number, positions: Float32Array, angles: Float32Array, bodies: undefined | string[]) => {\n\n        if (bodies) {\n            localStateRef.current.bodies = bodies\n        }\n\n        Object.entries(bodiesData).forEach(([id, bodyData]) => {\n            if (bodies) {\n                bodyData.index = bodies.indexOf(id)\n            }\n            if (bodyData.index >= 0) {\n                updateBodyData(bodyData, positions, angles)\n                bodyData.lastUpdate = updateTime\n            }\n        })\n\n        const now = updateTime\n        const delta = (now - localStateRef.current.lastUpdate) / 1000\n        localStateRef.current.lastUpdate = now\n        updateSubscriptions(delta)\n\n    }, [updateSubscriptions])\n\n    useEffect(() => {\n        if (connected) return\n        const interval = setInterval(() => {\n            worker.postMessage({\n                type: WorkerMessageType.PHYSICS_READY,\n                paused,\n            })\n        }, 200)\n        return () => {\n            clearInterval(interval)\n        }\n    }, [connected, paused])\n\n    useEffect(() => {\n        worker.postMessage({\n            type: WorkerMessageType.PHYSICS_SET_PAUSED,\n            paused,\n        })\n    }, [paused])\n\n    useEffect(() => {\n\n        const previousOnMessage: any = worker.onmessage\n\n        worker.onmessage = (event: any) => {\n\n            const message = event.data as WorkerMessageData\n\n            switch (message.type) {\n                case WorkerMessageType.PHYSICS_ACKNOWLEDGED:\n                    setConnected(true)\n                    break;\n                case WorkerMessageType.PHYSICS_UPDATE:\n                    onUpdate(message.updateTime, message.positions, message.angles, message.bodies)\n\n                    worker.postMessage({\n                        type: WorkerMessageType.PHYSICS_PROCESSED,\n                        positions: message.positions,\n                        angles: message.angles,\n                    }, [message.positions.buffer, message.angles.buffer])\n                    break;\n            }\n\n            if (previousOnMessage) {\n                previousOnMessage(event)\n            }\n\n        }\n\n    }, [])\n\n    const {\n        syncBody,\n    } = useMemo(() => ({\n        syncBody: (id: string, ref: MutableRefObject<Object3D>, applyRotation: boolean = true) => {\n            localStateRef.current.subscriptionsIterator += 1\n            const body: BodyData = {\n                ref,\n                index: localStateRef.current.bodies.indexOf(id),\n                lastUpdate: getNow(),\n                lastRender: getNow(),\n                previous: {},\n                applyRotation,\n            }\n            bodiesData[id] = body\n            onFrameCallbacks.current[id] = () => lerpMesh(body, ref)\n            return () => {\n                delete onFrameCallbacks.current[id]\n                delete bodiesData[id]\n            }\n        }\n    }), [])\n\n    const syncMeshes = useCallback(() => {\n        Object.values(onFrameCallbacks.current).forEach(callback => callback())\n    }, [])\n\n    const sendMessage = useCallback((message: any) => {\n        worker.postMessage(message)\n    }, [])\n\n    useTransferKeyEvents(worker)\n\n    if (!connected) return null\n\n    return (\n        <WorkerMessaging worker={worker}>\n            <Context.Provider value={{\n                syncBody,\n                syncMeshes,\n                sendMessage,\n            }}>\n                <PhysicsConsumerSyncMeshes useRAF/>\n                {children}\n            </Context.Provider>\n        </WorkerMessaging>\n    );\n};\n\nconst Wrapper: React.FC<Props> = (props) => {\n    return (\n        <OnFixedUpdateProvider>\n            <PhysicsConsumer {...props}/>\n        </OnFixedUpdateProvider>\n    )\n}\n\nexport default Wrapper;","import React, {useEffect, useMemo, useRef} from \"react\";\nimport {Context} from \"./PhysicsProvider.context\";\nimport {OnWorldStepFn} from \"./types\";\nimport {createNewPhysicsLoopWebWorker} from \"./physicsLoopWorker\";\nimport {getNow} from \"../utils/time\";\nimport {useFixedUpdateContext} from \"./PhysicsConsumer\";\n\nlet now = 0\nlet delta = 0\n\nconst usePhysicsWorldStepHandler = (onWorldStep: OnWorldStepFn, stepRate: number, paused: boolean) => {\n\n    const localStateRef = useRef({\n        lastUpdate: getNow(),\n    })\n\n    const {\n        updateSubscriptions\n    } = useFixedUpdateContext()\n\n    const {\n        stepWorld\n    } = useMemo(() => ({\n        stepWorld: () => {\n            now = getNow()\n            delta = now - localStateRef.current.lastUpdate\n            localStateRef.current.lastUpdate = now\n            if (paused) return\n            onWorldStep(delta)\n            updateSubscriptions(delta / 1000)\n        }\n    }), [paused, onWorldStep, updateSubscriptions])\n\n    const stepWorldRef = useRef(stepWorld)\n\n    useEffect(() => {\n        stepWorldRef.current = stepWorld\n    }, [stepWorld])\n\n    useEffect(() => {\n        const worker = createNewPhysicsLoopWebWorker(stepRate)\n        // let lastStep = getNow()\n        worker.onmessage = (event) => {\n            if (event.data === 'step') {\n                // now = getNow()\n                // delta = now - lastStep\n                // lastStep = now\n                // console.log('delta', delta)\n                stepWorldRef.current()\n            }\n        }\n    }, [stepWorldRef])\n\n    return null\n}\n\nconst PhysicsProvider: React.FC<{\n    onWorldStep: OnWorldStepFn,\n    stepRate: number,\n}> = ({children, onWorldStep, stepRate}) => {\n\n    const paused = false\n    usePhysicsWorldStepHandler(onWorldStep, stepRate, paused)\n\n    return (\n        <Context.Provider value={{}}>\n            {children}\n        </Context.Provider>\n    );\n};\n\nexport default PhysicsProvider;","import React from \"react\";\nimport PhysicsProvider from \"./PhysicsProvider\";\nimport {OnWorldStepFn} from \"./types\";\nimport {DEFAULT_STEP_RATE} from \"./config\";\nimport {OnFixedUpdateProvider} from \"./PhysicsConsumer\";\n\nconst Physics: React.FC<{\n    onWorldStep: OnWorldStepFn,\n    stepRate?: number,\n}> = ({children, onWorldStep, stepRate = DEFAULT_STEP_RATE}) => {\n    return (\n        <OnFixedUpdateProvider>\n            <PhysicsProvider onWorldStep={onWorldStep} stepRate={stepRate}>\n                {children}\n            </PhysicsProvider>\n        </OnFixedUpdateProvider>\n    );\n};\n\nexport default Physics;","import {createContext, useContext} from \"react\";\n\ntype State = {\n    getPendingSyncedBodiesIteration: () => number,\n    syncedBodies: {\n        [key: string]: any,\n    }\n    syncedBodiesOrder: string[],\n    maxNumberOfSyncedBodies: number,\n}\n\nexport const Context = createContext(null as unknown as State)\n\nexport const usePlanckPhysicsHandlerContext = () => useContext(Context)","import {createContext, useContext} from \"react\";\n\nexport type State = {\n    world: any,\n    addSyncedBody: (uid: string, body: any) => void,\n    removeSyncedBody: (uid: string) => void,\n    addBody: (id: string, body: any, synced?: boolean) => () => void,\n    bodies: {\n        [key: string]: any,\n    },\n}\n\nexport const Context = createContext(null as unknown as State)\n\nexport const usePlanckAppContext = () => useContext(Context)","import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport {usePlanckPhysicsHandlerContext} from \"./PlanckPhysicsHandler.context\";\nimport {getNow} from \"../../../utils/time\";\nimport {WorkerMessageData, WorkerMessageType} from \"../../types\";\nimport {ApplyBufferDataFn} from \"./updates\";\nimport {Buffers} from \"./types\";\n\nconst WorkerSubscription: React.FC<{\n    worker: Worker,\n    subscribe: (callback: () => void) => () => void,\n    applyBufferData: ApplyBufferDataFn,\n    generateBuffers: (maxNumberOfSyncedBodies: number) => Buffers,\n    setPaused?: (paused: boolean) => void,\n}> = ({worker, subscribe, applyBufferData, generateBuffers, setPaused}) => {\n\n    const {\n        getPendingSyncedBodiesIteration,\n        syncedBodies,\n        syncedBodiesOrder,\n        maxNumberOfSyncedBodies,\n    } = usePlanckPhysicsHandlerContext()\n\n    const [buffers] = useState(() => generateBuffers(maxNumberOfSyncedBodies))\n    const localStateRef = useRef({\n        lastUpdate: -1,\n        bodiesIteration: -1,\n    })\n    const [buffersAvailable, setBuffersAvailable] = useState(false)\n    const [updateCount, setUpdateCount] = useState(0)\n\n    const updateWorker = useCallback((update: number) => {\n        localStateRef.current.lastUpdate = update\n        setBuffersAvailable(false)\n\n        const bodiesIteration = getPendingSyncedBodiesIteration()\n        const shouldSyncBodies = bodiesIteration !== localStateRef.current.bodiesIteration\n\n        applyBufferData(buffers, syncedBodies, syncedBodiesOrder)\n\n        const {\n            positions,\n            angles,\n        } = buffers\n\n        const message: any = {\n            type: WorkerMessageType.PHYSICS_UPDATE,\n            updateTime: getNow(),\n            positions: positions,\n            angles: angles,\n        }\n\n        if (shouldSyncBodies) {\n            message.bodies = syncedBodiesOrder\n            localStateRef.current.bodiesIteration = bodiesIteration\n        }\n\n        worker.postMessage(message, [positions.buffer, angles.buffer])\n\n        // process local fixed updates\n\n    }, [getPendingSyncedBodiesIteration, syncedBodies, syncedBodiesOrder])\n\n    const updateWorkerRef = useRef(updateWorker)\n\n    useEffect(() => {\n        updateWorkerRef.current = updateWorker\n    }, [updateWorker])\n\n    useEffect(() => {\n        if (!buffersAvailable) return\n        if (updateCount <= localStateRef.current.lastUpdate) return\n        updateWorkerRef.current(updateCount)\n    }, [updateCount, buffersAvailable])\n\n    const onUpdate = useCallback(() => {\n        setUpdateCount(state => state + 1)\n    }, [])\n\n    const onUpdateRef = useRef(onUpdate)\n\n    useEffect(() => {\n        onUpdateRef.current = onUpdate\n    }, [onUpdate])\n\n    useEffect(() => {\n\n        return subscribe(() => onUpdateRef.current())\n\n    }, [])\n\n    useEffect(() => {\n        const previousOnMessage: any = worker.onmessage\n\n        worker.onmessage = (event: any) => {\n\n            const message = event.data as WorkerMessageData\n\n            switch (message.type) {\n                case WorkerMessageType.PHYSICS_PROCESSED:\n                    buffers.positions = message.positions\n                    buffers.angles = message.angles\n                    setBuffersAvailable(true)\n                    break;\n                case WorkerMessageType.PHYSICS_SET_PAUSED:\n                    if (setPaused) {\n                        setPaused(message.paused ?? false)\n                    }\n                    break;\n                case WorkerMessageType.PHYSICS_READY:\n                    if (setPaused) {\n                        setPaused(message.paused ?? false)\n                    }\n                    setBuffersAvailable(true)\n                    worker.postMessage({\n                        type: WorkerMessageType.PHYSICS_ACKNOWLEDGED,\n                    })\n                    break;\n            }\n\n            if (previousOnMessage) {\n                previousOnMessage(event)\n            }\n        }\n\n    }, [])\n\n    return null\n}\n\nexport default WorkerSubscription;","import {BodyDef, FixtureOpt} from \"planck-js\";\n\nexport type Buffers = {\n    positions: Float32Array;\n    angles: Float32Array;\n};\n\nexport enum FixtureShape {\n    Circle = 'Circle',\n    Box = 'Box',\n}\n\nexport type Fixtures = {\n    shape: FixtureShape,\n    args: any[],\n    fixtureOptions: Partial<FixtureOpt>,\n}[]\n\nexport type AddBodyDef = {\n    body: BodyDef,\n    fixtures: Fixtures\n}","import {BodyDef, Box, Circle, Shape, World} from \"planck-js\";\nimport {Fixtures, FixtureShape} from \"./types\";\n\nconst createFixtureShape = (shape: FixtureShape, args: any[]): Shape | null => {\n    switch (shape) {\n        case FixtureShape.Circle:\n            return Circle(...args)\n        case FixtureShape.Box:\n            // @ts-ignore\n            return Box(...args)\n    }\n    return null\n}\n\nexport const createBody = (world: World, bodyDef: BodyDef, fixtures: Fixtures) => {\n    const body = world.createBody(bodyDef)\n    fixtures.forEach(({shape, args, fixtureOptions}) => {\n        const fixtureShape = createFixtureShape(shape, args)\n        if (fixtureShape) {\n            body.createFixture(fixtureShape, fixtureOptions)\n        }\n    })\n    return body\n}","import React, {useEffect, useMemo} from \"react\"\nimport {WorkerMessageData, WorkerMessageType} from \"../../types\";\nimport {AddBodyDef} from \"./types\";\nimport {createBody} from \"./bodies\";\nimport {World} from \"planck-js\";\nimport {usePlanckAppContext} from \"./PlanckApp.context\";\n\nconst PlanckPhysicsWorkerMessagesHandler: React.FC<{\n    world: World,\n    worker: Worker,\n}> = ({\n    world,\n                                                    worker,\n                                                }) => {\n\n    const {\n        addBody,\n        bodies,\n    } = usePlanckAppContext()\n\n    const {\n        handleAddBody,\n        handleModifyBody,\n    } = useMemo(() => ({\n        handleModifyBody: ({id, method, args}: {\n            id: string,\n            method: string,\n            args: any[],\n        }) => {\n            const body = bodies[id]\n            if (!body) {\n                console.warn(`No body found matching ${id}`)\n                return\n            }\n            (body as any)[method](...args)\n        },\n        handleAddBody: ({id, props, synced}: {\n            id: string,\n            props: AddBodyDef,\n            synced: boolean,\n        }) => {\n\n            const body = createBody(world, props.body, props.fixtures)\n            addBody(id, body, synced)\n\n        }\n    }), [])\n\n    useEffect(() => {\n\n        const previousOnMessage: any = worker.onmessage\n\n        worker.onmessage = (event: any) => {\n\n            const message = event.data as WorkerMessageData\n\n            switch (message.type) {\n                case WorkerMessageType.ADD_BODY:\n                    handleAddBody(message.data)\n                    break;\n                case WorkerMessageType.MODIFY_BODY:\n                    handleModifyBody(message.data)\n                    break;\n            }\n\n            if (previousOnMessage) {\n                previousOnMessage(event)\n            }\n        }\n\n    }, [])\n\n    return null\n}\n\nexport default PlanckPhysicsWorkerMessagesHandler","import { MathUtils } from 'three';\n\nexport const lerp = MathUtils.lerp;\n","import {AddBodyDef, Buffers} from \"./types\";\nimport {Body} from \"planck-js\";\nimport {getNow} from \"../../../utils/time\";\nimport {lerp} from \"../../../utils/numbers\";\nimport {Object3D} from \"three\";\nimport {BodyData} from \"../../types\";\n\nexport type ApplyBufferDataFn = (\n    buffers: Buffers,\n    syncedBodies: {\n        [key: string]: any,\n    },\n    syncedBodiesOrder: string[]\n) => void\n\nexport const lerpBody = (body: BodyData, object: Object3D, stepRate: number) => {\n\n    const {\n        position,\n        angle,\n        lastUpdate,\n        previous,\n        applyRotation = true,\n    } = body\n\n    if (!position || angle == undefined) {\n        return\n    }\n\n    if (!previous.position || !previous.angle) {\n        object.position.x = position[0]\n        object.position.z = position[1]\n        if (applyRotation) {\n            object.rotation.z = angle as number\n        }\n        return\n    }\n\n    const now = getNow()\n\n    const nextExpectedUpdate = lastUpdate + stepRate + 1\n\n    const min = lastUpdate\n    const max = nextExpectedUpdate\n\n    let normalised = ((now - min) / (max - min))\n\n    normalised = normalised < 0 ? 0 : normalised > 1 ? 1 : normalised\n\n    const physicsRemainingRatio = normalised\n\n    object.position.x = lerp(\n        previous.position[0],\n        position[0],\n        physicsRemainingRatio\n    );\n\n    object.position.y = lerp(\n        previous.position[1],\n        position[1],\n        physicsRemainingRatio\n    );\n\n    if (applyRotation) {\n        object.rotation.z = angle as number; // todo - lerp\n    }\n}\n\nconst getPositionAndAngle = (\n    buffers: Buffers,\n    index: number\n): {\n    position: [number, number];\n    angle: number;\n} | null => {\n    if (index !== undefined && buffers.positions.length && buffers.angles.length) {\n        const start = index * 2;\n        const position = (buffers.positions.slice(start, start + 2) as unknown) as [\n            number,\n            number\n        ];\n        return {\n            position,\n            angle: buffers.angles[index],\n        };\n    } else {\n        return null;\n    }\n};\n\nexport const updateBodyData = (bodyData: BodyData, positions: Float32Array, angles: Float32Array) => {\n    bodyData.previous.position = bodyData.position\n    bodyData.previous.angle = bodyData.angle\n    const update = getPositionAndAngle({\n        positions,\n        angles,\n    }, bodyData.index)\n    if (update) {\n        bodyData.position = update.position\n        bodyData.angle = update.angle\n    }\n}\n\nexport const applyBufferData = (\n    buffers: Buffers,\n    syncedBodies: {\n        [key: string]: Body,\n    }, syncedBodiesOrder: string[]) => {\n\n    const {\n        positions,\n        angles,\n    } = buffers\n\n    syncedBodiesOrder.forEach((id, index) => {\n        const body = syncedBodies[id]\n        if (!body) return;\n        const position = body.getPosition();\n        const angle = body.getAngle();\n        positions[2 * index + 0] = position.x;\n        positions[2 * index + 1] = position.y;\n        angles[index] = angle;\n    })\n\n}\n\nexport const prepareObject = (object: Object3D, props: AddBodyDef) => {\n    if (props.body.position) {\n        object.position.x = props.body.position.x\n        object.position.z = props.body.position.y\n    }\n    if (props.body.angle) {\n        object.rotation.z = props.body.angle\n    }\n}","import {Buffers} from \"./types\";\n\nexport const generateBuffers = (maxNumberOfPhysicsObjects: number): Buffers => {\n    return {\n        positions: new Float32Array(maxNumberOfPhysicsObjects * 2),\n        angles: new Float32Array(maxNumberOfPhysicsObjects),\n    };\n};\n","import React, {useCallback, useMemo, useRef, useState} from \"react\";\nimport {World, Body} from \"planck-js\";\nimport {Context} from \"./PlanckPhysicsHandler.context\";\nimport {Context as AppContext} from \"./PlanckApp.context\";\nimport Physics from \"../../Physics\";\nimport WorkerSubscription from \"./WorkerSubscription\";\nimport PlanckPhysicsWorkerMessagesHandler from \"./PlanckPhysicsWorkerMessagesHandler\";\nimport {applyBufferData} from \"./updates\";\nimport {generateBuffers} from \"./buffers\";\n\n\nexport const usePhysicsBodies = (removeBody: any) => {\n\n    const [bodies] = useState<{\n        [key: string]: any,\n    }>({})\n    const [syncedBodies] = useState<{\n        [key: string]: any,\n    }>({})\n    const [syncedBodiesOrder] = useState<string[]>([])\n    const hasPendingSyncedBodiesRef = useRef(0)\n\n    const getPendingSyncedBodiesIteration = useCallback(() => {\n        return hasPendingSyncedBodiesRef.current\n    }, [])\n\n    const addSyncedBody = useCallback((uid: string, body: any) => {\n        syncedBodiesOrder.push(uid)\n        syncedBodies[uid] = body\n        hasPendingSyncedBodiesRef.current += 1\n        return () => {\n            const index = syncedBodiesOrder.indexOf(uid)\n            syncedBodiesOrder.splice(index, 1)\n            delete syncedBodies[uid]\n            hasPendingSyncedBodiesRef.current += 1\n        }\n    }, [])\n\n    const removeSyncedBody = useCallback((uid: string) => {\n        const index = syncedBodiesOrder.indexOf(uid)\n        syncedBodiesOrder.splice(index, 1)\n        delete syncedBodies[uid]\n        hasPendingSyncedBodiesRef.current += 1\n    }, [])\n\n    const addBody = useCallback((uid: string, body: any, synced: boolean = false) => {\n        bodies[uid] = body\n        let syncedUnsub: any\n        if (synced) {\n            syncedUnsub = addSyncedBody(uid, body)\n        }\n        return () => {\n            delete bodies[uid]\n            if (syncedUnsub) {\n                syncedUnsub()\n            }\n            if (removeBody) {\n                removeBody(body)\n            }\n        }\n    }, [])\n\n    return {\n        addSyncedBody,\n        removeSyncedBody,\n        getPendingSyncedBodiesIteration,\n        syncedBodiesOrder,\n        syncedBodies,\n        addBody,\n        bodies,\n    }\n\n}\n\nexport const usePhysicsUpdate = () => {\n\n    const countRef = useRef(0)\n\n    const workerSubscriptionsRef = useRef<{\n        [key: string]: () => void,\n    }>({})\n\n    const subscribeToPhysicsUpdates = useCallback((callback: () => void) => {\n        const id = countRef.current.toString()\n        countRef.current += 1\n        workerSubscriptionsRef.current[id] = callback\n\n        return () => {\n            delete workerSubscriptionsRef.current[id]\n        }\n\n    }, [])\n\n    const onUpdate =  useCallback(() => {\n\n        Object.values(workerSubscriptionsRef.current).forEach(callback => callback())\n\n    }, [])\n\n    return {\n        onUpdate,\n        subscribeToPhysicsUpdates,\n    }\n\n}\n\nexport const usePhysics = (removeBody: any = () => {}) => {\n\n    const {\n        addSyncedBody,\n        removeSyncedBody,\n        getPendingSyncedBodiesIteration,\n        syncedBodies,\n        syncedBodiesOrder,\n        addBody,\n        bodies,\n    } = usePhysicsBodies(removeBody)\n\n    const {\n        onUpdate,\n        subscribeToPhysicsUpdates,\n    } = usePhysicsUpdate()\n\n    return {\n        subscribeToPhysicsUpdates,\n        getPendingSyncedBodiesIteration,\n        syncedBodies,\n        syncedBodiesOrder,\n        addSyncedBody,\n        removeSyncedBody,\n        addBody,\n        bodies,\n        onUpdate,\n    }\n}\n\nconst PlanckPhysicsHandler: React.FC<{\n    world: World,\n    worker: Worker,\n    stepRate: number,\n    maxNumberOfSyncedBodies: number,\n}> = ({children, world, worker, stepRate, maxNumberOfSyncedBodies}) => {\n\n    const removeBody = useCallback((body: Body) => {\n        world.destroyBody(body)\n    }, [])\n\n    const {\n        subscribeToPhysicsUpdates,\n        getPendingSyncedBodiesIteration,\n        syncedBodies,\n        syncedBodiesOrder,\n        addSyncedBody,\n        removeSyncedBody,\n        addBody,\n        bodies,\n        onUpdate,\n    } = usePhysics(removeBody)\n\n    const {\n        onWorldStep\n    } = useMemo(() => ({\n        onWorldStep: () => {\n            world.step(stepRate / 1000)\n            world.clearForces()\n            onUpdate()\n        }\n    }), [])\n\n    return (\n        <Context.Provider value={{\n            getPendingSyncedBodiesIteration,\n            syncedBodies,\n            syncedBodiesOrder,\n            maxNumberOfSyncedBodies,\n        }}>\n            <WorkerSubscription applyBufferData={applyBufferData} generateBuffers={generateBuffers}\n                                worker={worker} subscribe={subscribeToPhysicsUpdates}/>\n            <AppContext.Provider value={{\n                world,\n                addSyncedBody,\n                removeSyncedBody,\n                addBody,\n                bodies,\n            }}>\n                <PlanckPhysicsWorkerMessagesHandler world={world} worker={worker}/>\n                <Physics onWorldStep={onWorldStep} stepRate={stepRate}>\n                    {children}\n                </Physics>\n            </AppContext.Provider>\n        </Context.Provider>\n    );\n};\n\nexport default PlanckPhysicsHandler;","import React, { useEffect, useState} from \"react\";\nimport {World} from \"planck-js\";\nimport {DEFAULT_STEP_RATE} from \"../../config\";\nimport PlanckPhysicsHandler from \"./PlanckPhysicsHandler\";\nimport {WorkerMessaging} from \"../../../generic\";\n\nconst usePlanckPhysics = () => {\n\n    const [world, setWorld] = useState<World | null>(null)\n\n    useEffect(() => {\n        const planckWorld = new World({allowSleep: false})\n        setWorld(planckWorld)\n    }, [])\n\n    return {\n        world,\n    }\n}\n\nconst PlanckApp: React.FC<{\n    worker: Worker,\n    stepRate?: number,\n    maxNumberOfSyncedBodies?: number,\n}> = ({children,\n                           stepRate = DEFAULT_STEP_RATE,\n                           maxNumberOfSyncedBodies = 100,\n                           worker}) => {\n\n    const {world} = usePlanckPhysics()\n\n    if (!world) return null\n\n    return (\n        <WorkerMessaging worker={worker}>\n            <PlanckPhysicsHandler world={world} worker={worker} stepRate={stepRate} maxNumberOfSyncedBodies={maxNumberOfSyncedBodies}>\n                {children}\n            </PlanckPhysicsHandler>\n        </WorkerMessaging>\n    );\n};\n\nexport default PlanckApp;","import React, {useEffect} from \"react\"\nimport {useFrame} from \"react-three-fiber\";\nimport {usePhysicsConsumerContext} from \"./PhysicsConsumer.context\";\n\nconst RAFSync: React.FC = () => {\n\n    const {syncMeshes} = usePhysicsConsumerContext()\n    useFrame(syncMeshes)\n\n    return null\n}\n\nconst IntervalSync: React.FC = () => {\n\n    const {syncMeshes} = usePhysicsConsumerContext()\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            syncMeshes()\n        }, 1000 / 30)\n        return () => {\n            clearInterval(interval)\n        }\n    }, [])\n\n    return null\n}\n\nconst PhysicsConsumerSyncMeshes: React.FC<{\n    useRAF?: boolean\n}> = ({\n    useRAF = false,\n}) => {\n    if (useRAF) return <RAFSync/>\n    return <IntervalSync/>\n}\n\nexport default PhysicsConsumerSyncMeshes","import React, {createContext, useContext} from \"react\"\nimport {Object3D} from \"three\";\n\ntype State = {\n    prepareObject: (object: Object3D, props: any) => void,\n}\n\nconst Context = createContext<State>(null as unknown as State)\n\nexport const usePhysicsConsumerHelpers = () => useContext(Context)\n\nconst PhysicsConsumerHelpers: React.FC<{\n    prepareObject: (object: Object3D, props: any) => void,\n}> = ({children, prepareObject}) => {\n    return (\n        <Context.Provider value={{prepareObject}}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport default PhysicsConsumerHelpers","import {AddBodyDef} from \"./types\";\nimport {MutableRefObject, useCallback, useEffect, useLayoutEffect, useRef, useState} from \"react\";\nimport {generateUUID} from \"../../../utils/ids\";\nimport {usePhysicsConsumerContext} from \"../../PhysicsConsumer.context\";\nimport {WorkerMessageType} from \"../../types\";\nimport {Object3D} from \"three\";\nimport {usePhysicsConsumerHelpers} from \"./PhysicsConsumerHelpers\";\nimport {useFixedUpdateContext} from \"../../PhysicsConsumer\";\n\nexport const useOnFixedUpdate = (callback: (delta: number) => void) => {\n    const {\n        subscribeToOnPhysicsUpdate\n    } = useFixedUpdateContext()\n\n    const callbackRef = useRef(callback)\n\n    useEffect(() => {\n        callbackRef.current = callback\n    }, [callback])\n\n    useEffect(() => {\n        return subscribeToOnPhysicsUpdate(callbackRef)\n    }, [])\n\n}\n\nexport const useBodyApi = (id: string) => {\n    const {sendMessage} = usePhysicsConsumerContext()\n\n    return useCallback((method: string,\n                        args: any[],) => {\n        sendMessage({\n            type: WorkerMessageType.MODIFY_BODY,\n            data: {\n                id,\n                method,\n                args,\n            }\n        })\n    }, [])\n\n}\n\nexport type Options = {\n    id?: string,\n    synced?: boolean,\n    listenForCollisions?: boolean,\n    ref?: MutableRefObject<Object3D>,\n}\n\nexport const useSyncBody = (id: string, ref: MutableRefObject<Object3D> | undefined, options?: {\n    applyRotation?: boolean,\n}) => {\n    const {\n        applyRotation = true\n    } = options ?? {}\n    const {\n        syncBody\n    } = usePhysicsConsumerContext()\n    // @ts-ignore\n    useLayoutEffect(() => {\n        if (!ref) return\n        if (!ref.current) {\n            ref.current = new Object3D()\n        }\n        return syncBody(id, ref as MutableRefObject<Object3D>, applyRotation)\n    }, [ref])\n}\n\nexport const useBody = (propsFn: () =>  any, options: Partial<Options> = {}, addToMessage?: (props: any, options: Partial<Options>) => any): [\n    MutableRefObject<Object3D>,\n    string\n] => {\n\n    const {sendMessage} = usePhysicsConsumerContext()\n    const [id] = useState(() => options.id ?? generateUUID())\n    const localRef = useRef<Object3D>(null as unknown as Object3D)\n\n    const {\n        prepareObject\n    } = usePhysicsConsumerHelpers() || {}\n\n    const [ref] = useState(() => options.ref || localRef)\n\n    useSyncBody(id, ref)\n\n    useLayoutEffect(() => {\n\n        const props = propsFn()\n\n        const object = ref.current\n\n        if (prepareObject) {\n            prepareObject(object, props)\n        }\n\n        sendMessage({\n            type: WorkerMessageType.ADD_BODY,\n            data: {\n                id,\n                props,\n                synced: options.synced ?? true,\n                ...(addToMessage ? addToMessage(props, options) : {})\n            },\n        })\n\n        return () => {\n            sendMessage({\n                type: WorkerMessageType.REMOVE_BODY,\n                data: {\n                    id,\n                },\n            })\n        }\n\n    }, [])\n\n    return [ref, id]\n\n}\n\nexport const usePlanckBody = (propsFn: () => AddBodyDef, options: Partial<Options> = {}): [\n    MutableRefObject<Object3D>,\n    string\n] => {\n    return useBody(propsFn, options)\n}","import {Body, Box, World, Sphere, Vec3} from \"cannon-es\";\nimport {AddBodyDef} from \"./types\";\n\nexport const createBody = (world: World, bodyDef: AddBodyDef) => {\n\n    const body = new Body(bodyDef.body);\n\n    bodyDef.shapes.forEach(({type, args}) => {\n        switch (type) {\n            case 'Box':\n                // @ts-ignore\n                const box = new Box(new Vec3(...args.map((v) => v / 2)))\n                body.addShape(box as unknown as any)\n                break;\n            case 'Sphere':\n                // @ts-ignore\n                const sphere = new Sphere(...args)\n                body.addShape(sphere as unknown as any)\n                break;\n            default:\n                break;\n        }\n    })\n    world.addBody(body);\n    return body;\n\n}","import React, {useEffect, useMemo} from \"react\"\nimport {WorkerMessageData, WorkerMessageType} from \"../../types\";\nimport {usePlanckAppContext} from \"../planckjs/PlanckApp.context\";\nimport {World} from \"cannon-es\";\nimport {AddBodyDef} from \"./types\";\nimport {createBody} from \"./bodies\";\n\nconst CannonPhysicsWorkerMessagesHandler: React.FC<{\n    world: World,\n    worker: Worker,\n}> = ({\n    world,\n                                                    worker,\n                                                }) => {\n\n    const {\n        addBody,\n        bodies,\n    } = usePlanckAppContext()\n\n    const {\n        handleAddBody,\n        handleModifyBody,\n    } = useMemo(() => ({\n        handleModifyBody: ({id, method, args}: {\n            id: string,\n            method: string,\n            args: any[],\n        }) => {\n            const body = bodies[id]\n            if (!body) {\n                console.warn(`No body found matching ${id}`)\n                return\n            }\n            (body as any)[method](...args)\n        },\n        handleAddBody: ({id, props, synced, listenForCollisions}: {\n            id: string,\n            props: AddBodyDef,\n            synced: boolean,\n            listenForCollisions?: boolean,\n        }) => {\n            const body = createBody(world, props)\n            // @ts-ignore\n            body.userData = {\n                id,\n                ...(props.userData ?? {}),\n            }\n            addBody(id, body, synced)\n            if (listenForCollisions) {\n                console.log('listenForCollisions')\n            }\n        }\n    }), [])\n\n    useEffect(() => {\n\n        const previousOnMessage: any = worker.onmessage\n\n        worker.onmessage = (event: any) => {\n\n            const message = event.data as WorkerMessageData\n\n            switch (message.type) {\n                case WorkerMessageType.ADD_BODY:\n                    handleAddBody(message.data)\n                    break;\n                case WorkerMessageType.MODIFY_BODY:\n                    handleModifyBody(message.data)\n                    break;\n            }\n\n            if (previousOnMessage) {\n                previousOnMessage(event)\n            }\n        }\n\n    }, [])\n\n    return null\n}\n\nexport default CannonPhysicsWorkerMessagesHandler","import {Body} from \"cannon-es\";\nimport {BodyData} from \"../../types\";\nimport {Object3D, Quaternion} from \"three\";\nimport {getNow} from \"../../../utils/time\";\nimport {lerp} from \"../../../utils/numbers\";\nimport { AddBodyDef } from \"./types\";\nimport { Buffers } from \"../planckjs/types\";\n\nexport const applyBufferData = (\n    buffers: Buffers,\n    syncedBodies: {\n        [key: string]: Body,\n    }, syncedBodiesOrder: string[]) => {\n\n    const {\n        positions,\n        angles,\n    } = buffers\n\n    syncedBodiesOrder.forEach((id, index) => {\n        const body = syncedBodies[id]\n        if (!body) return;\n        const position = body.position;\n        const quaternion = body.quaternion;\n        positions[3 * index + 0] = position.x\n        positions[3 * index + 1] = position.y\n        positions[3 * index + 2] = position.z\n        angles[4 * index + 0] = quaternion.x\n        angles[4 * index + 1] = quaternion.y\n        angles[4 * index + 2] = quaternion.z\n        angles[4 * index + 3] = quaternion.w\n    })\n\n}\n\nconst quat = new Quaternion()\n\nexport const lerpBody = (body: BodyData, object: Object3D, stepRate: number) => {\n    const {\n        position,\n        angle,\n        lastUpdate,\n        previous,\n    } = body\n\n    if (!position || !angle) return\n\n    if (!previous.position || !previous.angle) {\n        object.position.set(...position as [number, number, number])\n        object.quaternion.set(...angle as [number, number, number, number])\n        return\n    }\n\n    const now = getNow()\n\n    const nextExpectedUpdate = lastUpdate + stepRate + 1\n\n    const min = lastUpdate\n    const max = nextExpectedUpdate\n\n    let normalised = ((now - min) / (max - min))\n\n    normalised = normalised < 0 ? 0 : normalised > 1 ? 1 : normalised\n\n    const physicsRemainingRatio = normalised\n\n    object.position.x = lerp(\n        previous.position[0],\n        position[0],\n        physicsRemainingRatio\n    );\n\n    object.position.y = lerp(\n        previous.position[1],\n        position[1],\n        physicsRemainingRatio\n    );\n\n    object.position.z = lerp(\n        previous.position[2] as number,\n        position[2] as number,\n        physicsRemainingRatio\n    );\n\n    object.quaternion.fromArray(previous.angle as [number, number, number, number])\n    quat.fromArray(angle as [number, number, number, number])\n    object.quaternion.slerp(quat, physicsRemainingRatio)\n}\n\nconst getPositionAndAngle = (\n    buffers: Buffers,\n    index: number\n): {\n    position: [number, number, number];\n    angle: [number, number, number, number];\n} | null => {\n    if (index !== undefined && buffers.positions.length && buffers.angles.length) {\n        const start = index * 3;\n        const position = (buffers.positions.slice(start, start + 3) as unknown) as [\n            number,\n            number,\n            number,\n        ];\n        const angleStart = index * 4;\n        const angle = (buffers.angles.slice(angleStart, angleStart + 4) as unknown) as [\n            number,\n            number,\n            number,\n            number,\n        ];\n        return {\n            position,\n            angle,\n        };\n    } else {\n        return null;\n    }\n};\n\nexport const updateBodyData = (bodyData: BodyData, positions: Float32Array, angles: Float32Array) => {\n    bodyData.previous.position = bodyData.position\n    bodyData.previous.angle = bodyData.angle\n    const update = getPositionAndAngle({\n        positions,\n        angles,\n    }, bodyData.index)\n    if (update) {\n        bodyData.position = update.position\n        bodyData.angle = update.angle\n    }\n}\n\nexport const prepareObject = (object: Object3D, props: AddBodyDef) => {\n    if (props.body.position) {\n        object.position.set(...props.body.position.toArray())\n    }\n    if (props.body.quaternion) {\n        object.quaternion.set(...props.body.quaternion.toArray())\n    }\n}","import {Buffers} from \"../planckjs/types\";\n\nexport const generateBuffers = (maxNumberOfPhysicsObjects: number): Buffers => {\n    return {\n        positions: new Float32Array(maxNumberOfPhysicsObjects * 3),\n        angles: new Float32Array(maxNumberOfPhysicsObjects * 4),\n    };\n};\n","import { World, Body } from \"cannon-es\"\nimport React, {useCallback, useMemo, useRef} from \"react\"\nimport {getNow} from \"../../../utils/time\";\nimport Physics from \"../../Physics\";\nimport WorkerSubscription from \"../planckjs/WorkerSubscription\";\nimport {usePhysics} from \"../planckjs/PlanckPhysicsHandler\";\nimport {Context} from \"../planckjs/PlanckPhysicsHandler.context\";\nimport {Context as AppContext} from \"../planckjs/PlanckApp.context\";\nimport CannonPhysicsWorkerMessagesHandler from \"./CannonPhysicsWorkerMessagesHandler\";\nimport {applyBufferData} from \"./updates\";\nimport {generateBuffers} from \"./buffers\";\n\nconst CannonPhysicsHandler: React.FC<{\n    world: World,\n    worker: Worker,\n    stepRate: number,\n    maxNumberOfSyncedBodies: number,\n}> = ({children, world, stepRate, worker, maxNumberOfSyncedBodies}) => {\n\n    const removeBody = useCallback((body: Body) => {\n        world.removeBody(body)\n    }, [])\n\n    const {\n        subscribeToPhysicsUpdates,\n        getPendingSyncedBodiesIteration,\n        syncedBodies,\n        syncedBodiesOrder,\n        addSyncedBody,\n        removeSyncedBody,\n        addBody,\n        bodies,\n        onUpdate,\n    } = usePhysics(removeBody)\n\n    const localStateRef = useRef({\n        lastUpdate: getNow()\n    })\n\n    const {\n        onWorldStep\n    } = useMemo(() => ({\n        onWorldStep: () => {\n            const now = getNow()\n            const delta = (now - localStateRef.current.lastUpdate) / 1000;\n            localStateRef.current.lastUpdate = now;\n            world.step(stepRate / 1000, delta)\n            onUpdate()\n        }\n    }), [])\n\n    return (\n        <Context.Provider value={{\n            getPendingSyncedBodiesIteration,\n            syncedBodies,\n            syncedBodiesOrder,\n            maxNumberOfSyncedBodies,\n        }}>\n            <WorkerSubscription applyBufferData={applyBufferData} generateBuffers={generateBuffers}\n                                worker={worker} subscribe={subscribeToPhysicsUpdates}/>\n            <AppContext.Provider value={{\n                world,\n                addSyncedBody,\n                removeSyncedBody,\n                addBody,\n                bodies,\n            }}>\n                <CannonPhysicsWorkerMessagesHandler world={world} worker={worker}/>\n                <Physics onWorldStep={onWorldStep} stepRate={stepRate}>\n                    {children}\n                </Physics>\n            </AppContext.Provider>\n        </Context.Provider>\n    )\n}\n\nexport default CannonPhysicsHandler","import { World } from \"cannon-es\"\nimport React, {useEffect, useState} from \"react\"\nimport CannonPhysicsHandler from \"./CannonPhysicsHandler\";\nimport {DEFAULT_STEP_RATE} from \"../../config\";\nimport {WorkerMessaging} from \"../../../generic\";\n\nconst useCannonPhysics = () => {\n\n    const [world, setWorld] = useState<World | null>(null)\n\n    useEffect(() => {\n\n        const cannonWorld = new World()\n        cannonWorld.gravity.set(0, -9.81, 0)\n        setWorld(cannonWorld)\n\n        cannonWorld.addEventListener('beginContact', () => {\n            // todo\n        })\n\n        cannonWorld.addEventListener('endContact', () => {\n            // todo\n        })\n\n    }, [])\n\n    return {\n        world,\n    }\n\n}\n\nconst CannonApp: React.FC<{\n    worker: Worker,\n    stepRate?: number,\n    maxNumberOfSyncedBodies?: number,\n}> = ({\n                           children,\n                           stepRate = DEFAULT_STEP_RATE,\n                           maxNumberOfSyncedBodies = 100,\n                           worker}) => {\n\n    const {world} = useCannonPhysics()\n\n    if (!world) return null\n\n    return (\n        <WorkerMessaging worker={worker}>\n            <CannonPhysicsHandler world={world} worker={worker} stepRate={stepRate} maxNumberOfSyncedBodies={maxNumberOfSyncedBodies}>\n                {children}\n            </CannonPhysicsHandler>\n        </WorkerMessaging>\n    )\n}\n\nexport default CannonApp","import React from \"react\"\nimport {PhysicsConsumer} from \"../../../index\";\nimport {lerpBody, prepareObject, updateBodyData} from \"./updates\";\nimport PhysicsConsumerHelpers from \"./PhysicsConsumerHelpers\";\n\nconst PlanckPhysicsConsumer: React.FC<{\n    worker: Worker,\n    stepRate: number,\n}> = ({worker, stepRate, children}) => {\n    return (\n        <PhysicsConsumer updateBodyData={updateBodyData} lerpBody={lerpBody} worker={worker} stepRate={stepRate}>\n            <PhysicsConsumerHelpers prepareObject={prepareObject}>\n                {children}\n            </PhysicsConsumerHelpers>\n        </PhysicsConsumer>\n    )\n}\n\nexport default PlanckPhysicsConsumer","import React from \"react\"\nimport {PhysicsConsumer} from \"../../../index\";\nimport {lerpBody, prepareObject, updateBodyData} from \"./updates\";\nimport PhysicsConsumerHelpers from \"../planckjs/PhysicsConsumerHelpers\";\n\nconst CannonPhysicsConsumer: React.FC<{\n    worker: Worker,\n    stepRate: number,\n}> = ({worker, stepRate, children}) => {\n    return (\n        <PhysicsConsumer updateBodyData={updateBodyData} lerpBody={lerpBody} worker={worker} stepRate={stepRate}>\n            <PhysicsConsumerHelpers prepareObject={prepareObject}>\n                {children}\n            </PhysicsConsumerHelpers>\n        </PhysicsConsumer>\n    )\n}\n\nexport default CannonPhysicsConsumer","import {AddBodyDef as CannonAddBodyDef} from \"./types\";\nimport {MutableRefObject} from \"react\";\nimport {Object3D} from \"three\";\nimport {Options, useBody} from \"../planckjs/hooks\";\n\n// @ts-ignore\nexport const addToMessage = (props: CannonAddBodyDef, options: Partial<Options>) => {\n    const message: {\n        [key: string]: any,\n    } = {}\n    if (options.listenForCollisions) {\n        message.listenForCollisions = true\n    }\n    return message\n}\n\nexport const useCannonBody = (propsFn: () => CannonAddBodyDef, options: Partial<Options> = {}): [\n    MutableRefObject<Object3D>,\n    string\n] => {\n    return useBody(propsFn, options, addToMessage)\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import {Buffers} from \"../planckjs/types\";\nimport {RigidBody} from \"@dimforge/rapier3d-compat/rapier.js\";\nimport {Object3D} from \"three\";\nimport { AddBodyDef } from \"./types\";\n\nexport const applyBufferData = (\n    buffers: Buffers,\n    syncedBodies: {\n        [key: string]: RigidBody,\n    }, syncedBodiesOrder: string[]) => {\n\n    const {\n        positions,\n        angles,\n    } = buffers\n\n    syncedBodiesOrder.forEach((id, index) => {\n        const body = syncedBodies[id]\n        if (!body) return;\n        const position = body.translation();\n        const quaternion = body.rotation();\n        positions[3 * index + 0] = position.x\n        positions[3 * index + 1] = position.y\n        positions[3 * index + 2] = position.z\n        angles[4 * index + 0] = quaternion.x\n        angles[4 * index + 1] = quaternion.y\n        angles[4 * index + 2] = quaternion.z\n        angles[4 * index + 3] = quaternion.w\n    })\n\n}\n\nexport const prepareObject = (object: Object3D, props: AddBodyDef) => {\n    if (props.body.position) {\n        object.position.set(...props.body.position as [number, number, number])\n    }\n    if (props.body.quaternion) {\n        object.quaternion.set(...props.body.quaternion as [number, number, number, number])\n    }\n}","import {World, RigidBodyDesc, ColliderDesc, RigidBody} from \"@dimforge/rapier3d-compat/rapier.js\";\nimport {AddBodyDef, ColliderDef} from \"./types\";\n\nconst createColliderDesc = (colliderDef: ColliderDef): ColliderDesc | null => {\n    switch (colliderDef.type) {\n        case \"Ball\":\n            // @ts-ignore\n            return ColliderDesc.ball(...colliderDef.args);\n        case \"Cubiod\":\n            // @ts-ignore\n            return ColliderDesc.cuboid(...colliderDef.args);\n    }\n    return null\n}\n\n// const getCollisionGroups = (myGroups: number[], interactGroups: number[]) => {\n//     let result = 0;\n//     for (let g of myGroups)\n//     {\n//         result += (1 << g);\n//     }\n//     result = result << 16;\n//\n//     for (let f of interactGroups)\n//     {\n//         result += (1 << f);\n//     }\n//     return result;\n// }\n\nconst createCollider = (world: World, body: RigidBody, colliderDef: ColliderDef) => {\n    const collider = createColliderDesc(colliderDef)\n    if (!collider) return\n    world.createCollider(collider, body.handle)\n}\n\nexport const removeBody = (world: World, body: RigidBody) => {\n    world.removeRigidBody(body)\n}\n\nexport const createBody = (world: World, bodyDef: AddBodyDef) => {\n\n    const rigidBodyDesc = new RigidBodyDesc(bodyDef.body.type);\n\n    if (bodyDef.body.mass != undefined) {\n        rigidBodyDesc.setMass(bodyDef.body.mass)\n    }\n    if (bodyDef.body.position) {\n        rigidBodyDesc.setTranslation(...(bodyDef.body.position as [number, number, number]))\n    }\n    if (bodyDef.body.quaternion) {\n        rigidBodyDesc.setRotation({\n            x: bodyDef.body.quaternion[0],\n            y: bodyDef.body.quaternion[1],\n            z: bodyDef.body.quaternion[2],\n            w: bodyDef.body.quaternion[3],\n        })\n    }\n    const body = world.createRigidBody(rigidBodyDesc);\n\n    bodyDef.colliders.forEach((collider) => {\n        createCollider(world, body, collider)\n    })\n\n    return body\n\n}","import {AddBodyDef} from \"./types\";\n\nexport type CustomBodyModifiers = {\n    [key: string]: (body: any) => void,\n}\n\nexport const customData: {\n    customBodyModifiers: CustomBodyModifiers,\n} = {\n    customBodyModifiers: {},\n}\n\nexport const getCustomBodyModifier = (bodyDef: AddBodyDef) => {\n    if (bodyDef.customBody && customData.customBodyModifiers[bodyDef.customBody]) {\n        return customData.customBodyModifiers[bodyDef.customBody]\n    }\n    return undefined\n}","import React, {useEffect, useMemo, useRef} from \"react\"\nimport {World} from \"@dimforge/rapier3d-compat/rapier.js\";\nimport {usePlanckAppContext} from \"../planckjs/PlanckApp.context\";\nimport {WorkerMessageData, WorkerMessageType} from \"../../types\";\nimport {AddBodyDef} from \"./types\";\nimport {createBody} from \"./bodies\";\nimport {getCustomBodyModifier} from \"./custom\";\n\nconst Rapier3DPhysicsWorkerMessagesHandler: React.FC<{\n    world: World,\n    worker: Worker,\n}> = ({\n    world,\n    worker,\n    }) => {\n\n    const {\n        addBody,\n        bodies,\n    } = usePlanckAppContext()\n\n    const localStateRef = useRef<{\n        removeCallbacks: {\n            [key: string]: () => void,\n        }\n    }>({\n        removeCallbacks: {},\n    })\n\n    const {\n        handleAddBody,\n        handleModifyBody,\n        handleRemoveBody,\n    } = useMemo(() => ({\n        handleModifyBody: ({id, method, args}: {\n            id: string,\n            method: string,\n            args: any[],\n        }) => {\n            const body = bodies[id]\n            if (!body) {\n                console.warn(`No body found matching ${id}`)\n                return\n            }\n            (body as any)[method](...args)\n        },\n        handleAddBody: ({id, props, synced}: {\n            id: string,\n            props: AddBodyDef,\n            synced: boolean,\n            listenForCollisions?: boolean,\n        }) => {\n            const body = createBody(world, props)\n            const customModifier = getCustomBodyModifier(props)\n            if (customModifier) {\n                customModifier(body)\n            }\n            localStateRef.current.removeCallbacks[id] = addBody(id, body, synced)\n        },\n        handleRemoveBody: ({id}: {\n            id: string\n        }) => {\n            const body = bodies[id]\n            world.removeRigidBody(body)\n            if (localStateRef.current.removeCallbacks[id]) {\n                localStateRef.current.removeCallbacks[id]()\n            }\n        }\n    }), [])\n\n    useEffect(() => {\n\n        const previousOnMessage: any = worker.onmessage\n\n        worker.onmessage = (event: any) => {\n\n            const message = event.data as WorkerMessageData\n\n            switch (message.type) {\n                case WorkerMessageType.ADD_BODY:\n                    handleAddBody(message.data)\n                    break;\n                case WorkerMessageType.REMOVE_BODY:\n                    handleRemoveBody(message.data)\n                    break;\n                case WorkerMessageType.MODIFY_BODY:\n                    handleModifyBody(message.data)\n                    break;\n            }\n\n            if (previousOnMessage) {\n                previousOnMessage(event)\n            }\n        }\n\n    }, [])\n\n    return null\n}\n\nexport default Rapier3DPhysicsWorkerMessagesHandler","import React, {useCallback, useMemo, useState} from \"react\"\nimport {World} from \"@dimforge/rapier3d-compat/rapier.js\";\nimport {usePhysics} from \"../planckjs/PlanckPhysicsHandler\";\nimport {Context} from \"../planckjs/PlanckPhysicsHandler.context\";\nimport WorkerSubscription from \"../planckjs/WorkerSubscription\";\nimport {generateBuffers} from \"../cannon/buffers\";\nimport {Context as AppContext} from \"../planckjs/PlanckApp.context\";\nimport Physics from \"../../Physics\";\nimport {applyBufferData} from \"./updates\";\nimport Rapier3DPhysicsWorkerMessagesHandler from \"./Rapier3DPhysicsWorkerMessagesHandler\";\nimport {removeBody} from \"./bodies\";\n\nconst Rapier3DPhysicsHandler: React.FC<{\n    world: World,\n    worker: Worker,\n    stepRate: number,\n    maxNumberOfSyncedBodies: number,\n}> = ({\n    children,\n    world,\n    stepRate,\n    worker,\n    maxNumberOfSyncedBodies\n}) => {\n\n    const customRemoveBody = useCallback((body: any) => {\n        removeBody(world, body)\n    }, [])\n\n    const {\n        subscribeToPhysicsUpdates,\n        getPendingSyncedBodiesIteration,\n        syncedBodies,\n        syncedBodiesOrder,\n        addSyncedBody,\n        removeSyncedBody,\n        addBody,\n        bodies,\n        onUpdate,\n    } = usePhysics(customRemoveBody)\n\n    const [paused, setPaused] = useState(false)\n\n    const {\n        onWorldStep\n    } = useMemo(() => ({\n        onWorldStep: () => {\n            if (paused) return\n            world.step()\n            onUpdate()\n        }\n    }), [paused])\n\n    return (\n        <Context.Provider value={{\n            getPendingSyncedBodiesIteration,\n            syncedBodies,\n            syncedBodiesOrder,\n            maxNumberOfSyncedBodies,\n        }}>\n            <WorkerSubscription applyBufferData={applyBufferData} generateBuffers={generateBuffers}\n                                worker={worker} subscribe={subscribeToPhysicsUpdates} setPaused={setPaused}/>\n            <AppContext.Provider value={{\n                world,\n                addSyncedBody,\n                removeSyncedBody,\n                addBody,\n                bodies,\n            }}>\n                <Rapier3DPhysicsWorkerMessagesHandler world={world} worker={worker}/>\n                <Physics onWorldStep={onWorldStep} stepRate={stepRate}>\n                    {children}\n                </Physics>\n            </AppContext.Provider>\n        </Context.Provider>\n    )\n}\n\nexport default Rapier3DPhysicsHandler","import React, {useCallback, useEffect, useState} from \"react\"\nimport * as RAPIER from \"@dimforge/rapier3d-compat/rapier.js\"\nimport {DEFAULT_STEP_RATE} from \"../../config\";\nimport Rapier3DPhysicsHandler from \"./Rapier3DPhysicsHandler\";\nimport {CustomBodyModifiers, customData} from \"./custom\";\nimport {WorkerMessaging} from \"../../../generic\";\n\nconst useRapier3dPhysics = (stepRate: number) => {\n\n    const [world, setWorld] = useState<RAPIER.World | null>(null)\n\n    const init = useCallback(async () => {\n        // @ts-ignore\n        await RAPIER.init()\n\n        const gravity = new RAPIER.Vector3(0.0, -9.81, 0.0);\n        const rapierWorld = new RAPIER.World(gravity);\n        rapierWorld.timestep = stepRate / 1000\n        setWorld(rapierWorld)\n\n    }, [])\n\n    useEffect(() => {\n        init()\n    }, [])\n\n    return {\n        world,\n    }\n\n}\n\nconst Rapier3DApp: React.FC<{\n    worker: Worker,\n    stepRate?: number,\n    maxNumberOfSyncedBodies?: number,\n    customBodyModifiers?: CustomBodyModifiers\n}> = ({\n                             children,\n                             stepRate = DEFAULT_STEP_RATE,\n                             maxNumberOfSyncedBodies = 100,\n                             customBodyModifiers = {},\n                             worker}) => {\n\n    const {world} = useRapier3dPhysics(stepRate)\n\n    useEffect(() => {\n        customData.customBodyModifiers = customBodyModifiers\n    }, [customBodyModifiers])\n\n    if (!world) return null\n\n    return (\n        <WorkerMessaging worker={worker}>\n            <Rapier3DPhysicsHandler world={world} worker={worker} stepRate={stepRate} maxNumberOfSyncedBodies={maxNumberOfSyncedBodies}>\n                {children}\n            </Rapier3DPhysicsHandler>\n        </WorkerMessaging>\n    )\n}\n\nexport default Rapier3DApp","import React from \"react\"\nimport {lerpBody, updateBodyData} from \"../cannon/updates\";\nimport PhysicsConsumerHelpers from \"../planckjs/PhysicsConsumerHelpers\";\nimport {PhysicsConsumer} from \"../../../index\";\nimport {prepareObject} from \"./updates\";\nimport {DefaultPhysicsConsumerProps} from \"../../PhysicsConsumer\";\n\nconst Rapier3DPhysicsConsumer: React.FC<DefaultPhysicsConsumerProps> = ({children, ...props}) => {\n    return (\n        <PhysicsConsumer updateBodyData={updateBodyData} lerpBody={lerpBody} {...props}>\n            <PhysicsConsumerHelpers prepareObject={prepareObject}>\n                {children}\n            </PhysicsConsumerHelpers>\n        </PhysicsConsumer>\n    )\n}\n\nexport default Rapier3DPhysicsConsumer","import {Options, useBody} from \"../planckjs/hooks\";\nimport {MutableRefObject} from \"react\";\nimport {Object3D} from \"three\";\nimport {addToMessage} from \"../cannon/hooks\";\nimport {AddBodyDef} from \"./types\";\n\nexport const useRapier3DBody = (propsFn: () => AddBodyDef, options: Partial<Options> = {}): [\n    MutableRefObject<Object3D>,\n    string\n] => {\n    return useBody(propsFn, options, addToMessage)\n}"],"names":["createWorkerApp","app","render","createElement","worker","self","Context","createContext","createNewPhysicsLoopWebWorker","stepRate","Worker","encodeURIComponent","start","Date","now","getNow","performance","WorkerMessageType","DEFAULT_STEP_RATE","usePhysicsConsumerContext","useContext","generateUUID","MathUtils","useTransferKeyEvents","useEffect","onKeyDown","event","repeat","code","key","keyCode","postMessage","type","data","onKeyUp","window","addEventListener","removeEventListener","useActiveKeys","create","activeKeys","rawActiveKeys","setActiveKey","active","setState","state","useHandleKeyEvents","previousOnMessage","onmessage","MessageType","useSyncComponent","id","props","sendMessage","message","mounted","value","unmounted","SyncedComponentProp","propKey","firstUpdateRef","useRef","current","propUpdate","propRemoved","SyncedComponent","passedId","useWorkerSendMessage","useState","React","Object","entries","map","useWorker","WorkerMessaging","children","useCallback","CUSTOM","Provider","SyncComponents","components","storedComponents","setComponents","handleCustomMessage","updated","existing","updatedProps","component","Component","FixedUpdateContext","useFixedUpdateContext","OnFixedUpdateProvider","localStateRef","subscriptionsIterator","onFixedUpdateSubscriptions","useMemo","subscribeToOnPhysicsUpdate","callback","toString","updateSubscriptions","delta","values","forEach","PhysicsConsumer","paused","updateBodyData","lerpBody","connected","setConnected","bodiesData","lastUpdate","bodies","onFrameCallbacks","lerpMesh","body","ref","object","onUpdate","updateTime","positions","angles","bodyData","index","indexOf","interval","setInterval","PHYSICS_READY","clearInterval","PHYSICS_SET_PAUSED","PHYSICS_ACKNOWLEDGED","PHYSICS_UPDATE","PHYSICS_PROCESSED","buffer","syncBody","applyRotation","lastRender","previous","syncMeshes","PhysicsConsumerSyncMeshes","useRAF","Wrapper","usePhysicsWorldStepHandler","onWorldStep","stepWorld","stepWorldRef","PhysicsProvider","Physics","usePlanckPhysicsHandlerContext","usePlanckAppContext","WorkerSubscription","subscribe","applyBufferData","generateBuffers","setPaused","getPendingSyncedBodiesIteration","syncedBodies","syncedBodiesOrder","maxNumberOfSyncedBodies","buffers","bodiesIteration","buffersAvailable","setBuffersAvailable","updateCount","setUpdateCount","updateWorker","update","shouldSyncBodies","updateWorkerRef","onUpdateRef","FixtureShape","createFixtureShape","shape","args","Circle","Box","createBody","world","bodyDef","fixtures","fixtureOptions","fixtureShape","createFixture","PlanckPhysicsWorkerMessagesHandler","addBody","handleModifyBody","method","console","warn","handleAddBody","synced","ADD_BODY","MODIFY_BODY","lerp","position","angle","undefined","x","z","rotation","nextExpectedUpdate","min","max","normalised","physicsRemainingRatio","y","getPositionAndAngle","length","slice","getPosition","getAngle","prepareObject","maxNumberOfPhysicsObjects","Float32Array","usePhysicsBodies","removeBody","hasPendingSyncedBodiesRef","addSyncedBody","uid","push","splice","removeSyncedBody","syncedUnsub","usePhysicsUpdate","countRef","workerSubscriptionsRef","subscribeToPhysicsUpdates","usePhysics","PlanckPhysicsHandler","destroyBody","step","clearForces","AppContext","usePlanckPhysics","setWorld","planckWorld","World","allowSleep","PlanckApp","RAFSync","useFrame","IntervalSync","usePhysicsConsumerHelpers","PhysicsConsumerHelpers","useOnFixedUpdate","callbackRef","useBodyApi","useSyncBody","options","useLayoutEffect","Object3D","useBody","propsFn","addToMessage","localRef","REMOVE_BODY","usePlanckBody","Body","shapes","box","Vec3","v","addShape","sphere","Sphere","CannonPhysicsWorkerMessagesHandler","listenForCollisions","userData","log","quaternion","w","quat","Quaternion","set","fromArray","slerp","angleStart","toArray","CannonPhysicsHandler","useCannonPhysics","cannonWorld","gravity","CannonApp","PlanckPhysicsConsumer","CannonPhysicsConsumer","useCannonBody","translation","createColliderDesc","colliderDef","ColliderDesc","ball","cuboid","createCollider","collider","handle","removeRigidBody","rigidBodyDesc","RigidBodyDesc","mass","setMass","setTranslation","setRotation","createRigidBody","colliders","customData","customBodyModifiers","getCustomBodyModifier","customBody","Rapier3DPhysicsWorkerMessagesHandler","removeCallbacks","customModifier","handleRemoveBody","Rapier3DPhysicsHandler","customRemoveBody","useRapier3dPhysics","init","RAPIER","rapierWorld","timestep","Rapier3DApp","Rapier3DPhysicsConsumer","useRapier3DBody"],"mappings":"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"}